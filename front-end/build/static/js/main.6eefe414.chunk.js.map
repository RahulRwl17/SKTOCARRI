{"version":3,"sources":["assets/img/theme/profile-cover.jpg","assets/img/brand/argon-react.png","assets/img/theme/bootstrap.jpg","assets/img/theme/angular.jpg","assets/img/theme/sketch.jpg","assets/img/theme/react.jpg","assets/img/theme/vue.jpg","assets/img/brand/logo.png","assets/img/theme/team-4-800x800.jpg","assets/img/theme/team-1-800x800.jpg","assets/img/theme/team-2-800x800.jpg","assets/img/theme/team-3-800x800.jpg","assets/img/brand/RECT_HOR.png","config.js","network/ApiAxios.js","components/Navbars/AdminNavbar.js","components/Footers/AdminFooter.js","components/Sidebar/Sidebar.js","components/Headers/Header.js","views/Index.js","components/Headers/UserHeader.js","views/examples/Profile.js","views/examples/Maps.js","views/examples/Register.js","components/Headers/EditHeader.js","views/examples/RegisterUser.js","views/examples/Login.js","views/examples/ConfirmEmail.js","views/examples/Icons.js","routes.js","views/examples/EditProfile.js","views/examples/UsersTable.js","views/examples/ResetPassword.js","views/examples/ConfirmPassword.js","views/examples/ResetPasswordSuccess.js","layouts/Admin.js","components/Navbars/AuthNavbar.js","components/Footers/AuthFooter.js","layouts/Auth.js","components/PrivateRoute/PrivateRoute.js","components/PrivateRoute/AuthRoutes.js","index.js","variables/charts.js"],"names":["config","WS_BASE_URL","DOMAIN_NAME","DEMO","instance","axios","create","baseURL","interceptors","request","use","a","token","localStorage","getItem","headers","Authorization","ContentType","getAllUsers","post","getSingleUsers","_id","Delete","register","name","email","password","phone","agency","role","pass","confirmRegister","id","forgotPassword","confirmReset","login","logout","edit","userID","userEdit","mobile","perAddress","tempAddress","Confirm","AdminNavbar","props","username","JSON","parse","logOut","response","data","success","removeItem","history","push","Navbar","className","expand","Container","fluid","to","brandText","Nav","navbar","UncontrolledDropdown","nav","DropdownToggle","Media","alt","src","require","default","DropdownMenu","right","DropdownItem","header","tag","Link","divider","href","onClick","Footer","Row","Col","xl","target","React","Component","Sidebar","state","collapseOpen","toggleCollapse","setState","closeCollapse","createLinks","routes","map","prop","key","layout","api","NavItem","NavLink","path","NavLinkRRD","activeClassName","icon","createApiLinks","filter","route","e","preventDefault","activeRoute","bind","routeName","this","location","pathname","indexOf","navbarBrandProps","bgColor","logo","innerLink","outterLink","type","NavbarBrand","imgAlt","imgSrc","aria-labelledby","Collapse","isOpen","xs","Form","InputGroup","Input","aria-label","placeholder","InputGroupAddon","addonType","InputGroupText","defaultProps","Header","useState","sys","setSys","useEffect","io","connect","on","lg","Card","CardBody","CardTitle","memory","cpu","Index","toggleNavs","index","activeNav","chartExample1Data","window","Chart","parseOptions","chartOptions","CardHeader","pills","classnames","active","data-toggle","chartExample1","options","getDatasetAtEvent","console","log","chartExample2","UserHeader","userName","useHistory","style","minHeight","backgroundImage","backgroundSize","backgroundPosition","md","Profile","user","setUser","setChecked","error","setError","loading","setLoading","setMobile","setTempAddress","setPerAddress","accountConfirmation","runAsync","ApproveUserTamplate","Button","color","Approved","msg","DeleteUser","handleSubmit","fname","lname","photo","FormGroup","htmlFor","defaultValue","disabled","onChange","value","date","dob","aadhar","signature","castCert","MapWrapper","withScriptjs","withGoogleMap","defaultZoom","defaultCenter","lat","lng","defaultOptions","scrollwheel","styles","featureType","elementType","stylers","visibility","saturation","lightness","position","Register","setName","setEmail","setPassword","confirmPassword","setConfirmPassword","showToast","setShowToast","toastMessage","setToastMessage","setUserID","registerUser","aria-live","aria-atomic","width","bottom","zIndex","Toast","top","backgroundColor","padding","borderRadius","onClose","show","delay","autohide","height","Body","autoComplete","EditHeader","RegisterUser","isTempAddIsPerAdd","tempAddLine1","setTempAddLine1","tempAddLine2","setTempAddLine2","tempAddArea","setTempAddArea","tempAddCity","setTempAddCity","tempAddState","setTempAddState","tempAddPin","setTempAddPin","perAddLine1","setPerAddLine1","perAddLine2","setPerAddLine2","perAddArea","setPerAddArea","perAddCity","setPerAddCity","perAddState","setPerAddState","perAddPin","setPerAddPin","Date","setFName","setLName","size","Login","tryLogin","setItem","stringify","admin","ConfirmEmail","useParams","valid","setValid","setTimeout","component","isTestUser","setIsTestUser","editUser","users","setUsers","currentPage","setCurrentPage","usersPerPage","Pending","UserList","cursor","scope","Badge","PaginationComponent","totalUsers","paginate","PageNumber","i","Math","ceil","CardFooter","Pagination","listClassName","number","PaginationItem","PaginationLink","indexOfLastUser","indexOfFirstUser","currentUsers","slice","Table","responsive","length","pageNumber","sendEmail","errors","confirm","Admin","getRoutes","getBrandText","document","documentElement","scrollTop","scrollingElement","refs","mainContent","ref","from","AdminFooter","UncontrolledCollapse","toggler","Auth","body","classList","add","remove","AuthNavbar","xmlns","preserveAspectRatio","version","viewBox","x","y","points","AuthFooter","PrivateRoute","rest","render","AuthRoutes","ReactDOM","AdminLayout","AuthLayout","getElementById","elements","Rectangle","prototype","draw","left","signX","signY","borderSkipped","ctx","_chart","vm","_view","borderWidth","horizontal","base","barSize","min","abs","halfStroke","borderLeft","borderRight","borderTop","borderBottom","beginPath","fillStyle","strokeStyle","borderColor","lineWidth","corners","startCorner","cornerAt","corner","moveTo","nextCornerId","radius","lineTo","quadraticCurveTo","fill","stroke","fonts","colors","100","200","300","400","500","600","700","800","900","primary","secondary","info","danger","warning","scales","yAxes","gridLines","zeroLineColor","ticks","callback","tooltips","callbacks","label","item","datasets","datasetIndex","yLabel","content","data1","canvas","labels","data2","module","exports","defaults","global","maintainAspectRatio","defaultColor","defaultFontColor","defaultFontFamily","defaultFontSize","legend","display","usePointStyle","point","line","tension","borderCapStyle","rectangle","arc","enabled","mode","intersect","doughnut","cutoutPercentage","legendCallback","chart","forEach","scaleService","updateScaleDefaults","borderDash","borderDashOffset","drawBorder","drawTicks","zeroLineWidth","zeroLineBorderDash","zeroLineBorderDashOffset","beginAtZero","drawOnChartArea","parent","maxBarThickness"],"mappings":"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","file":"static/js/main.6eefe414.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/profile-cover.97899245.jpg\";","export default __webpack_public_path__ + \"static/media/argon-react.128d71d3.png\";","export default __webpack_public_path__ + \"static/media/bootstrap.bd712487.jpg\";","export default __webpack_public_path__ + \"static/media/angular.b5045666.jpg\";","export default __webpack_public_path__ + \"static/media/sketch.a6af780a.jpg\";","export default __webpack_public_path__ + \"static/media/react.0e8c9066.jpg\";","export default __webpack_public_path__ + \"static/media/vue.43bd93a8.jpg\";","export default __webpack_public_path__ + \"static/media/logo.63b38ed0.png\";","export default __webpack_public_path__ + \"static/media/team-4-800x800.99c612eb.jpg\";","export default __webpack_public_path__ + \"static/media/team-1-800x800.fa5a7ac2.jpg\";","export default __webpack_public_path__ + \"static/media/team-2-800x800.3e08ef14.jpg\";","export default __webpack_public_path__ + \"static/media/team-3-800x800.70911cdd.jpg\";","export default __webpack_public_path__ + \"static/media/RECT_HOR.44455fe4.png\";","const config = {\n    WS_BASE_URL: 'http://localhost:5100/api/',\n    DOMAIN_NAME: 'https://rectgujarat.org',\n    DEMO: false\n}\n\nexport default config;\n","import axios from 'axios';\nimport config from \"../config\";\n\n// const https = require('https');\n//\n// const agent = new https.Agent({\n//     rejectUnauthorized: false,\n// });\n\nconst instance = axios.create({\n    baseURL: config.WS_BASE_URL,\n});\n\ninstance.interceptors.request.use(async (config) => {\n    const token = localStorage.getItem('token');\n    config.headers.Authorization = (token ? token : '');\n    config.headers.ContentType = 'application/json';\n    return config;\n});\n\nexport const getAllAdmin = async () => (\n    await instance.post('admin/all')\n);\n\nexport const getAllUsers = async () => (\n    await instance.post('user/all')\n);\n\nexport const getSingleUsers = async (_id) => (\n    await instance.post('user/single', { _id })\n);\n\nexport const Delete = async (_id) => (\n    await instance.post('user/single/delete', { _id })\n);\n\nexport const register = async (name, email, password, phone, agency, role) => {\n    var pass = password\n    return await instance.post('admin/register', { name, email, pass, phone, agency, role })\n};\n\nexport const registerUser = async (name, email, password, phone, agency, role) => {\n    var pass = password\n    return await instance.post('admin/register', { name, email, pass, phone, agency, role })\n};\n\nexport const confirmRegister = async id => (\n    await instance.post(`admin/confirm/${id}`)\n);\n\nexport const forgotPassword = async email => (\n    await instance.post('admin/forgotpassword', { email })\n);\n\nexport const confirmReset = async (id, password) => (\n    await instance.post(`admin/resetpass/${id}`, { password })\n);\n\nexport const login = async (email, password) => (\n    await instance.post('admin/login', { email, password })\n);\n\nexport const logout = async token => (\n    await instance.post('admin/logout', { token })\n);\n\nexport const edit = async (userID, name, email) => (\n    await instance.post('/admin/edit', { userID, name, email })\n);\n\nexport const userEdit = async (_id, mobile, perAddress, tempAddress) => (\n    await instance.post('/user/edit', { _id, mobile, perAddress, tempAddress })\n);\n\nexport const Confirm = async (_id) => (\n    await instance.post('/user/confirm', { _id })\n);\n","/*!\n\n=========================================================\n* Argon Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\n// reactstrap components\nimport {\n    DropdownMenu,\n    DropdownItem,\n    UncontrolledDropdown,\n    DropdownToggle,\n    Form,\n    FormGroup,\n    InputGroupAddon,\n    InputGroupText,\n    Input,\n    InputGroup,\n    Navbar,\n    Nav,\n    Container,\n    Media\n} from \"reactstrap\";\nimport { logout } from \"../../network/ApiAxios\";\n\nconst AdminNavbar = props => {\n\n    let username = JSON.parse(localStorage.getItem(\"admin\")).name;\n\n    const logOut = async () => {\n        const token = localStorage.getItem(\"token\");\n        if (token) {\n            const response = await logout(token);\n            const { data } = response;\n            if (data.success) {\n                localStorage.removeItem(\"token\");\n                localStorage.removeItem(\"admin\");\n                props.history.push(\"/auth/login\");\n            }\n        }\n    }\n\n    return (\n        <>\n            <Navbar className=\"navbar-top navbar-dark\" expand=\"md\" id=\"navbar-main\">\n                <Container fluid>\n                    <Link\n                        className=\"h4 mb-0 text-white text-uppercase d-none d-lg-inline-block\"\n                        to=\"/\"\n                    >\n                        {props.brandText}\n                    </Link>\n                    {/* Search Bar */}\n                    {/* <Form className=\"navbar-search navbar-search-dark form-inline mr-3 d-none d-md-flex ml-lg-auto\">\n                        <FormGroup className=\"mb-0\">\n                            <InputGroup className=\"input-group-alternative\">\n                                <InputGroupAddon addonType=\"prepend\">\n                                    <InputGroupText>\n                                        <i className=\"fas fa-search\"/>\n                                    </InputGroupText>\n                                </InputGroupAddon>\n                                <Input placeholder=\"Search\" type=\"text\"/>\n                            </InputGroup>\n                        </FormGroup>\n                    </Form> */}\n                    <Nav className=\"align-items-center d-none d-md-flex\" navbar>\n                        <UncontrolledDropdown nav>\n                            <DropdownToggle className=\"pr-0\" nav>\n                                <Media className=\"align-items-center\">\n                                    <span className=\"avatar avatar-sm rounded-circle\">\n                                        <img\n                                            alt=\"...\"\n                                            src={require(\"assets/img/theme/team-4-800x800.jpg\").default}\n                                        />\n                                    </span>\n                                    <Media className=\"ml-2 d-none d-lg-block\">\n                                        <span className=\"mb-0 text-sm font-weight-bold\">\n                                            {username}\n                                        </span>\n                                    </Media>\n                                </Media>\n                            </DropdownToggle>\n                            <DropdownMenu className=\"dropdown-menu-arrow\" right>\n                                <DropdownItem className=\"noti-title\" header tag=\"div\">\n                                    <h6 className=\"text-overflow m-0\">Welcome!</h6>\n                                </DropdownItem>\n                                <DropdownItem to=\"/admin/user-profile\" tag={Link}>\n                                    <i className=\"ni ni-single-02\" />\n                                    <span>My profile</span>\n                                </DropdownItem>\n                                <DropdownItem to=\"/admin/user-profile\" tag={Link}>\n                                    <i className=\"ni ni-settings-gear-65\" />\n                                    <span>Settings</span>\n                                </DropdownItem>\n                                <DropdownItem to=\"/admin/user-profile\" tag={Link}>\n                                    <i className=\"ni ni-calendar-grid-58\" />\n                                    <span>Activity</span>\n                                </DropdownItem>\n                                <DropdownItem to=\"/admin/user-profile\" tag={Link}>\n                                    <i className=\"ni ni-support-16\" />\n                                    <span>Support</span>\n                                </DropdownItem>\n                                <DropdownItem divider />\n                                <DropdownItem href=\"#pablo\" onClick={logOut}>\n                                    <i className=\"ni ni-user-run\" />\n                                    <span>Logout</span>\n                                </DropdownItem>\n                            </DropdownMenu>\n                        </UncontrolledDropdown>\n                    </Nav>\n                </Container>\n            </Navbar>\n        </>\n    );\n};\n\nexport default AdminNavbar;\n","/*!\n\n=========================================================\n* Argon Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\n/*eslint-disable*/\nimport React from \"react\";\n\n// reactstrap components\nimport { Container, Row, Col, Nav, NavItem, NavLink } from \"reactstrap\";\n\nclass Footer extends React.Component {\n  render() {\n    return (\n      <footer className=\"footer\">\n        <Row className=\"align-items-center justify-content-xl-between\">\n          <Col xl=\"12\">\n            {/* <div className=\"copyright text-center text-xl-left text-muted\"> \"\"\"\"\"\"for leftside area\"\"\"\"\"\"\"*/}\n            <div className=\"copyright text-center text-muted\">\n              © 2021{\" \"}\n              <a\n                className=\"font-weight-bold ml-1\"\n                href=\"https://rectgujarat.org\"\n                target=\"_blank\"\n              >\n                RECT\n                  </a>\n            </div>\n          </Col>\n\n          {/* <Col xl=\"6\">\n            <Nav className=\"nav-footer justify-content-center justify-content-xl-end\">\n              <NavItem>\n                <NavLink\n                  href=\"https://www.creative-tim.com?ref=adr-admin-footer\"\n                  rel=\"noopener noreferrer\"\n                  target=\"_blank\"\n                >\n                  Creative Tim\n                </NavLink>\n              </NavItem>\n\n              <NavItem>\n                <NavLink\n                  href=\"https://www.creative-tim.com/presentation?ref=adr-admin-footer\"\n                  rel=\"noopener noreferrer\"\n                  target=\"_blank\"\n                >\n                  About Us\n                </NavLink>\n              </NavItem>\n\n              <NavItem>\n                <NavLink\n                  href=\"http://blog.creative-tim.com?ref=adr-admin-footer\"\n                  rel=\"noopener noreferrer\"\n                  target=\"_blank\"\n                >\n                  Blog\n                </NavLink>\n              </NavItem>\n\n              <NavItem>\n                <NavLink\n                  href=\"https://github.com/creativetimofficial/argon-dashboard/blob/master/LICENSE.md?ref=adr-admin-footer\"\n                  rel=\"noopener noreferrer\"\n                  target=\"_blank\"\n                >\n                  MIT License\n                </NavLink>\n              </NavItem>\n            </Nav>\n          </Col> */}\n        </Row>\n      </footer>\n    );\n  }\n}\n\nexport default Footer;\n","/*!\n\n=========================================================\n* Argon Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\n/*eslint-disable*/\nimport React from \"react\";\nimport { NavLink as NavLinkRRD, Link } from \"react-router-dom\";\n// nodejs library to set properties for components\nimport { PropTypes } from \"prop-types\";\n\n// reactstrap components\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Collapse,\n  DropdownMenu,\n  DropdownItem,\n  UncontrolledDropdown,\n  DropdownToggle,\n  FormGroup,\n  Form,\n  Input,\n  InputGroupAddon,\n  InputGroupText,\n  InputGroup,\n  Media,\n  NavbarBrand,\n  Navbar,\n  NavItem,\n  NavLink,\n  Nav,\n  Progress,\n  Table,\n  Container,\n  Row,\n  Col\n} from \"reactstrap\";\nimport { logout } from \"../../network/ApiAxios\";\n\n\nvar ps;\n\nclass Sidebar extends React.Component {\n  state = {\n    collapseOpen: false\n  };\n\n  constructor(props) {\n    super(props);\n    this.activeRoute.bind(this);\n  }\n\n\n  componentDidMount() {\n  }\n\n\n  // verifies if routeName is the one active (in browser input)\n  activeRoute(routeName) {\n    return this.props.location.pathname.indexOf(routeName) > -1 ? \"active\" : \"\";\n  }\n\n  // toggles collapse between opened and closed (true/false)\n  toggleCollapse = () => {\n    this.setState({\n      collapseOpen: !this.state.collapseOpen\n    });\n  };\n  // closes the collapse\n  closeCollapse = () => {\n    this.setState({\n      collapseOpen: false\n    });\n  };\n  // creates the links that appear in the left menu / Sidebar\n  createLinks = routes => {\n    return routes.map((prop, key) => {\n      return (prop.layout === '/admin' && !prop.api) ? (\n        <NavItem key={key}>\n          <NavLink\n            to={prop.layout + prop.path}\n            tag={NavLinkRRD}\n            onClick={this.closeCollapse}\n            activeClassName=\"active\"\n          >\n            <i className={prop.icon} />\n            {prop.name}\n          </NavLink>\n        </NavItem>\n      ) : null;\n    });\n  };\n\n  createApiLinks = routes => {\n    var routes = routes.filter(route => route.path != \"/user-profile\")\n    return routes.map((prop, key) => {\n      return (prop.layout === '/admin' && prop.api) ? (\n        <NavItem key={key}>\n          <NavLink\n            to={prop.layout + prop.path}\n            tag={NavLinkRRD}\n            onClick={this.closeCollapse}\n            activeClassName=\"active\"\n          >\n            <i className={prop.icon} />\n            {prop.name}\n          </NavLink>\n        </NavItem>\n      ) : null;\n    });\n  };\n\n  logOut = async (e) => {\n    e.preventDefault()\n    const token = localStorage.getItem(\"token\");\n    if (token) {\n      const response = await logout(token);\n      const { data } = response;\n      if (data.success) {\n        localStorage.removeItem(\"token\");\n        localStorage.removeItem(\"user\");\n        this.props.history.push(\"/auth/login\");\n      }\n    }\n  }\n\n  render() {\n\n    const { bgColor, routes, logo } = this.props;\n    let navbarBrandProps;\n    if (logo && logo.innerLink) {\n      navbarBrandProps = {\n        to: logo.innerLink,\n        tag: Link\n      };\n    } else if (logo && logo.outterLink) {\n      navbarBrandProps = {\n        href: logo.outterLink,\n        target: \"_blank\"\n      };\n    }\n    return (\n      <Navbar\n        className=\"navbar-vertical fixed-left navbar-light bg-white\"\n        expand=\"md\"\n        id=\"sidenav-main\"\n      >\n        <Container fluid>\n          {/* Toggler */}\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            onClick={this.toggleCollapse}\n          >\n            <span className=\"navbar-toggler-icon\" />\n          </button>\n          {/* Brand */}\n          {logo ? (\n            <NavbarBrand className=\"pt-0\" {...navbarBrandProps}>\n              <img\n                alt={logo.imgAlt}\n                className=\"navbar-brand-img\"\n                src={logo.imgSrc}\n              />\n            </NavbarBrand>\n          ) : null}\n          {/* User */}\n          <Nav className=\"align-items-center d-md-none\">\n            <UncontrolledDropdown nav>\n              <DropdownToggle nav className=\"nav-link-icon\">\n                <i className=\"ni ni-bell-55\" />\n              </DropdownToggle>\n              <DropdownMenu\n                aria-labelledby=\"navbar-default_dropdown_1\"\n                className=\"dropdown-menu-arrow\"\n                right\n              >\n                <DropdownItem>Action</DropdownItem>\n                <DropdownItem>Another action</DropdownItem>\n                <DropdownItem divider />\n                <DropdownItem>Something else here</DropdownItem>\n              </DropdownMenu>\n            </UncontrolledDropdown>\n            <UncontrolledDropdown nav>\n              <DropdownToggle nav>\n                <Media className=\"align-items-center\">\n                  <span className=\"avatar avatar-sm rounded-circle\">\n                    <img\n                      alt=\"...\"\n                      src={require(\"assets/img/theme/team-1-800x800.jpg\")}\n                    />\n                  </span>\n                </Media>\n              </DropdownToggle>\n              <DropdownMenu className=\"dropdown-menu-arrow\" right>\n                <DropdownItem className=\"noti-title\" header tag=\"div\">\n                  <h6 className=\"text-overflow m-0\">Welcome!</h6>\n                </DropdownItem>\n                <DropdownItem to=\"/admin/user-profile\" tag={Link}>\n                  <i className=\"ni ni-single-02\" />\n                  <span>My profile</span>\n                </DropdownItem>\n                <DropdownItem to=\"/admin/user-profile\" tag={Link}>\n                  <i className=\"ni ni-settings-gear-65\" />\n                  <span>Settings</span>\n                </DropdownItem>\n                <DropdownItem to=\"/admin/user-profile\" tag={Link}>\n                  <i className=\"ni ni-calendar-grid-58\" />\n                  <span>Activity</span>\n                </DropdownItem>\n                <DropdownItem to=\"/admin/user-profile\" tag={Link}>\n                  <i className=\"ni ni-support-16\" />\n                  <span>Support</span>\n                </DropdownItem>\n                <DropdownItem divider />\n                <DropdownItem href=\"#pablo\" onClick={e => this.logOut(e)}>\n                  <i className=\"ni ni-user-run\" />\n                  <span>Logout</span>\n                </DropdownItem>\n              </DropdownMenu>\n            </UncontrolledDropdown>\n          </Nav>\n          {/* Collapse */}\n          <Collapse navbar isOpen={this.state.collapseOpen}>\n            {/* Collapse header */}\n            <div className=\"navbar-collapse-header d-md-none\">\n              <Row>\n                {logo ? (\n                  <Col className=\"collapse-brand\" xs=\"6\">\n                    {logo.innerLink ? (\n                      <Link to={logo.innerLink}>\n                        <img alt={logo.imgAlt} src={logo.imgSrc} />\n                      </Link>\n                    ) : (\n                      <a href={logo.outterLink}>\n                        <img alt={logo.imgAlt} src={logo.imgSrc} />\n                      </a>\n                    )}\n                  </Col>\n                ) : null}\n                <Col className=\"collapse-close\" xs=\"6\">\n                  <button\n                    className=\"navbar-toggler\"\n                    type=\"button\"\n                    onClick={this.toggleCollapse}\n                  >\n                    <span />\n                    <span />\n                  </button>\n                </Col>\n              </Row>\n            </div>\n            {/* Form */}\n            <Form className=\"mt-4 mb-3 d-md-none\">\n              <InputGroup className=\"input-group-rounded input-group-merge\">\n                <Input\n                  aria-label=\"Search\"\n                  className=\"form-control-rounded form-control-prepended\"\n                  placeholder=\"Search\"\n                  type=\"search\"\n                />\n                <InputGroupAddon addonType=\"prepend\">\n                  <InputGroupText>\n                    <span className=\"fa fa-search\" />\n                  </InputGroupText>\n                </InputGroupAddon>\n              </InputGroup>\n            </Form>\n            {/* Navigation */}\n            <Nav navbar>{this.createLinks(routes)}</Nav>\n            {/* Divider */}\n            <hr className=\"my-3\" />\n            <h6 className=\"navbar-heading text-muted\">API routes</h6>\n            {/* API links */}\n            <Nav navbar>{this.createApiLinks(routes)}</Nav>\n            {/* Divider */}\n            {/* <hr className=\"my-3\" /> */}\n            {/* Heading */}\n            {/* <h6 className=\"navbar-heading text-muted\">Documentation</h6> */}\n          </Collapse>\n        </Container>\n      </Navbar>\n    );\n  }\n}\n\nSidebar.defaultProps = {\n  routes: [{}]\n};\n\nSidebar.propTypes = {\n  // links that will be displayed inside the component\n  routes: PropTypes.arrayOf(PropTypes.object),\n  logo: PropTypes.shape({\n    // innerLink is for links that will direct the user within the app\n    // it will be rendered as <Link to=\"...\">...</Link> tag\n    innerLink: PropTypes.string,\n    // outterLink is for links that will direct the user outside the app\n    // it will be rendered as simple <a href=\"...\">...</a> tag\n    outterLink: PropTypes.string,\n    // the image src of the logo\n    imgSrc: PropTypes.string.isRequired,\n    // the alt for the img\n    imgAlt: PropTypes.string.isRequired\n  })\n};\n\nexport default Sidebar;\n","/*!\n\n=========================================================\n* Argon Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React, { useEffect, useState } from \"react\";\n\nimport io from 'socket.io-client'\n// reactstrap components\nimport { Card, CardBody, CardTitle, Container, Row, Col } from \"reactstrap\";\n\nconst Header = () => {\n  const [sys, setSys] = useState({})\n  useEffect(() => {\n    var socket = io.connect('http://localhost:5100');\n    socket.on('sys', (data) => {\n      setSys(data)\n    })\n  }, [])\n  return (\n    <>\n      <div className=\"header bg-gradient-info pb-8 pt-5 pt-md-8\">\n        <Container fluid>\n          <div className=\"header-body\">\n            {/* Card stats */}\n            <Row>\n              <Col lg=\"6\" xl=\"3\">\n                <Card className=\"card-stats mb-4 mb-xl-0\">\n                  <CardBody>\n                    <Row>\n                      <div className=\"col\">\n                        <CardTitle\n                          tag=\"h5\"\n                          className=\"text-uppercase text-muted mb-0\"\n                        >\n                          Traffic\n                          </CardTitle>\n                        <span className=\"h2 font-weight-bold mb-0\">\n                          350,897\n                          </span>\n                      </div>\n                      <Col className=\"col-auto\">\n                        <div className=\"icon icon-shape bg-danger text-white rounded-circle shadow\">\n                          <i className=\"fas fa-chart-bar\" />\n                        </div>\n                      </Col>\n                    </Row>\n                    <p className=\"mt-3 mb-0 text-muted text-sm\">\n                      <span className=\"text-success mr-2\">\n                        <i className=\"fa fa-arrow-up\" /> 3.48%\n                        </span>{\" \"}\n                      <span className=\"text-nowrap\">Since last month</span>\n                    </p>\n                  </CardBody>\n                </Card>\n              </Col>\n              <Col lg=\"6\" xl=\"3\">\n                <Card className=\"card-stats mb-4 mb-xl-0\">\n                  <CardBody>\n                    <Row>\n                      <div className=\"col\">\n                        <CardTitle\n                          tag=\"h5\"\n                          className=\"text-uppercase text-muted mb-0\"\n                        >\n                          New users\n                          </CardTitle>\n                        <span className=\"h2 font-weight-bold mb-0\">\n                          2,356\n                          </span>\n                      </div>\n                      <Col className=\"col-auto\">\n                        <div className=\"icon icon-shape bg-warning text-white rounded-circle shadow\">\n                          <i className=\"fas fa-chart-pie\" />\n                        </div>\n                      </Col>\n                    </Row>\n                    <p className=\"mt-3 mb-0 text-muted text-sm\">\n                      <span className=\"text-danger mr-2\">\n                        <i className=\"fas fa-arrow-down\" /> 3.48%\n                        </span>{\" \"}\n                      <span className=\"text-nowrap\">Since last week</span>\n                    </p>\n                  </CardBody>\n                </Card>\n              </Col>\n              <Col lg=\"6\" xl=\"3\">\n                <Card className=\"card-stats mb-4 mb-xl-0\">\n                  <CardBody>\n                    <Row>\n                      <div className=\"col\">\n                        <CardTitle\n                          tag=\"h5\"\n                          className=\"text-uppercase text-muted mb-0\"\n                        >\n                          Memory\n                          </CardTitle>\n                        <span className=\"h2 font-weight-bold mb-0\">{sys.memory} %</span>\n                      </div>\n                      <Col className=\"col-auto\">\n                        <div className=\"icon icon-shape bg-yellow text-white rounded-circle shadow\">\n                          <i className=\"fas fa-microchip\" />\n                        </div>\n                      </Col>\n                    </Row>\n                    <p className=\"mt-3 mb-0 text-muted text-sm\">\n                      <span className=\"text-danger mr-2\">\n\n                      </span>{\" \"}\n                      <span className=\"text-nowrap\"></span>\n                    </p>\n                  </CardBody>\n                </Card>\n              </Col>\n              <Col lg=\"6\" xl=\"3\">\n                <Card className=\"card-stats mb-4 mb-xl-0\">\n                  <CardBody>\n                    <Row>\n                      <div className=\"col\">\n                        <CardTitle\n                          tag=\"h5\"\n                          className=\"text-uppercase text-muted mb-0\"\n                        >\n                          Performance\n                          </CardTitle>\n                        <span className=\"h2 font-weight-bold mb-0\">\n                          {sys.cpu}%\n                          </span>\n                      </div>\n                      <Col className=\"col-auto\">\n                        <div className=\"icon icon-shape bg-info text-white rounded-circle shadow\">\n                          <i className=\"fas fa-percent\" />\n                        </div>\n                      </Col>\n                    </Row>\n                    <p className=\"mt-3 mb-0 text-muted text-sm\">\n                      <span className=\"text-danger mr-2\">\n\n                      </span>{\" \"}\n                      <span className=\"text-nowrap\"></span>\n                    </p>\n                  </CardBody>\n                </Card>\n              </Col>\n            </Row>\n          </div>\n        </Container>\n      </div>\n    </>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\n// node.js library that concatenates classes (strings)\nimport classnames from \"classnames\";\n// javascipt plugin for creating charts\nimport Chart from \"chart.js\";\n// react plugin used to create charts\nimport { Line, Bar } from \"react-chartjs-2\";\n// reactstrap components\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  NavItem,\n  NavLink,\n  Nav,\n  Progress,\n  Table,\n  Container,\n  Row,\n  Col\n} from \"reactstrap\";\n\n// core components\nimport {\n  chartOptions,\n  parseOptions,\n  chartExample1,\n  chartExample2\n} from \"variables/charts.js\";\n\nimport Header from \"components/Headers/Header.js\";\n\nclass Index extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeNav: 1,\n      chartExample1Data: \"data1\"\n    };\n    if (window.Chart) {\n      parseOptions(Chart, chartOptions());\n    }\n  }\n  toggleNavs = (e, index) => {\n    e.preventDefault();\n    this.setState({\n      activeNav: index,\n      chartExample1Data:\n        this.state.chartExample1Data === \"data1\" ? \"data2\" : \"data1\"\n    });\n  };\n  render() {\n    return (\n      <>\n        <Header />\n        {/* Page content */}\n        <Container className=\"mt--7\" fluid>\n          <Row>\n            <Col className=\"mb-5 mb-xl-0\" xl=\"8\">\n              <Card className=\"bg-gradient-default shadow\">\n                <CardHeader className=\"bg-transparent\">\n                  <Row className=\"align-items-center\">\n                    <div className=\"col\">\n                      <h6 className=\"text-uppercase text-light ls-1 mb-1\">\n                        Overview\n                      </h6>\n                      <h2 className=\"text-white mb-0\">User Ratio</h2>\n                    </div>\n                    <div className=\"col\">\n                      <Nav className=\"justify-content-end\" pills>\n                        <NavItem>\n                          <NavLink\n                            className={classnames(\"py-2 px-3\", {\n                              active: this.state.activeNav === 1\n                            })}\n                            href=\"#pablo\"\n                            onClick={e => this.toggleNavs(e, 1)}\n                          >\n                            <span className=\"d-none d-md-block\">Month</span>\n                            <span className=\"d-md-none\">M</span>\n                          </NavLink>\n                        </NavItem>\n                        <NavItem>\n                          <NavLink\n                            className={classnames(\"py-2 px-3\", {\n                              active: this.state.activeNav === 2\n                            })}\n                            data-toggle=\"tab\"\n                            href=\"#pablo\"\n                            onClick={e => this.toggleNavs(e, 2)}\n                          >\n                            <span className=\"d-none d-md-block\">Week</span>\n                            <span className=\"d-md-none\">W</span>\n                          </NavLink>\n                        </NavItem>\n                      </Nav>\n                    </div>\n                  </Row>\n                </CardHeader>\n                <CardBody>\n                  {/* Chart */}\n                  <div className=\"chart\">\n                    <Line\n                      data={chartExample1[this.state.chartExample1Data]}\n                      options={chartExample1.options}\n                      getDatasetAtEvent={e => console.log(e)}\n                    />\n                  </div>\n                </CardBody>\n              </Card>\n            </Col>\n            <Col xl=\"4\">\n              <Card className=\"shadow\">\n                <CardHeader className=\"bg-transparent\">\n                  <Row className=\"align-items-center\">\n                    <div className=\"col\">\n                      <h6 className=\"text-uppercase text-muted ls-1 mb-1\">\n                        Exams\n                      </h6>\n                      <h2 className=\"mb-0\">Total Students</h2>\n                    </div>\n                  </Row>\n                </CardHeader>\n                <CardBody>\n                  {/* Chart */}\n                  <div className=\"chart\">\n                    <Bar\n                      data={chartExample2.data}\n                      options={chartExample2.options}\n                    />\n                  </div>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n          {/* <Row className=\"mt-5\">\n            <Col className=\"mb-5 mb-xl-0\" xl=\"8\">\n              <Card className=\"shadow\">\n                <CardHeader className=\"border-0\">\n                  <Row className=\"align-items-center\">\n                    <div className=\"col\">\n                      <h3 className=\"mb-0\">Page visits</h3>\n                    </div>\n                    <div className=\"col text-right\">\n                      <Button\n                        color=\"primary\"\n                        href=\"#pablo\"\n                        onClick={e => e.preventDefault()}\n                        size=\"sm\"\n                      >\n                        See all\n                      </Button>\n                    </div>\n                  </Row>\n                </CardHeader>\n                <Table className=\"align-items-center table-flush\" responsive>\n                  <thead className=\"thead-light\">\n                    <tr>\n                      <th scope=\"col\">Page name</th>\n                      <th scope=\"col\">Visitors</th>\n                      <th scope=\"col\">Unique users</th>\n                      <th scope=\"col\">Bounce rate</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    <tr>\n                      <th scope=\"row\">/argon/</th>\n                      <td>4,569</td>\n                      <td>340</td>\n                      <td>\n                        <i className=\"fas fa-arrow-up text-success mr-3\" />{\" \"}\n                        46,53%\n                      </td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">/argon/index.html</th>\n                      <td>3,985</td>\n                      <td>319</td>\n                      <td>\n                        <i className=\"fas fa-arrow-down text-warning mr-3\" />{\" \"}\n                        46,53%\n                      </td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">/argon/charts.html</th>\n                      <td>3,513</td>\n                      <td>294</td>\n                      <td>\n                        <i className=\"fas fa-arrow-down text-warning mr-3\" />{\" \"}\n                        36,49%\n                      </td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">/argon/tables.html</th>\n                      <td>2,050</td>\n                      <td>147</td>\n                      <td>\n                        <i className=\"fas fa-arrow-up text-success mr-3\" />{\" \"}\n                        50,87%\n                      </td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">/argon/profile.html</th>\n                      <td>1,795</td>\n                      <td>190</td>\n                      <td>\n                        <i className=\"fas fa-arrow-down text-danger mr-3\" />{\" \"}\n                        46,53%\n                      </td>\n                    </tr>\n                  </tbody>\n                </Table>\n              </Card>\n            </Col>\n            <Col xl=\"4\">\n              <Card className=\"shadow\">\n                <CardHeader className=\"border-0\">\n                  <Row className=\"align-items-center\">\n                    <div className=\"col\">\n                      <h3 className=\"mb-0\">Social traffic</h3>\n                    </div>\n                    <div className=\"col text-right\">\n                      <Button\n                        color=\"primary\"\n                        href=\"#pablo\"\n                        onClick={e => e.preventDefault()}\n                        size=\"sm\"\n                      >\n                        See all\n                      </Button>\n                    </div>\n                  </Row>\n                </CardHeader>\n                <Table className=\"align-items-center table-flush\" responsive>\n                  <thead className=\"thead-light\">\n                    <tr>\n                      <th scope=\"col\">Referral</th>\n                      <th scope=\"col\">Visitors</th>\n                      <th scope=\"col\" />\n                    </tr>\n                  </thead>\n                  <tbody>\n                    <tr>\n                      <th scope=\"row\">Facebook</th>\n                      <td>1,480</td>\n                      <td>\n                        <div className=\"d-flex align-items-center\">\n                          <span className=\"mr-2\">60%</span>\n                          <div>\n                            <Progress\n                              max=\"100\"\n                              value=\"60\"\n                              barClassName=\"bg-gradient-danger\"\n                            />\n                          </div>\n                        </div>\n                      </td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">Facebook</th>\n                      <td>5,480</td>\n                      <td>\n                        <div className=\"d-flex align-items-center\">\n                          <span className=\"mr-2\">70%</span>\n                          <div>\n                            <Progress\n                              max=\"100\"\n                              value=\"70\"\n                              barClassName=\"bg-gradient-success\"\n                            />\n                          </div>\n                        </div>\n                      </td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">Google</th>\n                      <td>4,807</td>\n                      <td>\n                        <div className=\"d-flex align-items-center\">\n                          <span className=\"mr-2\">80%</span>\n                          <div>\n                            <Progress max=\"100\" value=\"80\" />\n                          </div>\n                        </div>\n                      </td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">Instagram</th>\n                      <td>3,678</td>\n                      <td>\n                        <div className=\"d-flex align-items-center\">\n                          <span className=\"mr-2\">75%</span>\n                          <div>\n                            <Progress\n                              max=\"100\"\n                              value=\"75\"\n                              barClassName=\"bg-gradient-info\"\n                            />\n                          </div>\n                        </div>\n                      </td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">twitter</th>\n                      <td>2,645</td>\n                      <td>\n                        <div className=\"d-flex align-items-center\">\n                          <span className=\"mr-2\">30%</span>\n                          <div>\n                            <Progress\n                              max=\"100\"\n                              value=\"30\"\n                              barClassName=\"bg-gradient-warning\"\n                            />\n                          </div>\n                        </div>\n                      </td>\n                    </tr>\n                  </tbody>\n                </Table>\n              </Card>\n            </Col>\n          </Row>\n         */}\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default Index;\n","/*!\n\n=========================================================\n* Argon Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\n\n// reactstrap components\nimport { Button, Container, Row, Col } from \"reactstrap\";\nimport { useHistory } from \"react-router-dom\";\n\nconst UserHeader = (props) => {\n    const username = props.userName ? props.userName : null\n\n    const history = useHistory();\n    return (\n        <>\n            <div\n                className=\"header pb-8 pt-5 pt-lg-8 d-flex align-items-center\"\n                style={{\n                    minHeight: \"600px\",\n                    backgroundImage:\n                        \"url(\" + require(\"assets/img/theme/profile-cover.jpg\") + \")\",\n                    backgroundSize: \"cover\",\n                    backgroundPosition: \"center top\"\n                }}\n            >\n                {/* Mask */}\n                <span className=\"mask bg-gradient-default opacity-8\" />\n                {/* Header container */}\n                <Container className=\"d-flex align-items-center\" fluid>\n                    <Row>\n                        {username ?\n                            <>\n                                <Col lg=\"7\" md=\"10\">\n                                    <h1 className=\"display-2 text-white\">Hello {username} </h1>\n                                    <p className=\"text-white mt-0 mb-5\">\n                                        This is your profile page. Here you can edit your details and save it by pressing save button.\n                                    </p>\n                                </Col>\n                            </>\n                            :\n                            <>\n                                <Col lg=\"7\" md=\"10\">\n                                    <h1 className=\"display-2 text-white\">Hello</h1>\n                                    <p className=\"text-white mt-0 mb-5\">\n                                        User not found !! user may have deleted or not registered.\n                                    </p>\n                                </Col>\n                            </>\n                        }\n                    </Row>\n                </Container>\n            </div>\n        </>\n    );\n}\n\nexport default UserHeader;\n","/*!\n\n=========================================================\n* Argon Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React, { useState, useEffect } from \"react\";\n\n// reactstrap components\nimport {\n    Button,\n    Card,\n    CardHeader,\n    CardBody,\n    FormGroup,\n    Form,\n    Label,\n    Input,\n    Container,\n    Row,\n    Col\n} from \"reactstrap\";\n// core components\nimport UserHeader from \"components/Headers/UserHeader.js\";\n\nimport { getSingleUsers, userEdit, Confirm, Delete } from \"../../network/ApiAxios\";\nimport { useHistory } from \"react-router-dom\";\nconst Profile = (props) => {\n    let history = useHistory();\n    const [user, setUser] = useState({});\n    const [checked, setChecked] = useState(false);\n    const [error, setError] = useState(false);\n    const [loading, setLoading] = useState(false);\n    const [mobile, setMobile] = useState();\n    const [tempAddress, setTempAddress] = useState(\"\");\n    const [perAddress, setPerAddress] = useState(\"\");\n    useEffect(() => {\n        if (props.location.state) {\n            const runAsync = async () => {\n                const response = await getSingleUsers(props.location.state);\n                const { user } = response.data;\n\n                if (response.data.success) {\n                    setUser(user);\n                    // console.log(user);\n                    setMobile(user.mobile)\n                    setPerAddress(user.perAddress)\n                    setTempAddress(user.tempAddress)\n                    setChecked(user.accountConfirmation)\n                }\n            }\n            runAsync();\n        }\n        else {\n\n        }\n    }, []);\n\n    const ApproveUserTamplate = () => {\n        return (\n            <Row className=\"align-items-center\">\n                <Col className=\"text-right\">\n                    {\n                        user.accountConfirmation ?\n                            <></>\n\n                            :\n                            <Button color=\"primary\" onClick={e => Approved(e)}>\n                                {!loading ? \"Approve User\" : \"Loading..\"}\n                            </Button>\n\n\n                    }\n                </Col>\n            </Row>\n        )\n    }\n\n    const Approved = async (e) => {\n        setLoading(true)\n        const response = await Confirm(user._id);\n        const { data } = response;\n        if (data.success) {\n            setLoading(false)\n            setUser(user);\n            setError(\"\");\n        } else {\n            setLoading(false)\n            setError(data.msg);\n        }\n    }\n\n    const DeleteUser = async (e) => {\n        setLoading(true)\n        const response = await Delete(user._id);\n        const { data } = response;\n        if (data.success) {\n            setLoading(false)\n            history.push('/admin/users')\n            setError(\"\");\n        } else {\n            setLoading(false)\n            setError(data.msg);\n        }\n    }\n\n    const handleSubmit = async () => {\n        setLoading(true)\n        const response = await userEdit(user._id, mobile, perAddress, tempAddress);\n        const { data } = response;\n        if (data.success) {\n            setLoading(false)\n            setError(\"\");\n        } else {\n            setLoading(false)\n            setError(data.msg);\n        }\n    }\n\n    console.log(user);\n\n    return (\n        <>\n            {props.location.state ?\n\n                <>\n                    <UserHeader userName={user.fname + ' ' + user.lname} />\n                    {/* Page content */}\n                    <Container className=\"mt--7\" fluid>\n                        <Row>\n                            <Col className=\"order-xl-2 mb-5 mb-xl-0\" xl=\"4\">\n                                <Card className=\"card-profile shadow\">\n                                    <Row className=\"justify-content-center\">\n                                        <Col className=\"order-lg-2\" lg=\"3\">\n                                            <div className=\"card-profile-image\">\n                                                <a href=\"#pablo\" onClick={e => e.preventDefault()}>\n                                                    <img\n                                                        alt=\"...\"\n                                                        className=\"rounded-circle\"\n                                                        src={'http://172.105.61.90:5100' + user.photo}\n                                                    />\n                                                </a>\n                                            </div>\n                                        </Col>\n                                    </Row>\n\n                                </Card>\n                            </Col>\n                            <Col className=\"order-xl-1\" xl=\"8\">\n                                <Card className=\"bg-secondary shadow\">\n                                    <CardHeader className=\"bg-white border-0\">\n                                        <Row className=\"align-items-center\">\n                                            <Col xs=\"8\">\n                                                <h3 className=\"mb-0\"> My account</h3>\n                                                {error ?\n                                                    <div className=\"text-muted font-italic\">\n                                                        <small>\n                                                            error:{\" \"}\n                                                            <span className=\"text-red font-weight-700\">{error}</span>\n                                                        </small>\n                                                    </div> : null}\n                                            </Col>\n                                            <Col className=\"text-right\" xs=\"4\">\n                                                <Button color=\"primary\" onClick={e => handleSubmit(e)}>\n                                                    {!loading ? \"Save User\" : \"Loading..\"}\n\n                                                </Button>\n                                                {/* <Button\n                                            color=\"primary\"\n                                            onClick={(e) => handleSubmit(e)}\n                                            size=\"sm\"\n                                        >\n                                            Save\n                                        </Button> */}\n                                            </Col>\n                                        </Row>\n                                    </CardHeader>\n                                    <CardBody>\n                                        <Form>\n                                            <h6 className=\"heading-small text-muted mb-4\">\n                                                User information (from database)\n                                    </h6>\n                                            <div className=\"pl-lg-4\">\n                                                <Row>\n                                                    <Col lg=\"6\">\n                                                        <FormGroup>\n                                                            <label\n                                                                className=\"form-control-label\"\n                                                                htmlFor=\"input-username\"\n                                                            >\n                                                                Email address\n                                                    </label>\n                                                            <Input\n                                                                className=\"form-control-alternative\"\n                                                                defaultValue={user.email}\n                                                                id=\"input-username\"\n                                                                placeholder=\"Username\"\n                                                                type=\"text\"\n                                                                disabled\n                                                            />\n                                                        </FormGroup>\n                                                    </Col>\n                                                    <Col lg=\"6\">\n                                                        <FormGroup>\n                                                            <label\n                                                                className=\"form-control-label\"\n                                                                htmlFor=\"input-mobile\"\n                                                            >\n                                                                Phone Number\n                                                    </label>\n                                                            <Input\n                                                                className=\"form-control-alternative\"\n                                                                id=\"input-mobile\"\n                                                                onChange={e => setMobile(e.target.value)}\n                                                                defaultValue={user.mobile}\n                                                                type=\"number\"\n                                                            />\n                                                        </FormGroup>\n                                                    </Col>\n                                                </Row>\n                                                <Row>\n                                                    <Col lg=\"6\">\n                                                        <FormGroup>\n                                                            <label\n                                                                className=\"form-control-label\"\n                                                                htmlFor=\"input-first-name\"\n                                                            >\n                                                                First name\n                                                   </label>\n                                                            <Input\n                                                                className=\"form-control-alternative\"\n                                                                defaultValue=\"Lucky\"\n                                                                id=\"input-first-name\"\n                                                                defaultValue={user.fname}\n                                                                placeholder=\"First name\"\n                                                                type=\"text\"\n                                                                disabled\n                                                            />\n                                                        </FormGroup>\n                                                    </Col>\n                                                    <Col lg=\"6\">\n                                                        <FormGroup>\n                                                            <label\n                                                                className=\"form-control-label\"\n                                                                htmlFor=\"input-last-name\">\n                                                                Last name\n                                                   </label>\n                                                            <Input\n                                                                className=\"form-control-alternative\"\n                                                                defaultValue=\"Jesse\"\n                                                                defaultValue={user.lname}\n                                                                id=\"input-last-name\"\n                                                                placeholder=\"Last name\"\n                                                                type=\"text\"\n                                                                disabled\n                                                            />\n                                                        </FormGroup>\n                                                    </Col>\n                                                </Row>\n                                                <Row>\n                                                    <Col lg=\"12\">\n                                                        <FormGroup>\n                                                            <label\n                                                                className=\"form-control-label\"\n                                                                htmlFor=\"input-regDate\">\n                                                                Date When Registered.\n                                                                </label>\n                                                            <Input\n                                                                className=\"form-control-alternative\"\n                                                                defaultValue={user.date}\n                                                                id=\"input-regDate\"\n                                                                placeholder=\"Last name\"\n                                                                type=\"text\"\n                                                                disabled\n                                                            />\n                                                        </FormGroup>\n                                                    </Col>\n\n                                                </Row>\n                                                <Row>\n                                                    <Col lg=\"6\">\n                                                        <FormGroup>\n                                                            <label\n                                                                className=\"form-control-label\"\n                                                                htmlFor=\"input-DOB\"\n                                                            >\n                                                                Date Of Birth\n                                                   </label>\n                                                            <Input\n                                                                className=\"form-control-alternative\"\n                                                                id=\"input-DOB\"\n                                                                defaultValue={user.dob}\n                                                                placeholder=\"Date of Birth\"\n                                                                type=\"text\"\n                                                                disabled\n                                                            />\n                                                        </FormGroup>\n                                                    </Col>\n                                                    <Col lg=\"6\">\n                                                        <FormGroup>\n                                                            <label\n                                                                className=\"form-control-label\"\n                                                                htmlFor=\"input-Status\">\n                                                                User Status\n                                                            </label>\n                                                            <Input\n                                                                className=\"form-control-alternative\"\n                                                                defaultValue={user.accountConfirmation}\n                                                                id=\"input-Status\"\n                                                                placeholder=\"User Status\"\n                                                                type=\"text\"\n                                                                disabled\n                                                            />\n                                                        </FormGroup>\n                                                    </Col>\n                                                </Row>\n                                            </div>\n                                            <hr className=\"my-4\" />\n                                            {/* Address */}\n                                            <h6 className=\"heading-small text-muted mb-4\">\n                                                Contact information\n                                    </h6>\n                                            <div className=\"pl-lg-4\">\n                                                <Row>\n                                                    <Col md=\"12\">\n                                                        <FormGroup>\n                                                            <label\n                                                                className=\"form-control-label\"\n                                                                htmlFor=\"input-tempAddress\"\n                                                            >\n                                                                Temporary Address\n                                                    </label>\n                                                            <Input\n                                                                className=\"form-control-alternative\"\n                                                                defaultValue={user.tempAddress}\n                                                                id=\"input-tempAddress\"\n                                                                onChange={e => setTempAddress(e.target.value)}\n                                                                placeholder=\"Home Address\"\n                                                                type=\"text\"\n                                                            />\n                                                        </FormGroup>\n                                                    </Col>\n                                                </Row>\n                                                <Row>\n                                                    <Col md=\"12\">\n                                                        <FormGroup>\n                                                            <label\n                                                                className=\"form-control-label\"\n                                                                htmlFor=\"input-perAddress\"\n                                                            >\n                                                                Permanent Address\n                                                    </label>\n                                                            <Input\n                                                                className=\"form-control-alternative\"\n                                                                defaultValue={user.perAddress}\n                                                                id=\"input-perAddress\"\n                                                                onChange={e => setPerAddress(e.target.value)}\n                                                                placeholder=\"Home Address\"\n                                                                type=\"text\"\n                                                            />\n                                                        </FormGroup>\n                                                    </Col>\n                                                </Row>\n                                            </div>\n                                            <hr className=\"my-4\" />\n                                            {/* Description */}\n                                            <h6 className=\"heading-small text-muted mb-4\">Documents</h6>\n                                            <div className=\"pl-lg-4\">\n                                                <Row>\n                                                    <Col md='6'>\n                                                        <h1 className='my-4'>Aadhar-Card Copy</h1>\n                                                        <img\n                                                            src={\"http://172.105.61.90:5100\" + user.aadhar}\n                                                            className=\"img-fluid  my-2\"\n                                                            alt=\"...\"\n                                                        />\n                                                    </Col>\n                                                    <Col md='6'>\n                                                        <h1 className='my-4'>Signature Copy</h1>\n                                                        <img\n                                                            src={\"http://172.105.61.90:5100\" + user.signature}\n                                                            className=\"img-fluid  my-2\"\n                                                            alt=\"...\"\n                                                        />\n                                                    </Col>\n                                                </Row>\n\n                                                <Row>\n                                                    <Col md='12'>\n                                                        <h1 className='my-4'>Cast Certificate</h1>\n                                                        <img\n                                                            src={\"http://172.105.61.90:5100\" + user.castCert}\n                                                            className=\"img-fluid my-2\"\n                                                            alt=\"...\"\n                                                        />\n                                                    </Col>\n                                                </Row>\n\n                                                <Row>\n                                                    <Col md='12'>\n                                                        <Card className=\"bg-secondary shadow\">\n                                                            <CardHeader className=\"bg-white border-0\">\n                                                                <Row className=\"align-items-center\">\n\n                                                                    <ApproveUserTamplate />\n                                                                    <Col className=\"text-right\">\n                                                                        <Button color=\"primary\" onClick={e => DeleteUser(e)}>\n                                                                            {!loading ? \"Delete User\" : \"Loading..\"}\n                                                                        </Button>\n                                                                    </Col>\n                                                                </Row>\n                                                            </CardHeader>\n                                                        </Card>\n                                                    </Col>\n                                                </Row>\n                                            </div>\n                                        </Form>\n                                    </CardBody>\n                                </Card>\n                            </Col>\n                        </Row>\n                    </Container>\n                </>\n                :\n                <>\n                    <UserHeader />\n                    <Container>\n\n                    </Container>\n                </>\n            }\n        </>\n    );\n}\n\nexport default Profile;\n","/*!\n\n=========================================================\n* Argon Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\n// react plugin used to create google maps\nimport {\n  withScriptjs,\n  withGoogleMap,\n  GoogleMap,\n  Marker\n} from \"react-google-maps\";\n\n// reactstrap components\nimport { Card, Container, Row } from \"reactstrap\";\n\n// core components\nimport Header from \"components/Headers/Header.js\";\n// mapTypeId={google.maps.MapTypeId.ROADMAP}\nconst MapWrapper = withScriptjs(\n  withGoogleMap(props => (\n    <GoogleMap\n      defaultZoom={12}\n      defaultCenter={{ lat: 40.748817, lng: -73.985428 }}\n      defaultOptions={{\n        scrollwheel: false,\n        styles: [\n          {\n            featureType: \"administrative\",\n            elementType: \"labels.text.fill\",\n            stylers: [{ color: \"#444444\" }]\n          },\n          {\n            featureType: \"landscape\",\n            elementType: \"all\",\n            stylers: [{ color: \"#f2f2f2\" }]\n          },\n          {\n            featureType: \"poi\",\n            elementType: \"all\",\n            stylers: [{ visibility: \"off\" }]\n          },\n          {\n            featureType: \"road\",\n            elementType: \"all\",\n            stylers: [{ saturation: -100 }, { lightness: 45 }]\n          },\n          {\n            featureType: \"road.highway\",\n            elementType: \"all\",\n            stylers: [{ visibility: \"simplified\" }]\n          },\n          {\n            featureType: \"road.arterial\",\n            elementType: \"labels.icon\",\n            stylers: [{ visibility: \"off\" }]\n          },\n          {\n            featureType: \"transit\",\n            elementType: \"all\",\n            stylers: [{ visibility: \"off\" }]\n          },\n          {\n            featureType: \"water\",\n            elementType: \"all\",\n            stylers: [{ color: \"#5e72e4\" }, { visibility: \"on\" }]\n          }\n        ]\n      }}\n    >\n      <Marker position={{ lat: 40.748817, lng: -73.985428 }} />\n    </GoogleMap>\n  ))\n);\n\nclass Maps extends React.Component {\n  render() {\n    return (\n      <>\n        <Header />\n        {/* Page content */}\n        <Container className=\"mt--7\" fluid>\n          <Row>\n            <div className=\"col\">\n              <Card className=\"shadow border-0\">\n                <MapWrapper\n                  googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=YOUR_KEY_HERE\"\n                  loadingElement={<div style={{ height: `100%` }} />}\n                  containerElement={\n                    <div\n                      style={{ height: `600px` }}\n                      className=\"map-canvas\"\n                      id=\"map-canvas\"\n                    />\n                  }\n                  mapElement={\n                    <div style={{ height: `100%`, borderRadius: \"inherit\" }} />\n                  }\n                />\n              </Card>\n            </div>\n          </Row>\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default Maps;\n","/*!\n\n=========================================================\n* Argon Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React, { useState } from \"react\";\n\n// reactstrap components\nimport {\n    Button,\n    Card,\n    CardHeader,\n    CardBody,\n    FormGroup,\n    Form,\n    Input,\n    InputGroupAddon,\n    InputGroupText,\n    InputGroup,\n    Row,\n    Col\n} from \"reactstrap\";\nimport Toast from 'react-bootstrap/Toast'\nimport { register } from \"../../network/ApiAxios\";\nimport config from \"../../config\";\n\nconst Register = () => {\n\n    const [name, setName] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\n    const [error, setError] = useState(\"\");\n    const [showToast, setShowToast] = useState(false);\n    const [toastMessage, setToastMessage] = useState(\"Email sent! Check it to reset your password.\");\n    const [userID, setUserID] = useState(null);\n\n    const registerUser = async () => {\n        if (!(name && email && password && confirmPassword)) {\n            setError(\"Make sure to fill all the inputs and agree to the privacy policy\");\n            return;\n        }\n\n        if (password !== confirmPassword) {\n            setError(\"Passwords do not match\");\n            return;\n        }\n        const response = await register(name, email, password);\n        const { data } = response;\n        if (!data.success) {\n            setError(data.msg);\n            return;\n        }\n        if (config.DEMO) {\n            setToastMessage(\"This is a demo, so we will not send you an email. Instead, click on this link to verify your account:\")\n            setUserID(data.userID);\n        }\n        setError(\"\");\n        setName(\"\");\n        setEmail(\"\");\n        setPassword(\"\");\n        setConfirmPassword(\"\");\n        setShowToast(true);\n    };\n\n    return (\n        <>\n            <div\n                aria-live=\"polite\"\n                aria-atomic=\"true\"\n                style={{\n                    position: 'fixed',\n                    minHeight: '100px',\n                    width: \"35%\",\n                    right: 10,\n                    bottom: 80,\n                    zIndex: 50\n                }}\n            >\n                <Toast style={{\n                    position: 'absolute',\n                    top: 0,\n                    right: 0,\n                    backgroundColor: \"white\",\n                    padding: 10,\n                    borderRadius: 10\n                }} onClose={() => setShowToast(false)} show={showToast} delay={10000} autohide={!config.DEMO}>\n                    <Toast.Header>\n                        <img style={{ height: \"30px\", width: \"100px\" }} src={require(\"assets/img/brand/argon-react.png\").default} alt=\"...\" />\n                    </Toast.Header>\n                    <Toast.Body>\n                        {toastMessage}\n                        {config.DEMO ?\n                            <a href={config.DOMAIN_NAME + '/auth/confirm-email/' + userID}>\n                                {config.DOMAIN_NAME + '/auth/confirm-email/' + userID}\n                            </a> : null}\n                    </Toast.Body>\n                </Toast>\n            </div>\n            <Col lg=\"6\" md=\"8\">\n                <Card className=\"bg-secondary shadow border-0\">\n                    <CardHeader className=\"bg-transparent pb-5\">\n                        <div className=\"text-center text-muted mb-4\">\n                            <small>sign up with credentials</small>\n                        </div>\n                    </CardHeader>\n                    <CardBody className=\"px-lg-5 py-lg-5\">\n\n                        <Form role=\"form\">\n                            <FormGroup>\n                                <InputGroup className=\"input-group-alternative mb-3\">\n                                    <InputGroupAddon addonType=\"prepend\">\n                                        <InputGroupText>\n                                            <i className=\"ni ni-hat-3\" />\n                                        </InputGroupText>\n                                    </InputGroupAddon>\n                                    <Input placeholder=\"Name\" type=\"text\" value={name}\n                                        onChange={e => setName(e.target.value)}\n                                    />\n                                </InputGroup>\n                            </FormGroup>\n                            <FormGroup>\n                                <InputGroup className=\"input-group-alternative mb-3\">\n                                    <InputGroupAddon addonType=\"prepend\">\n                                        <InputGroupText>\n                                            <i className=\"ni ni-email-83\" />\n                                        </InputGroupText>\n                                    </InputGroupAddon>\n                                    <Input placeholder=\"Email\" type=\"email\" autoComplete=\"new-email\" value={email}\n                                        onChange={e => setEmail(e.target.value)}\n                                    />\n                                </InputGroup>\n                            </FormGroup>\n                            <FormGroup>\n                                <InputGroup className=\"input-group-alternative\">\n                                    <InputGroupAddon addonType=\"prepend\">\n                                        <InputGroupText>\n                                            <i className=\"ni ni-lock-circle-open\" />\n                                        </InputGroupText>\n                                    </InputGroupAddon>\n                                    <Input placeholder=\"Password\" type=\"password\" autoComplete=\"new-password\" value={password}\n                                        onChange={e => setPassword(e.target.value)}\n                                    />\n                                </InputGroup>\n                            </FormGroup>\n                            <FormGroup>\n                                <InputGroup className=\"input-group-alternative\">\n                                    <InputGroupAddon addonType=\"prepend\">\n                                        <InputGroupText>\n                                            <i className=\"ni ni-lock-circle-open\" />\n                                        </InputGroupText>\n                                    </InputGroupAddon>\n                                    <Input placeholder=\"Confirm Password\" type=\"password\" autoComplete=\"new-password\" value={confirmPassword}\n                                        onChange={e => setConfirmPassword(e.target.value)}\n                                    />\n                                </InputGroup>\n                            </FormGroup>\n                            {error ?\n                                <div className=\"text-muted font-italic\">\n                                    <small>\n                                        error:{\" \"}\n                                        <span className=\"text-red font-weight-700\">{error}</span>\n                                    </small>\n                                </div> : null\n                            }\n\n                            <div className=\"text-center\">\n                                <Button onClick={registerUser} className=\"mt-4\" color=\"primary\" type=\"button\">\n                                    Create account\n                                    </Button>\n                            </div>\n                        </Form>\n                    </CardBody>\n                </Card>\n            </Col>\n        </>\n    );\n};\n\nexport default Register;\n","/*!\n\n=========================================================\n* Argon Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\n\n// reactstrap components\nimport { Button, Container, Row, Col } from \"reactstrap\";\nimport { useHistory } from \"react-router-dom\";\n\nconst EditHeader = () => {\n\n    const username = JSON.parse(localStorage.getItem(\"admin\")).name;\n    const history = useHistory();\n\n    return (\n        <>\n            <div\n                className=\"header pb-8 pt-5 pt-lg-8 d-flex align-items-center\"\n                style={{\n                    minHeight: \"600px\",\n                    backgroundImage:\n                        \"url(\" + require(\"assets/img/theme/profile-cover.jpg\") + \")\",\n                    backgroundSize: \"cover\",\n                    backgroundPosition: \"center top\"\n                }}\n            >\n                {/* Mask */}\n                <span className=\"mask bg-gradient-default opacity-8\" />\n                {/* Header container */}\n                <Container className=\"d-flex align-items-center\" fluid>\n                    <Row>\n                        <Col lg=\"12\" md=\"10\">\n                            <h1 className=\"display-2 text-white\">Hello {username}</h1>\n                            {/*<p className=\"text-white mt-0 mb-5\">*/}\n                            {/*    This is your profile page. You can see the progress you've*/}\n                            {/*    made with your work and manage your projects or assigned tasks*/}\n                            {/*</p>*/}\n                            {/* <Button\n                                color=\"info\"\n                                onClick={() => history.push('/admin/user-profile')}\n                            >\n                                Back to your profile\n                            </Button> */}\n                        </Col>\n                    </Row>\n                </Container>\n            </div>\n        </>\n    );\n}\n\nexport default EditHeader;\n","\nimport React, { useEffect, useState } from \"react\";\n\n// reactstrap components\nimport {\n    Button,\n    Card,\n    CardHeader,\n    CardBody,\n    FormGroup,\n    Form,\n    Input,\n    Container,\n    Row,\n    Col\n} from \"reactstrap\";\n// core components\nimport UserHeader from \"components/Headers/UserHeader.js\";\nimport EditHeader from \"../../components/Headers/EditHeader\";\nimport { edit } from \"../../network/ApiAxios\";\n\nconst RegisterUser = props => {\n\n\n    let user = JSON.parse(localStorage.getItem(\"admin\"));\n\n    // const [isDisabled,setIsDisabled] = useState(false)\n    const [isTempAddIsPerAdd, setIsTempAddIsPerAdd] = useState(false)\n\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    //temp Add\n    const [tempAddLine1, setTempAddLine1] = useState(\"\");\n    const [tempAddLine2, setTempAddLine2] = useState(\"\");\n    const [tempAddArea, setTempAddArea] = useState(\"\");\n    const [tempAddCity, setTempAddCity] = useState(\"\");\n    const [tempAddState, setTempAddState] = useState(\"\");\n    const [tempAddPin, setTempAddPin] = useState(\"\");\n    ///per Add\n    const [perAddLine1, setPerAddLine1] = useState(\"\");\n    const [perAddLine2, setPerAddLine2] = useState(\"\");\n    const [perAddArea, setPerAddArea] = useState(\"\");\n    const [perAddCity, setPerAddCity] = useState(\"\");\n    const [perAddState, setPerAddState] = useState(\"\");\n    const [perAddPin, setPerAddPin] = useState(\"\");\n    const [dob, setDOB] = useState(new Date);\n    const [mobile, setMobile] = useState();\n    const [fname, setFName] = useState(\"\");\n    const [lname, setLName] = useState(\"\");\n\n    const RegUser = () => {\n\n    }\n\n\n    return (\n        <>\n            <EditHeader />\n            {/* Page content */}\n            <Container className=\"mt--7\" fluid>\n                <Row>\n                    <div className=\"col\">\n                        <Card className=\"bg-secondary shadow\">\n                            <CardHeader className=\"bg-white border-0\">\n                                <Row className=\"align-items-center\">\n                                    <Col xs=\"8\">\n                                        <h3 className=\"mb-0\">Register New User.</h3>\n                                    </Col>\n                                    <Col className=\"text-right\" xs=\"4\">\n                                        <Button\n                                            color=\"primary\"\n                                            href=\"#pablo\"\n                                            onClick={RegUser}\n                                            size=\"sm\"\n                                        // disabled={isTestUser}\n                                        >\n                                            Save\n                                        </Button>\n                                    </Col>\n                                </Row>\n                            </CardHeader>\n                            <CardBody>\n                                <Form>\n                                    <h6 className=\"heading-small text-muted mb-4\">\n                                        User information\n                                    </h6>\n                                    <div className=\"pl-lg-4\">\n                                        <Row>\n                                            <Col lg=\"6\">\n                                                <FormGroup>\n                                                    <label\n                                                        className=\"form-control-label\"\n                                                        htmlFor=\"input-username\"\n                                                    >\n                                                        First Name\n                                                    </label>\n                                                    <Input\n\n                                                        className=\"form-control-alternative\"\n                                                        value={fname}\n                                                        id=\"input-fname\"\n                                                        placeholder=\"First Name\"\n                                                        onChange={e => setFName(e.target.value)}\n                                                        type=\"text\"\n                                                    />\n                                                </FormGroup>\n                                            </Col><Col lg=\"6\">\n                                                <FormGroup>\n                                                    <label\n                                                        className=\"form-control-label\"\n                                                        htmlFor=\"input-username\"\n                                                    >\n                                                        Last Name\n                                                    </label>\n                                                    <Input\n                                                        className=\"form-control-alternative\"\n                                                        value={lname}\n                                                        id=\"input-lname\"\n                                                        placeholder=\"Last Name\"\n                                                        onChange={e => setLName(e.target.value)}\n                                                        type=\"text\"\n                                                    />\n                                                </FormGroup>\n                                            </Col>\n                                        </Row>\n                                        <Row>\n                                            <Col lg=\"6\">\n                                                <FormGroup>\n                                                    <label\n                                                        className=\"form-control-label\"\n                                                        htmlFor=\"input-email\"\n                                                    >\n                                                        Email address\n                                                    </label>\n                                                    <Input\n                                                        className=\"form-control-alternative\"\n                                                        id=\"input-email\"\n                                                        value={email}\n                                                        placeholder=\"Email Address\"\n                                                        onChange={e => setEmail(e.target.value)}\n                                                        type=\"email\"\n                                                    />\n                                                </FormGroup>\n                                            </Col>\n                                            <Col lg=\"6\">\n                                                <FormGroup>\n                                                    <label\n                                                        className=\"form-control-label\"\n                                                        htmlFor=\"input-email\"\n                                                    >\n                                                        Password\n                                                    </label>\n                                                    <Input\n                                                        className=\"form-control-alternative\"\n                                                        id=\"input-password\"\n                                                        placeholder=\"Password\"\n                                                        value={password}\n                                                        onChange={e => setPassword(e.target.value)}\n                                                        type=\"Text\"\n                                                    />\n                                                </FormGroup>\n                                            </Col>\n\n                                        </Row>\n\n\n                                        {/* Address */}\n\n                                        <div>\n                                            <Row>\n                                                <h6 className=\"heading-small text-muted mb-4\">\n                                                    Temporary Address\n                                            </h6>\n                                                <Col lg=\"12\" >\n                                                    <FormGroup>\n                                                        <label\n                                                            className=\"form-control-label\"\n                                                            htmlFor=\"input-email\"\n                                                        >\n                                                            Temporary Address Line 1\n                                                        </label>\n                                                        <Input\n                                                            className=\"form-control-alternative\"\n                                                            id=\"input-email\"\n                                                            placeholder=\"Temporary Address\"\n                                                            value={tempAddLine1}\n                                                            onChange={e => setTempAddLine1(e.target.value)}\n                                                            type=\"Text\"\n                                                        />\n                                                    </FormGroup>\n                                                </Col>\n\n                                            </Row>\n                                            <Row>\n                                                <Col lg=\"12\" >\n                                                    <FormGroup>\n                                                        <label\n                                                            className=\"form-control-label\"\n                                                            htmlFor=\"input-email\"\n                                                        >\n                                                            Temporary Address Line 2\n                                                        </label>\n                                                        <Input\n                                                            className=\"form-control-alternative\"\n                                                            id=\"input-email\"\n                                                            placeholder=\"Temporary Address Line 2\"\n                                                            value={tempAddLine2}\n                                                            onChange={e => setTempAddLine2(e.target.value)}\n                                                            type=\"Text\"\n                                                        />\n                                                    </FormGroup>\n                                                </Col>\n\n                                            </Row>\n                                            <Row>\n                                                <Col lg=\"6\" >\n                                                    <FormGroup>\n                                                        <label\n                                                            className=\"form-control-label\"\n                                                            htmlFor=\"input-email\"\n                                                        >\n                                                            Area\n                                                        </label>\n                                                        <Input\n                                                            className=\"form-control-alternative\"\n                                                            id=\"input-email\"\n                                                            placeholder=\"Area\"\n                                                            value={tempAddArea}\n                                                            onChange={e => setTempAddArea(e.target.value)}\n                                                            type=\"Text\"\n                                                        />\n                                                    </FormGroup>\n                                                </Col>\n                                                <Col lg=\"6\" >\n                                                    <FormGroup>\n                                                        <label\n                                                            className=\"form-control-label\"\n                                                            htmlFor=\"input-email\"\n                                                        >\n                                                            City\n                                                        </label>\n                                                        <Input\n                                                            className=\"form-control-alternative\"\n                                                            id=\"input-email\"\n                                                            placeholder=\"City\"\n                                                            value={tempAddCity}\n                                                            onChange={e => setTempAddCity(e.target.value)}\n                                                            type=\"Text\"\n                                                        />\n                                                    </FormGroup>\n                                                </Col>\n\n                                            </Row>\n                                            <Row>\n                                                <Col lg=\"6\" >\n                                                    <FormGroup>\n                                                        <label\n                                                            className=\"form-control-label\"\n                                                            htmlFor=\"input-email\"\n                                                        >\n                                                            State\n                                                        </label>\n                                                        <Input\n                                                            className=\"form-control-alternative\"\n                                                            id=\"input-email\"\n                                                            placeholder=\"State\"\n                                                            value={tempAddState}\n                                                            onChange={e => setTempAddState(e.target.value)}\n                                                            type=\"Text\"\n                                                        />\n                                                    </FormGroup>\n                                                </Col>\n                                                <Col lg=\"6\" >\n                                                    <FormGroup>\n                                                        <label\n                                                            className=\"form-control-label\"\n                                                            htmlFor=\"input-email\"\n                                                        >\n                                                            Pin\n                                                        </label>\n                                                        <Input\n                                                            className=\"form-control-alternative\"\n                                                            id=\"input-email\"\n                                                            placeholder=\"Pin Code\"\n                                                            value={tempAddPin}\n                                                            onChange={e => setTempAddPin(e.target.value)}\n                                                            type=\"Text\"\n                                                        />\n                                                    </FormGroup>\n                                                </Col>\n\n                                            </Row>\n\n                                        </div>\n                                        <div>\n                                            <Row>\n                                                <h6 className=\"heading-small text-muted mb-4\">\n                                                    Permanent Address\n                                            </h6>\n                                                <Col lg=\"12\" >\n                                                    <FormGroup>\n                                                        <label\n                                                            className=\"form-control-label\"\n                                                            htmlFor=\"input-check\"\n                                                        >\n                                                            Permanent Address Line 1\n                                                        </label>\n                                                        <Input\n                                                            className=\"form-control-alternative\"\n                                                            disabled={isTempAddIsPerAdd}\n                                                            onChange={e => setPerAddLine1(e.target.value)}\n                                                            type=\"CheckBox\"\n                                                        />\n                                                    </FormGroup>\n                                                </Col>\n\n                                            </Row>\n\n\n                                        </div>\n                                        <div>\n                                            <Row>\n                                                <h6 className=\"heading-small text-muted mb-4\">\n                                                    Permanent Address\n                                            </h6>\n                                                <Col lg=\"12\" >\n                                                    <FormGroup>\n                                                        <label\n                                                            className=\"form-control-label\"\n                                                            htmlFor=\"input-pal1\"\n                                                        >\n                                                            Permanent Address Line 1\n                                                        </label>\n                                                        <Input\n                                                            className=\"form-control-alternative\"\n                                                            disabled={isTempAddIsPerAdd}\n                                                            id=\"input-pal1\"\n                                                            placeholder=\"Permanent Address\"\n                                                            value={perAddLine1}\n                                                            onChange={e => setPerAddLine1(e.target.value)}\n                                                            type=\"Text\"\n                                                        />\n                                                    </FormGroup>\n                                                </Col>\n\n                                            </Row>\n                                            <Row>\n                                                <Col lg=\"12\" >\n                                                    <FormGroup>\n                                                        <label\n                                                            className=\"form-control-label\"\n                                                            htmlFor=\"input-pal2\"\n                                                        >\n                                                            Permanent Address Line 2\n                                                        </label>\n                                                        <Input\n                                                            className=\"form-control-alternative\"\n                                                            id=\"input-pal2\"\n                                                            disabled={isTempAddIsPerAdd}\n                                                            placeholder=\"Permanent Address Line 2\"\n                                                            value={perAddLine2}\n                                                            onChange={e => setPerAddLine2(e.target.value)}\n                                                            type=\"Text\"\n                                                        />\n                                                    </FormGroup>\n                                                </Col>\n\n                                            </Row>\n                                            <Row>\n                                                <Col lg=\"6\" >\n                                                    <FormGroup>\n                                                        <label\n                                                            className=\"form-control-label\"\n                                                            htmlFor=\"input-pArea\"\n                                                        >\n                                                            Area\n                                                        </label>\n                                                        <Input\n                                                            className=\"form-control-alternative\"\n                                                            id=\"input-pArea\"\n                                                            placeholder=\"Area\"\n                                                            value={perAddArea}\n                                                            onChange={e => setPerAddArea(e.target.value)}\n                                                            disabled={isTempAddIsPerAdd}\n                                                            type=\"Text\"\n                                                        />\n                                                    </FormGroup>\n                                                </Col>\n                                                <Col lg=\"6\" >\n                                                    <FormGroup>\n                                                        <label\n                                                            className=\"form-control-label\"\n                                                            htmlFor=\"input-pCity\"\n                                                        >\n                                                            City\n                                                        </label>\n                                                        <Input\n                                                            className=\"form-control-alternative\"\n                                                            id=\"input-pCity\"\n                                                            disabled={isTempAddIsPerAdd}\n                                                            placeholder=\"City\"\n                                                            value={perAddCity}\n                                                            onChange={e => setPerAddCity(e.target.value)}\n                                                            type=\"Text\"\n                                                        />\n                                                    </FormGroup>\n                                                </Col>\n\n                                            </Row>\n                                            <Row>\n                                                <Col lg=\"6\" >\n                                                    <FormGroup>\n                                                        <label\n                                                            className=\"form-control-label\"\n                                                            htmlFor=\"input-pState\"\n                                                        >\n                                                            State\n                                                        </label>\n                                                        <Input\n                                                            className=\"form-control-alternative\"\n                                                            id=\"input-pState\"\n                                                            disabled={isTempAddIsPerAdd}\n                                                            placeholder=\"State\"\n                                                            value={perAddState}\n                                                            onChange={e => setPerAddState(e.target.value)}\n                                                            type=\"Text\"\n                                                        />\n                                                    </FormGroup>\n                                                </Col>\n                                                <Col lg=\"6\" >\n                                                    <FormGroup>\n                                                        <label\n                                                            className=\"form-control-label\"\n                                                            htmlFor=\"input-pPin\"\n                                                        >\n                                                            Pin\n                                                        </label>\n                                                        <Input\n                                                            className=\"form-control-alternative\"\n                                                            id=\"input-pPin\"\n                                                            disabled={isTempAddIsPerAdd}\n                                                            placeholder=\"Pin Code\"\n                                                            value={perAddPin}\n                                                            onChange={e => setPerAddPin(e.target.value)}\n                                                            type=\"Text\"\n                                                        />\n                                                    </FormGroup>\n                                                </Col>\n\n                                            </Row>\n\n                                        </div>\n\n                                    </div>\n                                </Form>\n                            </CardBody>\n                        </Card>\n                    </div>\n                </Row>\n            </Container>\n        </>\n    )\n}\n\n\nexport default RegisterUser","/*!\n\n=========================================================\n* Argon Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React, { useState } from \"react\";\n\n// reactstrap components\nimport {\n    Button,\n    Card,\n    CardHeader,\n    CardBody,\n    FormGroup,\n    Form,\n    Input,\n    InputGroupAddon,\n    InputGroupText,\n    InputGroup,\n    Row,\n    Col\n} from \"reactstrap\";\nimport { login } from \"../../network/ApiAxios\";\n\nconst Login = props => {\n\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [error, setError] = useState(\"\");\n\n    const tryLogin = async (e) => {\n        e.preventDefault();\n        const response = await login(email, password);\n        const { data } = response;\n        if (data.success) {\n            setError(\"\");\n            localStorage.setItem(\"token\", data.token);\n            localStorage.setItem(\"admin\", JSON.stringify(data.admin));\n            props.history.push(\"/\");\n        } else {\n            setPassword(\"\");\n            setError(data.msg);\n        }\n    }\n\n    return (\n        <>\n            <Col lg=\"5\" md=\"7\">\n                <Card className=\"bg-secondary shadow border-0\">\n\n                    <CardBody className=\"px-lg-5 py-lg-5\">\n                        <div className=\"text-center text-muted mb-4\">\n                            <small>Sign in with credentials</small>\n                        </div>\n                        <Form role=\"form\" >\n                            <FormGroup className=\"mb-3\">\n                                <InputGroup className=\"input-group-alternative\">\n                                    <InputGroupAddon addonType=\"prepend\">\n                                        <InputGroupText>\n                                            <i className=\"ni ni-email-83\" />\n                                        </InputGroupText>\n                                    </InputGroupAddon>\n                                    <Input placeholder=\"Email\" type=\"email\" autoComplete=\"email\" value={email}\n                                        onChange={e => setEmail(e.target.value)} />\n                                </InputGroup>\n                            </FormGroup>\n                            <FormGroup>\n                                <InputGroup className=\"input-group-alternative\">\n                                    <InputGroupAddon addonType=\"prepend\">\n                                        <InputGroupText>\n                                            <i className=\"ni ni-lock-circle-open\" />\n                                        </InputGroupText>\n                                    </InputGroupAddon>\n                                    <Input placeholder=\"Password\" type=\"password\" autoComplete=\"password\" value={password}\n                                        onChange={e => setPassword(e.target.value)} />\n                                </InputGroup>\n                            </FormGroup>\n\n                            {error ?\n                                <div className=\"text-muted font-italic\">\n                                    <small>\n                                        error:{\" \"}\n                                        <span className=\"text-red font-weight-700\">{error}</span>\n                                    </small>\n                                </div> : null}\n                            <div className=\"text-center\">\n                                <Button className=\"my-4\" color=\"primary\" type=\"submit\" onClick={(e) => tryLogin(e)}>\n                                    Sign in\n                                </Button>\n                            </div>\n                        </Form>\n                    </CardBody>\n                </Card>\n                <Row className=\"mt-3\">\n                    <Col className=\"text-right\" xs=\"12\">\n                        <a\n                            className=\"text-light\"\n                            onClick={() => props.history.push('/auth/register')}\n                        >\n                            <small>Create new account</small>\n                        </a>\n                    </Col>\n                </Row>\n            </Col>\n        </>\n    );\n}\n\nexport default Login;\n","import React, {useEffect, useState} from 'react';\nimport { useParams } from 'react-router-dom';\nimport {confirmRegister} from \"../../network/ApiAxios\";\nimport {Card, CardBody, Col} from \"reactstrap\";\n\nconst ConfirmEmail = props => {\n\n    const {id} = useParams();\n    const [valid, setValid] = useState(true);\n\n    useEffect(() => {\n        if (!id) {\n            setValid(false);\n        } else {\n            const runAsync = async () => {\n                const response = await confirmRegister(id);\n                const {data} = response;\n                console.log(data);\n                if (!data.success) {\n                    setValid(false);\n                } else {\n                    setTimeout(() => {\n                        props.history.push('/auth/login');\n                    }, 5000);\n                }\n            }\n            runAsync();\n        }\n    }, [])\n\n    return (\n        <>\n            <Col lg=\"6\" md=\"8\">\n                <Card className=\"bg-secondary shadow border-0\">\n                    <CardBody className=\"px-lg-5 py-lg-5\">\n                        <div className=\"text-center mb-4\">\n                            <h1>{valid ? \"Email confirmed! You will be redirected to login...\" : \"Something went wrong!\"}</h1>\n                        </div>\n                    </CardBody>\n                </Card>\n            </Col>\n        </>\n    )\n};\n\nexport default ConfirmEmail;\n","/*!\n\n=========================================================\n* Argon Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\n// react component that copies the given text inside your clipboard\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\n// reactstrap components\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  Container,\n  Row,\n  Col,\n  UncontrolledTooltip\n} from \"reactstrap\";\n// core components\nimport Header from \"components/Headers/Header.js\";\n\nclass Icons extends React.Component {\n  state = {};\n  render() {\n    return (\n      <>\n        <Header />\n        {/* Page content */}\n        <Container className=\" mt--7\" fluid>\n          {/* Table */}\n          <Row>\n            <div className=\" col\">\n              <Card className=\" shadow\">\n                <CardHeader className=\" bg-transparent\">\n                  <h3 className=\" mb-0\">Icons</h3>\n                </CardHeader>\n                <CardBody>\n                  <Row className=\" icon-examples\">\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"active-40\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"active-40\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          id=\"tooltip982655500\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-active-40\" />\n                            <span>active-40</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip982655500\"\n                      >\n                        {this.state.copiedText === \"active-40\"\n                          ? \"Copied\"\n                          : \"Copy To Clipboard\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"air-baloon\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"air-baloon\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"air-baloon\"\n                          id=\"tooltip47550434\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-air-baloon\" />\n                            <span>air-baloon</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip47550434\"\n                      >\n                        {this.state.copiedText === \"air-baloon\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"album-2\"}\n                        onCopy={() => this.setState({ copiedText: \"album-2\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"album-2\"\n                          id=\"tooltip945481346\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-album-2\" />\n                            <span>album-2</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip945481346\"\n                      >\n                        {this.state.copiedText === \"album-2\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"align-center\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"align-center\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"align-center\"\n                          id=\"tooltip662352101\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-align-center\" />\n                            <span>align-center</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip662352101\"\n                      >\n                        {this.state.copiedText === \"align-center\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"left-2\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"align-left-2\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"align-left-2\"\n                          id=\"tooltip125499785\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-align-left-2\" />\n                            <span>align-left-2</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip125499785\"\n                      >\n                        {this.state.copiedText === \"align-left-2\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"ambulance\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"ambulance\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"ambulance\"\n                          id=\"tooltip382136785\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-ambulance\" />\n                            <span>ambulance</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip382136785\"\n                      >\n                        {this.state.copiedText === \"ambulance\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"asdasdsafsdsad\"}\n                        onCopy={() => this.setState({ copiedText: \"app\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"app\"\n                          id=\"tooltip3354607\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-app\" />\n                            <span>app</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip3354607\"\n                      >\n                        {this.state.copiedText === \"app\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"archive-2\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"archive-2\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"archive-2\"\n                          id=\"tooltip949558633\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-archive-2\" />\n                            <span>archive-2</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip949558633\"\n                      >\n                        {this.state.copiedText === \"archive-2\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"atom\"}\n                        onCopy={() => this.setState({ copiedText: \"atom\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"atom\"\n                          id=\"tooltip742747005\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-atom\" />\n                            <span>atom</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip742747005\"\n                      >\n                        {this.state.copiedText === \"atom\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"badge\"}\n                        onCopy={() => this.setState({ copiedText: \"badge\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"badge\"\n                          id=\"tooltip488565068\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-badge\" />\n                            <span>badge</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip488565068\"\n                      >\n                        {this.state.copiedText === \"badge\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"bag-17\"}\n                        onCopy={() => this.setState({ copiedText: \"bag-17\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"bag-17\"\n                          id=\"tooltip163626790\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-bag-17\" />\n                            <span>bag-17</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip163626790\"\n                      >\n                        {this.state.copiedText === \"bag-17\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"basket\"}\n                        onCopy={() => this.setState({ copiedText: \"basket\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"basket\"\n                          id=\"tooltip387253692\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-basket\" />\n                            <span>basket</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip387253692\"\n                      >\n                        {this.state.copiedText === \"basket\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"bell-55\"}\n                        onCopy={() => this.setState({ copiedText: \"bell-55\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"bell-55\"\n                          id=\"tooltip126752761\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-bell-55\" />\n                            <span>bell-55</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip126752761\"\n                      >\n                        {this.state.copiedText === \"bell-55\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"bold-down\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"bold-down\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"bold-down\"\n                          id=\"tooltip819281856\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-bold-down\" />\n                            <span>bold-down</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip819281856\"\n                      >\n                        {this.state.copiedText === \"bold-down\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"bold-left\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"bold-left\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"bold-left\"\n                          id=\"tooltip881699027\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-bold-left\" />\n                            <span>bold-left</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip881699027\"\n                      >\n                        {this.state.copiedText === \"bold-left\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"bold-right\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"bold-right\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"bold-right\"\n                          id=\"tooltip208507461\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-bold-right\" />\n                            <span>bold-right</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip208507461\"\n                      >\n                        {this.state.copiedText === \"bold-right\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"bold-up\"}\n                        onCopy={() => this.setState({ copiedText: \"bold-up\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"bold-up\"\n                          id=\"tooltip105289310\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-bold-up\" />\n                            <span>bold-up</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip105289310\"\n                      >\n                        {this.state.copiedText === \"bold-up\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"bold\"}\n                        onCopy={() => this.setState({ copiedText: \"bold\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"bold\"\n                          id=\"tooltip832362262\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-bold\" />\n                            <span>bold</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip832362262\"\n                      >\n                        {this.state.copiedText === \"bold\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"book-bookmark\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"book-bookmark\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"book-bookmark\"\n                          id=\"tooltip606002875\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-book-bookmark\" />\n                            <span>book-bookmark</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip606002875\"\n                      >\n                        {this.state.copiedText === \"book-bookmark\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"books\"}\n                        onCopy={() => this.setState({ copiedText: \"books\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"books\"\n                          id=\"tooltip484529730\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-books\" />\n                            <span>books</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip484529730\"\n                      >\n                        {this.state.copiedText === \"books\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"box-2\"}\n                        onCopy={() => this.setState({ copiedText: \"box-2\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"box-2\"\n                          id=\"tooltip509205883\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-box-2\" />\n                            <span>box-2</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip509205883\"\n                      >\n                        {this.state.copiedText === \"box-2\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"briefcase-24\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"briefcase-24\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"briefcase-24\"\n                          id=\"tooltip147778056\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-briefcase-24\" />\n                            <span>briefcase-24</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip147778056\"\n                      >\n                        {this.state.copiedText === \"briefcase-24\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"building\"}\n                        onCopy={() => this.setState({ copiedText: \"building\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"building\"\n                          id=\"tooltip157423388\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-building\" />\n                            <span>building</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip157423388\"\n                      >\n                        {this.state.copiedText === \"building\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"bulb-61\"}\n                        onCopy={() => this.setState({ copiedText: \"bulb-61\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"bulb-61\"\n                          id=\"tooltip126210465\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-bulb-61\" />\n                            <span>bulb-61</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip126210465\"\n                      >\n                        {this.state.copiedText === \"bulb-61\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"list-67\"}\n                        onCopy={() => this.setState({ copiedText: \"list-67\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"bullet-list-67\"\n                          id=\"tooltip672244852\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-bullet-list-67\" />\n                            <span>bullet-list-67</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip672244852\"\n                      >\n                        {this.state.copiedText === \"list-67\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"bus-front-12\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"bus-front-12\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"bus-front-12\"\n                          id=\"tooltip17383590\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-bus-front-12\" />\n                            <span>bus-front-12</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip17383590\"\n                      >\n                        {this.state.copiedText === \"bus-front-12\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"button-pause\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"button-pause\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"button-pause\"\n                          id=\"tooltip721295259\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-button-pause\" />\n                            <span>button-pause</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip721295259\"\n                      >\n                        {this.state.copiedText === \"button-pause\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"button-play\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"button-play\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"button-play\"\n                          id=\"tooltip397403700\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-button-play\" />\n                            <span>button-play</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip397403700\"\n                      >\n                        {this.state.copiedText === \"button-play\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"button-power\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"button-power\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"button-power\"\n                          id=\"tooltip286478188\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-button-power\" />\n                            <span>button-power</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip286478188\"\n                      >\n                        {this.state.copiedText === \"button-power\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"calendar-grid-58\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"calendar-grid-58\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"calendar-grid-58\"\n                          id=\"tooltip332635506\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-calendar-grid-58\" />\n                            <span>calendar-grid-58</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip332635506\"\n                      >\n                        {this.state.copiedText === \"calendar-grid-58\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"camera-compact\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"camera-compact\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"camera-compact\"\n                          id=\"tooltip872817724\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-camera-compact\" />\n                            <span>camera-compact</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip872817724\"\n                      >\n                        {this.state.copiedText === \"camera-compact\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"caps-small\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"caps-small\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"caps-small\"\n                          id=\"tooltip108271146\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-caps-small\" />\n                            <span>caps-small</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip108271146\"\n                      >\n                        {this.state.copiedText === \"caps-small\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"cart\"}\n                        onCopy={() => this.setState({ copiedText: \"cart\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"cart\"\n                          id=\"tooltip315375170\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-cart\" />\n                            <span>cart</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip315375170\"\n                      >\n                        {this.state.copiedText === \"cart\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"chart-bar-32\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"chart-bar-32\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"chart-bar-32\"\n                          id=\"tooltip906739900\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-chart-bar-32\" />\n                            <span>chart-bar-32</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip906739900\"\n                      >\n                        {this.state.copiedText === \"chart-bar-32\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"chart-pie-35\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"chart-pie-35\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"chart-pie-35\"\n                          id=\"tooltip211198935\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-chart-pie-35\" />\n                            <span>chart-pie-35</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip211198935\"\n                      >\n                        {this.state.copiedText === \"chart-pie-35\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"chat-round\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"chat-round\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"chat-round\"\n                          id=\"tooltip452799920\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-chat-round\" />\n                            <span>chat-round</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip452799920\"\n                      >\n                        {this.state.copiedText === \"chat-round\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"check-bold\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"check-bold\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"check-bold\"\n                          id=\"tooltip204269497\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-check-bold\" />\n                            <span>check-bold</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip204269497\"\n                      >\n                        {this.state.copiedText === \"check-bold\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"circle-08\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"circle-08\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"circle-08\"\n                          id=\"tooltip63796078\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-circle-08\" />\n                            <span>circle-08</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip63796078\"\n                      >\n                        {this.state.copiedText === \"circle-08\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"cloud-download-95\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"cloud-download-95\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"cloud-download-95\"\n                          id=\"tooltip171823822\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-cloud-download-95\" />\n                            <span>cloud-download-95</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip171823822\"\n                      >\n                        {this.state.copiedText === \"cloud-download-95\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"cloud-upload-96\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"cloud-upload-96\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"cloud-upload-96\"\n                          id=\"tooltip603641354\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-cloud-upload-96\" />\n                            <span>cloud-upload-96</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip603641354\"\n                      >\n                        {this.state.copiedText === \"cloud-upload-96\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"compass-04\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"compass-04\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"compass-04\"\n                          id=\"tooltip138747611\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-compass-04\" />\n                            <span>compass-04</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip138747611\"\n                      >\n                        {this.state.copiedText === \"compass-04\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"controller\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"controller\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"controller\"\n                          id=\"tooltip477306514\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-controller\" />\n                            <span>controller</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip477306514\"\n                      >\n                        {this.state.copiedText === \"controller\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"credit-card\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"credit-card\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"credit-card\"\n                          id=\"tooltip672313572\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-credit-card\" />\n                            <span>credit-card</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip672313572\"\n                      >\n                        {this.state.copiedText === \"credit-card\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"curved-next\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"curved-next\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"curved-next\"\n                          id=\"tooltip228405488\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-curved-next\" />\n                            <span>curved-next</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip228405488\"\n                      >\n                        {this.state.copiedText === \"curved-next\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"delivery-fast\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"delivery-fast\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"delivery-fast\"\n                          id=\"tooltip405559\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-delivery-fast\" />\n                            <span>delivery-fast</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip405559\"\n                      >\n                        {this.state.copiedText === \"delivery-fast\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"diamond\"}\n                        onCopy={() => this.setState({ copiedText: \"diamond\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"diamond\"\n                          id=\"tooltip842334307\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-diamond\" />\n                            <span>diamond</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip842334307\"\n                      >\n                        {this.state.copiedText === \"diamond\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"email-83\"}\n                        onCopy={() => this.setState({ copiedText: \"email-83\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"email-83\"\n                          id=\"tooltip695661232\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-email-83\" />\n                            <span>email-83</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip695661232\"\n                      >\n                        {this.state.copiedText === \"email-83\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"fat-add\"}\n                        onCopy={() => this.setState({ copiedText: \"fat-add\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"fat-add\"\n                          id=\"tooltip112280005\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-fat-add\" />\n                            <span>fat-add</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip112280005\"\n                      >\n                        {this.state.copiedText === \"fat-add\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"fat-delete\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"fat-delete\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"fat-delete\"\n                          id=\"tooltip361927124\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-fat-delete\" />\n                            <span>fat-delete</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip361927124\"\n                      >\n                        {this.state.copiedText === \"fat-delete\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"fat-remove\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"fat-remove\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"fat-remove\"\n                          id=\"tooltip451275187\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-fat-remove\" />\n                            <span>fat-remove</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip451275187\"\n                      >\n                        {this.state.copiedText === \"fat-remove\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"favourite-28\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"favourite-28\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"favourite-28\"\n                          id=\"tooltip893689512\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-favourite-28\" />\n                            <span>favourite-28</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip893689512\"\n                      >\n                        {this.state.copiedText === \"favourite-28\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"folder-17\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"folder-17\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"folder-17\"\n                          id=\"tooltip988458715\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-folder-17\" />\n                            <span>folder-17</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip988458715\"\n                      >\n                        {this.state.copiedText === \"folder-17\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"glasses-2\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"glasses-2\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"glasses-2\"\n                          id=\"tooltip576477258\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-glasses-2\" />\n                            <span>glasses-2</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip576477258\"\n                      >\n                        {this.state.copiedText === \"glasses-2\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"hat-3\"}\n                        onCopy={() => this.setState({ copiedText: \"hat-3\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"hat-3\"\n                          id=\"tooltip977228923\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-hat-3\" />\n                            <span>hat-3</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip977228923\"\n                      >\n                        {this.state.copiedText === \"hat-3\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"headphones\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"headphones\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"headphones\"\n                          id=\"tooltip711983709\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-headphones\" />\n                            <span>headphones</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip711983709\"\n                      >\n                        {this.state.copiedText === \"headphones\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"html5\"}\n                        onCopy={() => this.setState({ copiedText: \"html5\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"html5\"\n                          id=\"tooltip346497134\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-html5\" />\n                            <span>html5</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip346497134\"\n                      >\n                        {this.state.copiedText === \"html5\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"istanbul\"}\n                        onCopy={() => this.setState({ copiedText: \"istanbul\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"istanbul\"\n                          id=\"tooltip344591402\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-istanbul\" />\n                            <span>istanbul</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip344591402\"\n                      >\n                        {this.state.copiedText === \"istanbul\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"circle-08\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"circle-08\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"circle-08\"\n                          id=\"tooltip815029398\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-circle-08\" />\n                            <span>circle-08</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip815029398\"\n                      >\n                        {this.state.copiedText === \"circle-08\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"key-25\"}\n                        onCopy={() => this.setState({ copiedText: \"key-25\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"key-25\"\n                          id=\"tooltip580511416\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-key-25\" />\n                            <span>key-25</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip580511416\"\n                      >\n                        {this.state.copiedText === \"key-25\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"laptop\"}\n                        onCopy={() => this.setState({ copiedText: \"laptop\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"laptop\"\n                          id=\"tooltip455996160\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-laptop\" />\n                            <span>laptop</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip455996160\"\n                      >\n                        {this.state.copiedText === \"laptop\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"like-2\"}\n                        onCopy={() => this.setState({ copiedText: \"like-2\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"like-2\"\n                          id=\"tooltip928932853\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-like-2\" />\n                            <span>like-2</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip928932853\"\n                      >\n                        {this.state.copiedText === \"like-2\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"lock-circle-open\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"lock-circle-open\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"lock-circle-open\"\n                          id=\"tooltip634042199\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-lock-circle-open\" />\n                            <span>lock-circle-open</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip634042199\"\n                      >\n                        {this.state.copiedText === \"lock-circle-open\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"map-big\"}\n                        onCopy={() => this.setState({ copiedText: \"map-big\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"map-big\"\n                          id=\"tooltip615611081\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-map-big\" />\n                            <span>map-big</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip615611081\"\n                      >\n                        {this.state.copiedText === \"map-big\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"mobile-button\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"mobile-button\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"mobile-button\"\n                          id=\"tooltip426682279\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-mobile-button\" />\n                            <span>mobile-button</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip426682279\"\n                      >\n                        {this.state.copiedText === \"mobile-button\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"money-coins\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"money-coins\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"money-coins\"\n                          id=\"tooltip198953665\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-money-coins\" />\n                            <span>money-coins</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip198953665\"\n                      >\n                        {this.state.copiedText === \"money-coins\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"note-03\"}\n                        onCopy={() => this.setState({ copiedText: \"note-03\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"note-03\"\n                          id=\"tooltip909975995\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-note-03\" />\n                            <span>note-03</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip909975995\"\n                      >\n                        {this.state.copiedText === \"note-03\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"notification-70\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"notification-70\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"notification-70\"\n                          id=\"tooltip942089221\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-notification-70\" />\n                            <span>notification-70</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip942089221\"\n                      >\n                        {this.state.copiedText === \"notification-70\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"palette\"}\n                        onCopy={() => this.setState({ copiedText: \"palette\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"palette\"\n                          id=\"tooltip721048582\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-palette\" />\n                            <span>palette</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip721048582\"\n                      >\n                        {this.state.copiedText === \"palette\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"paper-diploma\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"paper-diploma\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"paper-diploma\"\n                          id=\"tooltip875782946\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-paper-diploma\" />\n                            <span>paper-diploma</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip875782946\"\n                      >\n                        {this.state.copiedText === \"paper-diploma\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"pin-3\"}\n                        onCopy={() => this.setState({ copiedText: \"pin-3\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"pin-3\"\n                          id=\"tooltip945087492\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-pin-3\" />\n                            <span>pin-3</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip945087492\"\n                      >\n                        {this.state.copiedText === \"pin-3\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"planet\"}\n                        onCopy={() => this.setState({ copiedText: \"planet\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"planet\"\n                          id=\"tooltip482139663\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-planet\" />\n                            <span>planet</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip482139663\"\n                      >\n                        {this.state.copiedText === \"planet\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"ruler-pencil\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"ruler-pencil\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"ruler-pencil\"\n                          id=\"tooltip693938896\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-ruler-pencil\" />\n                            <span>ruler-pencil</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip693938896\"\n                      >\n                        {this.state.copiedText === \"ruler-pencil\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"satisfied\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"satisfied\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"satisfied\"\n                          id=\"tooltip634575265\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-satisfied\" />\n                            <span>satisfied</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip634575265\"\n                      >\n                        {this.state.copiedText === \"satisfied\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"scissors\"}\n                        onCopy={() => this.setState({ copiedText: \"scissors\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"scissors\"\n                          id=\"tooltip688473648\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-scissors\" />\n                            <span>scissors</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip688473648\"\n                      >\n                        {this.state.copiedText === \"scissors\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"send\"}\n                        onCopy={() => this.setState({ copiedText: \"send\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"send\"\n                          id=\"tooltip161268791\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-send\" />\n                            <span>send</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip161268791\"\n                      >\n                        {this.state.copiedText === \"send\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"settings-gear-65\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"settings-gear-65\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"settings-gear-65\"\n                          id=\"tooltip487959296\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-settings-gear-65\" />\n                            <span>settings-gear-65</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip487959296\"\n                      >\n                        {this.state.copiedText === \"settings-gear-65\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"settings\"}\n                        onCopy={() => this.setState({ copiedText: \"settings\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"settings\"\n                          id=\"tooltip156598208\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-settings\" />\n                            <span>settings</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip156598208\"\n                      >\n                        {this.state.copiedText === \"settings\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"single-02\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"single-02\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"single-02\"\n                          id=\"tooltip487356467\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-single-02\" />\n                            <span>single-02</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip487356467\"\n                      >\n                        {this.state.copiedText === \"single-02\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"single-copy-04\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"single-copy-04\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"single-copy-04\"\n                          id=\"tooltip340498904\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-single-copy-04\" />\n                            <span>single-copy-04</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip340498904\"\n                      >\n                        {this.state.copiedText === \"single-copy-04\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"sound-wave\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"sound-wave\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"sound-wave\"\n                          id=\"tooltip289156059\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-sound-wave\" />\n                            <span>sound-wave</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip289156059\"\n                      >\n                        {this.state.copiedText === \"sound-wave\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"spaceship\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"spaceship\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"spaceship\"\n                          id=\"tooltip603604642\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-spaceship\" />\n                            <span>spaceship</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip603604642\"\n                      >\n                        {this.state.copiedText === \"spaceship\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"square-pin\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"square-pin\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"square-pin\"\n                          id=\"tooltip153036405\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-square-pin\" />\n                            <span>square-pin</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip153036405\"\n                      >\n                        {this.state.copiedText === \"square-pin\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"support-16\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"support-16\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"support-16\"\n                          id=\"tooltip906422211\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-support-16\" />\n                            <span>support-16</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip906422211\"\n                      >\n                        {this.state.copiedText === \"support-16\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"tablet-button\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"tablet-button\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"tablet-button\"\n                          id=\"tooltip517579618\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-tablet-button\" />\n                            <span>tablet-button</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip517579618\"\n                      >\n                        {this.state.copiedText === \"tablet-button\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"tag\"}\n                        onCopy={() => this.setState({ copiedText: \"tag\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"tag\"\n                          id=\"tooltip297195808\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-tag\" />\n                            <span>tag</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip297195808\"\n                      >\n                        {this.state.copiedText === \"tag\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"tie-bow\"}\n                        onCopy={() => this.setState({ copiedText: \"tie-bow\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"tie-bow\"\n                          id=\"tooltip793084796\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-tie-bow\" />\n                            <span>tie-bow</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip793084796\"\n                      >\n                        {this.state.copiedText === \"tie-bow\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"time-alarm\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"time-alarm\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"time-alarm\"\n                          id=\"tooltip258891035\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-time-alarm\" />\n                            <span>time-alarm</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip258891035\"\n                      >\n                        {this.state.copiedText === \"time-alarm\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"trophy\"}\n                        onCopy={() => this.setState({ copiedText: \"trophy\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"trophy\"\n                          id=\"tooltip881235890\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-trophy\" />\n                            <span>trophy</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip881235890\"\n                      >\n                        {this.state.copiedText === \"trophy\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"tv-2\"}\n                        onCopy={() => this.setState({ copiedText: \"tv-2\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"tv-2\"\n                          id=\"tooltip330279137\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-tv-2\" />\n                            <span>tv-2</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip330279137\"\n                      >\n                        {this.state.copiedText === \"tv-2\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"umbrella-13\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"umbrella-13\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"umbrella-13\"\n                          id=\"tooltip412313570\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-umbrella-13\" />\n                            <span>umbrella-13</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip412313570\"\n                      >\n                        {this.state.copiedText === \"umbrella-13\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"user-run\"}\n                        onCopy={() => this.setState({ copiedText: \"user-run\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"user-run\"\n                          id=\"tooltip176201858\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-user-run\" />\n                            <span>user-run</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip176201858\"\n                      >\n                        {this.state.copiedText === \"user-run\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"vector\"}\n                        onCopy={() => this.setState({ copiedText: \"vector\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"vector\"\n                          id=\"tooltip71164138\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-vector\" />\n                            <span>vector</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip71164138\"\n                      >\n                        {this.state.copiedText === \"vector\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"watch-time\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"watch-time\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"watch-time\"\n                          id=\"tooltip495578192\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-watch-time\" />\n                            <span>watch-time</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip495578192\"\n                      >\n                        {this.state.copiedText === \"watch-time\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"world\"}\n                        onCopy={() => this.setState({ copiedText: \"world\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"world\"\n                          id=\"tooltip604848245\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-world\" />\n                            <span>world</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip604848245\"\n                      >\n                        {this.state.copiedText === \"world\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"zoom-split-in\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"zoom-split-in\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"zoom-split-in\"\n                          id=\"tooltip916423293\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-zoom-split-in\" />\n                            <span>zoom-split-in</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip916423293\"\n                      >\n                        {this.state.copiedText === \"zoom-split-in\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"collection\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"collection\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"collection\"\n                          id=\"tooltip142934658\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-collection\" />\n                            <span>collection</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip142934658\"\n                      >\n                        {this.state.copiedText === \"collection\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"image\"}\n                        onCopy={() => this.setState({ copiedText: \"image\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"image\"\n                          id=\"tooltip842947283\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-image\" />\n                            <span>image</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip842947283\"\n                      >\n                        {this.state.copiedText === \"image\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"shop\"}\n                        onCopy={() => this.setState({ copiedText: \"shop\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"shop\"\n                          id=\"tooltip531866818\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-shop\" />\n                            <span>shop</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip531866818\"\n                      >\n                        {this.state.copiedText === \"shop\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"ungroup\"}\n                        onCopy={() => this.setState({ copiedText: \"ungroup\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"ungroup\"\n                          id=\"tooltip470734151\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-ungroup\" />\n                            <span>ungroup</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip470734151\"\n                      >\n                        {this.state.copiedText === \"ungroup\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"world-2\"}\n                        onCopy={() => this.setState({ copiedText: \"world-2\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"world-2\"\n                          id=\"tooltip932383030\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-world-2\" />\n                            <span>world-2</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip932383030\"\n                      >\n                        {this.state.copiedText === \"world-2\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"ui-04\"}\n                        onCopy={() => this.setState({ copiedText: \"ui-04\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"ui-04\"\n                          id=\"tooltip9332484\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-ui-04\" />\n                            <span>ui-04</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip9332484\"\n                      >\n                        {this.state.copiedText === \"ui-04\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                  </Row>\n                </CardBody>\n              </Card>\n            </div>\n          </Row>\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default Icons;\n","/*!\n\n=========================================================\n* Argon Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport Index from \"views/Index.js\";\nimport Profile from \"views/examples/Profile.js\";\nimport Maps from \"views/examples/Maps.js\";\nimport Register from \"views/examples/Register.js\";\nimport RegisterUser from \"views/examples/RegisterUser.js\";\nimport Login from \"views/examples/Login.js\";\nimport Tables from \"views/examples/Tables.js\";\nimport Icons from \"views/examples/Icons.js\";\nimport ConfirmEmail from \"./views/examples/ConfirmEmail\";\nimport EditProfile from \"./views/examples/EditProfile\";\nimport UsersTable from \"./views/examples/UsersTable\";\nimport ResetPassword from \"./views/examples/ResetPassword\";\nimport ConfirmPassword from \"./views/examples/ConfirmPassword\";\nimport ResetPasswordSuccess from \"./views/examples/ResetPasswordSuccess\";\n\nvar routes = [\n  {\n    path: \"/index\",\n    name: \"Dashboard\",\n    icon: \"ni ni-tv-2 text-primary\",\n    component: Index,\n    layout: \"/admin\",\n    api: false\n  },\n  {\n    path: \"/user-profile\",\n    name: \"User Profile\",\n    icon: \"ni ni-single-02 text-yellow\",\n    component: Profile,\n    layout: \"/admin\",\n    api: true\n  },\n  {\n    path: \"/login\",\n    name: \"Login\",\n    icon: \"ni ni-key-25 text-info\",\n    component: Login,\n    layout: \"/auth\",\n    api: true\n  },\n  {\n    path: \"/register\",\n    name: \"Register\",\n    icon: \"ni ni-circle-08 text-pink\",\n    component: Register,\n    layout: \"/auth\",\n    api: true\n  },\n  {\n    path: \"/confirm-email/:id\",\n    name: \"Confirm Email\",\n    icon: \"ni ni-check-bold text-green\",\n    component: ConfirmEmail,\n    layout: \"/auth\",\n    api: true\n  },\n  {\n    path: \"/edit-profile\",\n    name: \"Edit Profile\",\n    icon: \"ni ni-ruler-pencil text-info\",\n    component: EditProfile,\n    layout: \"/admin\",\n    api: true\n  },\n  {\n    path: \"/register-user\",\n    name: \"Register User\",\n    icon: \"ni ni-single-02 text-info\",\n    component: RegisterUser,\n    layout: \"/admin\",\n    api: true\n  },\n  {\n    path: \"/users\",\n    name: \"Users\",\n    icon: \"ni ni-folder-17 text-pink\",\n    component: UsersTable,\n    layout: \"/admin\",\n    api: true\n  },\n  {\n    path: \"/reset-password\",\n    name: \"Reset Password\",\n    icon: \"ni ni-folder-17 text-pink\",\n    component: ResetPassword,\n    layout: \"/auth\",\n    api: true\n  },\n  {\n    path: \"/confirm-password/:id\",\n    name: \"Confirm Password\",\n    icon: \"ni ni-folder-17 text-pink\",\n    component: ConfirmPassword,\n    layout: \"/auth\",\n    api: true\n  },\n  {\n    path: \"/reset-success\",\n    name: \"Password Reset Confirmed\",\n    icon: \"ni ni-folder-17 text-pink\",\n    component: ResetPasswordSuccess,\n    layout: \"/auth\",\n    api: false\n  }\n];\nexport default routes;\n","/*!\n\n=========================================================\n* Argon Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React, { useEffect, useState } from \"react\";\n\n// reactstrap components\nimport {\n    Button,\n    Card,\n    CardHeader,\n    CardBody,\n    FormGroup,\n    Form,\n    Input,\n    Container,\n    Row,\n    Col\n} from \"reactstrap\";\n// core components\nimport UserHeader from \"components/Headers/UserHeader.js\";\nimport EditHeader from \"../../components/Headers/EditHeader\";\nimport { edit } from \"../../network/ApiAxios\";\n\nconst EditProfile = props => {\n\n\n    let user = JSON.parse(localStorage.getItem(\"admin\"));\n\n    const [name, setName] = useState(user.name);\n    const [email, setEmail] = useState(user.email);\n    const [isTestUser, setIsTestUser] = useState(false);\n\n    useEffect(() => {\n        if (JSON.parse(localStorage.getItem(\"admin\")).email === \"test@test.com\") {\n            setIsTestUser(true);\n        }\n    }, []);\n\n    const editUser = async () => {\n        const response = await edit(user._id, name, email);\n        const { data } = response;\n        if (data.success) {\n            user = { ...user, name, email }\n            localStorage.setItem(\"admin\", JSON.stringify(user));\n            props.history.push(\"/admin/user-profile\");\n        }\n    }\n\n    return (\n        <>\n            <EditHeader />\n            {/* Page content */}\n            <Container className=\"mt--7\" fluid>\n                <Row>\n                    <div className=\"col\">\n                        <Card className=\"bg-secondary shadow\">\n                            <CardHeader className=\"bg-white border-0\">\n                                <Row className=\"align-items-center\">\n                                    <Col xs=\"8\">\n                                        <h3 className=\"mb-0\">My account</h3>\n                                        {isTestUser ? <h5>You are not allowed to edit the test user. Create another user to test this functionality</h5> : null}\n                                    </Col>\n                                    <Col className=\"text-right\" xs=\"4\">\n                                        <Button\n                                            color=\"primary\"\n                                            href=\"#pablo\"\n                                            onClick={editUser}\n                                            size=\"sm\"\n                                            disabled={isTestUser}\n                                        >\n                                            Save\n                                        </Button>\n                                    </Col>\n                                </Row>\n                            </CardHeader>\n                            <CardBody>\n                                <Form>\n                                    <h6 className=\"heading-small text-muted mb-4\">\n                                        User information\n                                    </h6>\n                                    <div className=\"pl-lg-4\">\n                                        <Row>\n                                            <Col lg=\"6\">\n                                                <FormGroup>\n                                                    <label\n                                                        className=\"form-control-label\"\n                                                        htmlFor=\"input-username\"\n                                                    >\n                                                        Username\n                                                    </label>\n                                                    <Input\n                                                        className=\"form-control-alternative\"\n                                                        value={name}\n                                                        id=\"input-username\"\n                                                        placeholder=\"Username\"\n                                                        onChange={e => setName(e.target.value)}\n                                                        type=\"text\"\n                                                    />\n                                                </FormGroup>\n                                            </Col>\n                                            <Col lg=\"6\">\n                                                <FormGroup>\n                                                    <label\n                                                        className=\"form-control-label\"\n                                                        htmlFor=\"input-email\"\n                                                    >\n                                                        Email address\n                                                    </label>\n                                                    <Input\n                                                        className=\"form-control-alternative\"\n                                                        id=\"input-email\"\n                                                        value={email}\n                                                        onChange={e => setEmail(e.target.value)}\n                                                        type=\"email\"\n                                                    />\n                                                </FormGroup>\n                                            </Col>\n                                        </Row>\n                                    </div>\n                                </Form>\n                            </CardBody>\n                        </Card>\n                    </div>\n                </Row>\n            </Container>\n        </>\n    );\n}\n\nexport default EditProfile;\n","import React, { useEffect, useState } from 'react';\nimport Header from \"../../components/Headers/Header\";\nimport {\n    Badge,\n    Card,\n    CardHeader,\n    CardFooter,\n    DropdownMenu,\n    DropdownItem,\n    UncontrolledDropdown,\n    DropdownToggle,\n    Media,\n    Pagination,\n    PaginationItem,\n    PaginationLink,\n    Progress,\n    Table,\n    Container,\n    Row,\n    UncontrolledTooltip\n} from \"reactstrap\";\nimport { getAllUsers } from \"../../network/ApiAxios\";\n\nconst UsersTable = (props) => {\n\n    const [users, setUsers] = useState([]);\n    const [currentPage, setCurrentPage] = useState(1);\n    const [usersPerPage, setUsersPerPage] = useState(25);\n\n    useEffect(() => {\n        const runAsync = async () => {\n            const response = await getAllUsers();\n            const { users } = response.data;\n            console.log(users);\n            if (response.data.success) {\n                setUsers(users);\n            }\n        }\n        runAsync();\n    }, []);\n\n    const Pending = () => {\n        return (\n            <>\n                <i className=\"bg-danger\" />\n                Pending\n            </>\n        )\n    }\n    const Approved = () => {\n        return (\n            <>\n                <i className=\"bg-green\" />\n                Approved\n            </>\n        )\n    }\n\n\n\n    const UserList = ({ users }) => {\n        console.log(users);\n        return (\n            users.map((user) => {\n                return (\n                    <tr style={{ cursor: 'pointer' }} key={user._id} onClick={() => {\n                        props.history.push({\n                            pathname: \"/admin/user-profile/\",\n                            state: user._id\n                        })\n                    }}>\n                        <th scope=\"row\">\n                            <Media className=\"align-items-center\">\n                                <a\n                                    className=\"avatar rounded-circle mr-3\"\n                                    href=\"#pablo\"\n                                    onClick={e => e.preventDefault()}\n                                >\n                                    <img\n                                        alt=\"...\"\n                                        src={'http://172.105.61.90:5100' + user.photo}\n                                    />\n                                </a>\n                                <Media>\n                                    <span className=\"mb-0 text-sm\">\n                                        {user.email}\n                                    </span>\n                                </Media>\n                            </Media>\n                        </th>\n                        <td>{user.fname + ' ' + user.lname}</td>\n                        <td>\n                            <Badge color=\"\" className=\"badge-dot mr-4\">\n                                {\n\n                                    user.accountConfirmation ? <Approved /> : <Pending />\n                                }\n                            </Badge>\n                        </td>\n                    </tr>\n                )\n            })\n\n        )\n    }\n\n\n\n\n    const PaginationComponent = ({ totalUsers, usersPerPage, paginate, currentPage }) => {\n\n        const PageNumber = [];\n        for (let i = 1; i <= Math.ceil(totalUsers / usersPerPage); i++) {\n            PageNumber.push(i);\n        }\n\n        return (\n            <CardFooter className=\"py-4\">\n                <nav aria-label=\"...\">\n                    <Pagination\n                        className=\"pagination justify-content-end mb-0\"\n                        listClassName=\"justify-content-end mb-0\"\n                    >\n\n                        {\n                            PageNumber.map((number) => {\n                                return (\n                                    <PaginationItem key={number} className={currentPage === number ? \"active\" : \"\"}>\n                                        <PaginationLink onClick={() => paginate(number)} >\n                                            {number}\n                                        </PaginationLink>\n                                    </PaginationItem>\n                                )\n                            })\n                        }\n                    </Pagination>\n                </nav>\n            </CardFooter>\n\n        )\n\n    }\n    const paginate = pageNumber => setCurrentPage(pageNumber)\n\n\n    const indexOfLastUser = currentPage * usersPerPage;\n    const indexOfFirstUser = indexOfLastUser - usersPerPage;\n    const currentUsers = users.slice(indexOfFirstUser, indexOfLastUser)\n\n\n    return (\n        <>\n            <Header />\n            <Container>\n                <Row>\n                    <div className=\"col\">\n                        <Card className=\"shadow\">\n                            <CardHeader className=\"border-0\">\n                                <h3 className=\"mb-0\">Users Table</h3>\n                            </CardHeader>\n                            <Table className=\"align-items-center table-flush\" responsive>\n                                <thead className=\"thead-light\">\n                                    <tr>\n                                        <th scope=\"col\">Email</th>\n                                        <th scope=\"col\">Name</th>\n                                        <th scope=\"col\">Status</th>\n                                        <th />\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    <UserList users={currentUsers} />\n                                </tbody>\n                            </Table>\n                            <PaginationComponent totalUsers={users.length} currentPage={currentPage} usersPerPage={usersPerPage} paginate={paginate} />\n                        </Card>\n                    </div>\n                </Row>\n            </Container>\n        </>\n    );\n}\n\nexport default UsersTable;\n","/*!\n\n=========================================================\n* Argon Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React, {useState} from \"react\";\n\n// reactstrap components\nimport {\n    Button,\n    Card,\n    CardHeader,\n    CardBody,\n    FormGroup,\n    Form,\n    Input,\n    InputGroupAddon,\n    InputGroupText,\n    InputGroup,\n    Row,\n    Col\n} from \"reactstrap\";\nimport {forgotPassword, login} from \"../../network/ApiAxios\";\nimport Toast from \"react-bootstrap/Toast\";\nimport config from \"../../config\";\n\nconst ResetPassword = props => {\n\n    const [email, setEmail] = useState(\"\");\n    const [error, setError] = useState(\"\");\n    const [showToast, setShowToast] = useState(false);\n    const [toastMessage, setToastMessage] = useState(\"Email sent! Check it to reset your password.\");\n    const [userID, setUserID] = useState(null);\n\n    const sendEmail = async () => {\n        const response = await forgotPassword(email);\n        const {data} = response;\n        if (data.success) {\n            console.log(data);\n            if (config.DEMO) {\n                setToastMessage(\"This is a demo, so we will not send you an email. Instead, click on this link to reset your password:\")\n                setUserID(data.userID);\n            }\n            setShowToast(true);\n        } else {\n            setError(data.errors[0].msg);\n        }\n    }\n\n    return (\n        <>\n            <div\n                aria-live=\"polite\"\n                aria-atomic=\"true\"\n                style={{\n                    position: 'fixed',\n                    minHeight: '100px',\n                    width: \"35%\",\n                    right: 10,\n                    bottom: 100,\n                    zIndex: 50\n                }}\n            >\n                <Toast style={{\n                    position: 'absolute',\n                    top: 0,\n                    right: 0,\n                    backgroundColor: \"white\",\n                    padding: 10,\n                    borderRadius: 10\n                }} onClose={() => setShowToast(false)} show={showToast} delay={5000} autohide={!config.DEMO}>\n                    <Toast.Header>\n                        <img style={{height: \"30px\", width: \"100px\"}} src={require(\"assets/img/brand/argon-react.png\").default}  alt=\"...\"/>\n                    </Toast.Header>\n                    <Toast.Body>\n                        {toastMessage}\n                        {config.DEMO ?\n                            <a href={config.DOMAIN_NAME + '/auth/confirm-password/' + userID}>\n                                {config.DOMAIN_NAME + '/auth/confirm-password/' + userID}\n                            </a> : null}\n                    </Toast.Body>\n                </Toast>\n            </div>\n            <Col lg=\"5\" md=\"7\">\n                <Card className=\"bg-secondary shadow border-0\">\n                    <CardBody className=\"px-lg-5 py-lg-5\">\n                        <Form role=\"form\">\n                            <FormGroup className=\"mb-3\">\n                                <InputGroup className=\"input-group-alternative\">\n                                    <InputGroupAddon addonType=\"prepend\">\n                                        <InputGroupText>\n                                            <i className=\"ni ni-email-83\"/>\n                                        </InputGroupText>\n                                    </InputGroupAddon>\n                                    <Input placeholder=\"Email\" type=\"email\" autoComplete=\"email\" value={email}\n                                           onChange={e => setEmail(e.target.value)}/>\n                                </InputGroup>\n                            </FormGroup>\n                            {error ?\n                                <div className=\"text-muted font-italic\">\n                                    <small>\n                                        error:{\" \"}\n                                        <span className=\"text-red font-weight-700\">{error}</span>\n                                    </small>\n                                </div> : null }\n                            <div className=\"text-center\">\n                                <Button className=\"my-4\" color=\"primary\" type=\"button\" onClick={sendEmail}>\n                                    Reset Password\n                                </Button>\n                            </div>\n                        </Form>\n                    </CardBody>\n                </Card>\n            </Col>\n        </>\n    );\n}\n\nexport default ResetPassword;\n","/*!\n\n=========================================================\n* Argon Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React, {useState} from \"react\";\n\n// reactstrap components\nimport {\n    Button,\n    Card,\n    CardHeader,\n    CardBody,\n    FormGroup,\n    Form,\n    Input,\n    InputGroupAddon,\n    InputGroupText,\n    InputGroup,\n    Row,\n    Col\n} from \"reactstrap\";\nimport {confirmReset, forgotPassword, login} from \"../../network/ApiAxios\";\nimport Toast from \"react-bootstrap/Toast\";\nimport {useParams} from \"react-router-dom\";\n\nconst ConfirmPassword = props => {\n\n    const {id} = useParams();\n\n    const [password, setPassword] = useState(\"\");\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\n    const [error, setError] = useState(\"\");\n\n    const confirm = async () => {\n        if (password !== confirmPassword) {\n            setError(\"Passwords have to match\");\n            return;\n        }\n        const response = await confirmReset(id, password);\n        const {data} = response;\n        if (data.success) {\n            props.history.push(\"/auth/reset-success\");\n        } else {\n            setError(data.msg);\n        }\n    }\n\n    return (\n        <>\n            <Col lg=\"5\" md=\"7\">\n                <Card className=\"bg-secondary shadow border-0\">\n                    <CardBody className=\"px-lg-5 py-lg-5\">\n                        <Form role=\"form\">\n                            <FormGroup>\n                                <InputGroup className=\"input-group-alternative\">\n                                    <InputGroupAddon addonType=\"prepend\">\n                                        <InputGroupText>\n                                            <i className=\"ni ni-lock-circle-open\"/>\n                                        </InputGroupText>\n                                    </InputGroupAddon>\n                                    <Input placeholder=\"Password\" type=\"password\" autoComplete=\"new-password\" value={password}\n                                           onChange={e => setPassword(e.target.value)}\n                                    />\n                                </InputGroup>\n                            </FormGroup>\n                            <FormGroup>\n                                <InputGroup className=\"input-group-alternative\">\n                                    <InputGroupAddon addonType=\"prepend\">\n                                        <InputGroupText>\n                                            <i className=\"ni ni-lock-circle-open\"/>\n                                        </InputGroupText>\n                                    </InputGroupAddon>\n                                    <Input placeholder=\"Confirm Password\" type=\"password\" autoComplete=\"new-password\" value={confirmPassword}\n                                           onChange={e => setConfirmPassword(e.target.value)}\n                                    />\n                                </InputGroup>\n                            </FormGroup>\n                            {error ?\n                                <div className=\"text-muted font-italic\">\n                                    <small>\n                                        error:{\" \"}\n                                        <span className=\"text-red font-weight-700\">{error}</span>\n                                    </small>\n                                </div> : null }\n                            <div className=\"text-center\">\n                                <Button className=\"my-4\" color=\"primary\" type=\"button\" onClick={confirm}>\n                                    Reset Password\n                                </Button>\n                            </div>\n                        </Form>\n                    </CardBody>\n                </Card>\n            </Col>\n        </>\n    );\n}\n\nexport default ConfirmPassword;\n","import React, {useEffect, useState} from 'react';\nimport { useParams } from 'react-router-dom';\nimport {confirmRegister} from \"../../network/ApiAxios\";\nimport {Card, CardBody, Col} from \"reactstrap\";\n\nconst ResetPasswordSuccess = props => {\n\n    useEffect(() => {\n        setTimeout(() => {\n            props.history.push(\"/auth/login\");\n        }, 5000);\n    }, [])\n\n    return (\n        <>\n            <Col lg=\"6\" md=\"8\">\n                <Card className=\"bg-secondary shadow border-0\">\n                    <CardBody className=\"px-lg-5 py-lg-5\">\n                        <div className=\"text-center mb-4\">\n                            <h1>Password reset confirmed! You will be redirected to login...</h1>\n                        </div>\n                    </CardBody>\n                </Card>\n            </Col>\n        </>\n    )\n};\n\nexport default ResetPasswordSuccess;\n","/*!\n\n=========================================================\n* Argon Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\n// reactstrap components\nimport { Container } from \"reactstrap\";\n// core components\nimport AdminNavbar from \"components/Navbars/AdminNavbar.js\";\nimport AdminFooter from \"components/Footers/AdminFooter.js\";\nimport Sidebar from \"components/Sidebar/Sidebar.js\";\n\nimport routes from \"routes.js\";\n\nclass Admin extends React.Component {\n  componentDidUpdate(e) {\n    document.documentElement.scrollTop = 0;\n    document.scrollingElement.scrollTop = 0;\n    this.refs.mainContent.scrollTop = 0;\n  }\n  getRoutes = routes => {\n    return routes.map((prop, key) => {\n      if (prop.layout === \"/admin\") {\n        return (\n          <Route\n            path={prop.layout + prop.path}\n            component={prop.component}\n            key={key}\n          />\n        );\n      } else {\n        return null;\n      }\n    });\n  };\n  getBrandText = path => {\n    for (let i = 0; i < routes.length; i++) {\n      if (\n        this.props.location.pathname.indexOf(\n          routes[i].layout + routes[i].path\n        ) !== -1\n      ) {\n        return routes[i].name;\n      }\n    }\n    return \"Brand\";\n  };\n  render() {\n    return (\n      <>\n        <Sidebar\n          {...this.props}\n          routes={routes}\n          logo={{\n            innerLink: \"/admin/index\",\n            imgSrc: require(\"assets/img/brand/RECT_HOR.png\").default,\n            imgAlt: \"...\"\n          }}\n        />\n        <div className=\"main-content\" ref=\"mainContent\">\n          <AdminNavbar\n            {...this.props}\n            brandText={this.getBrandText(this.props.location.pathname)}\n          />\n          <Switch>\n            {this.getRoutes(routes)}\n            <Redirect from=\"*\" to=\"/admin/index\" />\n          </Switch>\n          <Container fluid>\n            <AdminFooter />\n          </Container>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Admin;\n","/*!\n\n=========================================================\n* Argon Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\n// reactstrap components\nimport {\n  UncontrolledCollapse,\n  NavbarBrand,\n  Navbar,\n  NavItem,\n  NavLink,\n  Nav,\n  Container,\n  Row,\n  Col\n} from \"reactstrap\";\n\nclass AdminNavbar extends React.Component {\n  render() {\n    return (\n      <>\n        <Navbar\n          className=\"navbar-top navbar-horizontal navbar-dark\"\n          expand=\"md\"\n        >\n          <Container className=\"px-4\">\n            <NavbarBrand to=\"/\" tag={Link}>\n              <img alt=\"...\" src={require(\"assets/img/brand/logo.png\").default} />\n            </NavbarBrand>\n            <button className=\"navbar-toggler\" id=\"navbar-collapse-main\">\n              <span className=\"navbar-toggler-icon\" />\n            </button>\n            <UncontrolledCollapse navbar toggler=\"#navbar-collapse-main\">\n              <div className=\"navbar-collapse-header d-md-none\">\n                <Row>\n                  <Col className=\"collapse-brand\" xs=\"6\">\n                    <Link to=\"/\">\n                      <img\n                        alt=\"...\"\n                        src={require(\"assets/img/brand/logo.png\").default}\n                      />\n                    </Link>\n                  </Col>\n                  <Col className=\"collapse-close\" xs=\"6\">\n                    <button\n                      className=\"navbar-toggler\"\n                      id=\"navbar-collapse-main\"\n                    >\n                      <span />\n                      <span />\n                    </button>\n                  </Col>\n                </Row>\n              </div>\n              <Nav className=\"ml-auto\" navbar>\n                <NavItem>\n                  <NavLink className=\"nav-link-icon\" to=\"/\" tag={Link}>\n                    <i className=\"ni ni-planet\" />\n                    <span className=\"nav-link-inner--text\">Dashboard</span>\n                  </NavLink>\n                </NavItem>\n\n                <NavItem>\n                  <NavLink\n                    className=\"nav-link-icon\"\n                    to=\"/auth/login\"\n                    tag={Link}\n                  >\n                    <i className=\"ni ni-key-25\" />\n                    <span className=\"nav-link-inner--text\">Login</span>\n                  </NavLink>\n                </NavItem>\n\n              </Nav>\n            </UncontrolledCollapse>\n          </Container>\n        </Navbar>\n      </>\n    );\n  }\n}\n\nexport default AdminNavbar;\n","/*!\n\n=========================================================\n* Argon Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\n/*eslint-disable*/\nimport React from \"react\";\n\n// reactstrap components\nimport { NavItem, NavLink, Nav, Container, Row, Col } from \"reactstrap\";\n\nclass Login extends React.Component {\n  render() {\n    return (\n      <>\n        <footer className=\"py-5\">\n          <Container>\n            <Row className=\"align-items-center justify-content-xl-between\">\n              <Col xl=\"12\">\n                {/* <div className=\"copyright text-center text-xl-left text-muted\"> \"\"\"\"\"\"for leftside area\"\"\"\"\"\"\"*/}\n                <div className=\"copyright text-center text-muted\">\n                  © 2021{\" \"}\n                  <a\n                    className=\"font-weight-bold ml-1\"\n                    href=\"https://rectgujarat.org\"\n                    target=\"_blank\"\n                  >\n                    RECT\n                  </a>\n                </div>\n              </Col>\n\n              {/* for footer links */}\n              {/* <Col xl=\"6\">\n                <Nav className=\"nav-footer justify-content-center justify-content-xl-end\">\n                  <NavItem>\n                    <NavLink\n                      href=\"https://www.creative-tim.com?ref=adr-auth-footer\"\n                      target=\"_blank\"\n                    >\n                      Creative Tim\n                    </NavLink>\n                  </NavItem>\n                  <NavItem>\n                    <NavLink\n                      href=\"https://www.creative-tim.com/presentation?ref=adr-auth-footer\"\n                      target=\"_blank\"\n                    >\n                      About Us\n                    </NavLink>\n                  </NavItem>\n                  <NavItem>\n                    <NavLink\n                      href=\"http://blog.creative-tim.com?ref=adr-auth-footer\"\n                      target=\"_blank\"\n                    >\n                      Blog\n                    </NavLink>\n                  </NavItem>\n                  <NavItem>\n                    <NavLink\n                      href=\"https://github.com/creativetimofficial/argon-dashboard/blob/master/LICENSE.md?ref=adr-auth-footer\"\n                      target=\"_blank\"\n                    >\n                      MIT License\n                    </NavLink>\n                  </NavItem>\n                </Nav>\n              </Col> */}\n            </Row>\n          </Container>\n        </footer>\n      </>\n    );\n  }\n}\n\nexport default Login;\n","/*!\n\n=========================================================\n* Argon Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\n// reactstrap components\nimport { Container, Row, Col } from \"reactstrap\";\n\n// core components\nimport AuthNavbar from \"components/Navbars/AuthNavbar.js\";\nimport AuthFooter from \"components/Footers/AuthFooter.js\";\n\nimport routes from \"routes.js\";\n\nclass Auth extends React.Component {\n  componentDidMount() {\n    document.body.classList.add(\"bg-default\");\n  }\n  componentWillUnmount() {\n    document.body.classList.remove(\"bg-default\");\n  }\n  getRoutes = routes => {\n    return routes.map((prop, key) => {\n      if (prop.layout === \"/auth\") {\n        return (\n          <Route\n            path={prop.layout + prop.path}\n            component={prop.component}\n            key={key}\n          />\n        );\n      } else {\n        return null;\n      }\n    });\n  };\n  render() {\n    return (\n      <>\n        <div className=\"main-content\">\n          <AuthNavbar />\n          <div className=\"header bg-gradient-info py-7 py-lg-8\">\n            <Container>\n              <div className=\"header-body text-center mb-7\">\n                <Row className=\"justify-content-center\">\n                  <Col lg=\"5\" md=\"6\">\n                    <h1 className=\"text-white\">Welcome!</h1>\n                    <p className=\"text-lead text-light\">\n                      back admin please login to access to Dashboard.\n                    </p>\n                  </Col>\n                </Row>\n              </div>\n            </Container>\n            <div className=\"separator separator-bottom separator-skew zindex-100\">\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                preserveAspectRatio=\"none\"\n                version=\"1.1\"\n                viewBox=\"0 0 2560 100\"\n                x=\"0\"\n                y=\"0\"\n              >\n                <polygon\n                  className=\"fill-default\"\n                  points=\"2560 0 2560 100 0 100\"\n                />\n              </svg>\n            </div>\n          </div>\n          {/* Page content */}\n          <Container className=\"mt--8 pb-5\">\n            <Row className=\"justify-content-center\">\n              <Switch>\n                {this.getRoutes(routes)}\n                <Redirect from=\"*\" to=\"/auth/login\" />\n              </Switch>\n            </Row>\n          </Container>\n        </div>\n        <AuthFooter />\n      </>\n    );\n  }\n}\n\nexport default Auth;\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nconst PrivateRoute = ({ component: Component, ...rest }) => (\n    <Route {...rest} render={(props) => (\n        localStorage.getItem(\"token\") && localStorage.getItem(\"admin\")\n            ? <Component {...props} />\n            : <Redirect to='/auth/login' />\n    )} />\n);\n\nexport default PrivateRoute;\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nconst AuthRoutes = ({ component: Component, ...rest }) => (\n    <Route {...rest} render={(props) => (\n        !(localStorage.getItem(\"token\") && localStorage.getItem(\"admin\"))\n            ? <Component {...props} />\n            : <Redirect to='/admin/index' />\n    )} />\n);\n\nexport default AuthRoutes;\n","\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter, Switch, Redirect } from \"react-router-dom\";\n\nimport \"assets/plugins/nucleo/css/nucleo.css\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"assets/scss/argon-dashboard-react.scss\";\n\nimport AdminLayout from \"layouts/Admin.js\";\nimport AuthLayout from \"layouts/Auth.js\";\nimport PrivateRoute from \"./components/PrivateRoute/PrivateRoute\";\nimport AuthRoutes from \"./components/PrivateRoute/AuthRoutes\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <Switch>\n      <PrivateRoute path=\"/admin\" component={AdminLayout} />\n      <AuthRoutes path=\"/auth\" component={AuthLayout} />\n      <Redirect from=\"/\" to=\"/admin/index\" />\n    </Switch>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n","/*!\n\n=========================================================\n* Argon Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nconst Chart = require(\"chart.js\");\n//\n// Chart extension for making the bars rounded\n// Code from: https://codepen.io/jedtrow/full/ygRYgo\n//\n\nChart.elements.Rectangle.prototype.draw = function () {\n  var ctx = this._chart.ctx;\n  var vm = this._view;\n  var left, right, top, bottom, signX, signY, borderSkipped, radius;\n  var borderWidth = vm.borderWidth;\n  // Set Radius Here\n  // If radius is large enough to cause drawing errors a max radius is imposed\n  var cornerRadius = 6;\n\n  if (!vm.horizontal) {\n    // bar\n    left = vm.x - vm.width / 2;\n    right = vm.x + vm.width / 2;\n    top = vm.y;\n    bottom = vm.base;\n    signX = 1;\n    signY = bottom > top ? 1 : -1;\n    borderSkipped = vm.borderSkipped || \"bottom\";\n  } else {\n    // horizontal bar\n    left = vm.base;\n    right = vm.x;\n    top = vm.y - vm.height / 2;\n    bottom = vm.y + vm.height / 2;\n    signX = right > left ? 1 : -1;\n    signY = 1;\n    borderSkipped = vm.borderSkipped || \"left\";\n  }\n\n  // Canvas doesn't allow us to stroke inside the width so we can\n  // adjust the sizes to fit if we're setting a stroke on the line\n  if (borderWidth) {\n    // borderWidth shold be less than bar width and bar height.\n    var barSize = Math.min(Math.abs(left - right), Math.abs(top - bottom));\n    borderWidth = borderWidth > barSize ? barSize : borderWidth;\n    var halfStroke = borderWidth / 2;\n    // Adjust borderWidth when bar top position is near vm.base(zero).\n    var borderLeft = left + (borderSkipped !== \"left\" ? halfStroke * signX : 0);\n    var borderRight =\n      right + (borderSkipped !== \"right\" ? -halfStroke * signX : 0);\n    var borderTop = top + (borderSkipped !== \"top\" ? halfStroke * signY : 0);\n    var borderBottom =\n      bottom + (borderSkipped !== \"bottom\" ? -halfStroke * signY : 0);\n    // not become a vertical line?\n    if (borderLeft !== borderRight) {\n      top = borderTop;\n      bottom = borderBottom;\n    }\n    // not become a horizontal line?\n    if (borderTop !== borderBottom) {\n      left = borderLeft;\n      right = borderRight;\n    }\n  }\n\n  ctx.beginPath();\n  ctx.fillStyle = vm.backgroundColor;\n  ctx.strokeStyle = vm.borderColor;\n  ctx.lineWidth = borderWidth;\n\n  // Corner points, from bottom-left to bottom-right clockwise\n  // | 1 2 |\n  // | 0 3 |\n  var corners = [[left, bottom], [left, top], [right, top], [right, bottom]];\n\n  // Find first (starting) corner with fallback to 'bottom'\n  var borders = [\"bottom\", \"left\", \"top\", \"right\"];\n  var startCorner = borders.indexOf(borderSkipped, 0);\n  if (startCorner === -1) {\n    startCorner = 0;\n  }\n\n  function cornerAt(index) {\n    return corners[(startCorner + index) % 4];\n  }\n\n  // Draw rectangle from 'startCorner'\n  var corner = cornerAt(0);\n  ctx.moveTo(corner[0], corner[1]);\n\n  for (var i = 1; i < 4; i++) {\n    corner = cornerAt(i);\n    let nextCornerId = i + 1;\n    if (nextCornerId === 4) {\n      nextCornerId = 0;\n    }\n\n    // let nextCorner = cornerAt(nextCornerId);\n\n    let width = corners[2][0] - corners[1][0];\n    let height = corners[0][1] - corners[1][1];\n    let x = corners[1][0];\n    let y = corners[1][1];\n    // eslint-disable-next-line\n    var radius: any = cornerRadius;\n\n    // Fix radius being too large\n    if (radius > height / 2) {\n      radius = height / 2;\n    }\n    if (radius > width / 2) {\n      radius = width / 2;\n    }\n\n    ctx.moveTo(x + radius, y);\n    ctx.lineTo(x + width - radius, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n    ctx.lineTo(x + width, y + height - radius);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n    ctx.lineTo(x + radius, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n    ctx.lineTo(x, y + radius);\n    ctx.quadraticCurveTo(x, y, x + radius, y);\n  }\n\n  ctx.fill();\n  if (borderWidth) {\n    ctx.stroke();\n  }\n};\n\nvar mode = \"light\"; //(themeMode) ? themeMode : 'light';\nvar fonts = {\n  base: \"Open Sans\"\n};\n\n// Colors\nvar colors = {\n  gray: {\n    100: \"#f6f9fc\",\n    200: \"#e9ecef\",\n    300: \"#dee2e6\",\n    400: \"#ced4da\",\n    500: \"#adb5bd\",\n    600: \"#8898aa\",\n    700: \"#525f7f\",\n    800: \"#32325d\",\n    900: \"#212529\"\n  },\n  theme: {\n    default: \"#172b4d\",\n    primary: \"#5e72e4\",\n    secondary: \"#f4f5f7\",\n    info: \"#11cdef\",\n    success: \"#2dce89\",\n    danger: \"#f5365c\",\n    warning: \"#fb6340\"\n  },\n  black: \"#12263F\",\n  white: \"#FFFFFF\",\n  transparent: \"transparent\"\n};\n\n// Methods\n\n// Chart.js global options\nfunction chartOptions() {\n  // Options\n  var options = {\n    defaults: {\n      global: {\n        responsive: true,\n        maintainAspectRatio: false,\n        defaultColor: mode === \"dark\" ? colors.gray[700] : colors.gray[600],\n        defaultFontColor: mode === \"dark\" ? colors.gray[700] : colors.gray[600],\n        defaultFontFamily: fonts.base,\n        defaultFontSize: 13,\n        layout: {\n          padding: 0\n        },\n        legend: {\n          display: false,\n          position: \"bottom\",\n          labels: {\n            usePointStyle: true,\n            padding: 16\n          }\n        },\n        elements: {\n          point: {\n            radius: 0,\n            backgroundColor: colors.theme[\"primary\"]\n          },\n          line: {\n            tension: 0.4,\n            borderWidth: 4,\n            borderColor: colors.theme[\"primary\"],\n            backgroundColor: colors.transparent,\n            borderCapStyle: \"rounded\"\n          },\n          rectangle: {\n            backgroundColor: colors.theme[\"warning\"]\n          },\n          arc: {\n            backgroundColor: colors.theme[\"primary\"],\n            borderColor: mode === \"dark\" ? colors.gray[800] : colors.white,\n            borderWidth: 4\n          }\n        },\n        tooltips: {\n          enabled: true,\n          mode: \"index\",\n          intersect: false\n        }\n      },\n      doughnut: {\n        cutoutPercentage: 83,\n        legendCallback: function (chart) {\n          var data = chart.data;\n          var content = \"\";\n\n          data.labels.forEach(function (label, index) {\n            var bgColor = data.datasets[0].backgroundColor[index];\n\n            content += '<span class=\"chart-legend-item\">';\n            content +=\n              '<i class=\"chart-legend-indicator\" style=\"background-color: ' +\n              bgColor +\n              '\"></i>';\n            content += label;\n            content += \"</span>\";\n          });\n\n          return content;\n        }\n      }\n    }\n  };\n\n  // yAxes\n  Chart.scaleService.updateScaleDefaults(\"linear\", {\n    gridLines: {\n      borderDash: [2],\n      borderDashOffset: [2],\n      color: mode === \"dark\" ? colors.gray[900] : colors.gray[300],\n      drawBorder: false,\n      drawTicks: false,\n      lineWidth: 0,\n      zeroLineWidth: 0,\n      zeroLineColor: mode === \"dark\" ? colors.gray[900] : colors.gray[300],\n      zeroLineBorderDash: [2],\n      zeroLineBorderDashOffset: [2]\n    },\n    ticks: {\n      beginAtZero: true,\n      padding: 10,\n      callback: function (value) {\n        if (!(value % 10)) {\n          return value;\n        }\n      }\n    }\n  });\n\n  // xAxes\n  Chart.scaleService.updateScaleDefaults(\"category\", {\n    gridLines: {\n      drawBorder: false,\n      drawOnChartArea: false,\n      drawTicks: false\n    },\n    ticks: {\n      padding: 20\n    }\n  });\n\n  return options;\n}\n\n// Parse global options\nfunction parseOptions(parent, options) {\n  for (var item in options) {\n    if (typeof options[item] !== \"object\") {\n      parent[item] = options[item];\n    } else {\n      parseOptions(parent[item], options[item]);\n    }\n  }\n}\n\n// Example 1 of Chart inside src/views/Index.js (Sales value - Card)\nlet chartExample1 = {\n  options: {\n    scales: {\n      yAxes: [\n        {\n          gridLines: {\n            color: colors.gray[900],\n            zeroLineColor: colors.gray[900]\n          },\n          ticks: {\n            callback: function (value) {\n              if (!(value % 10)) {\n                return value;\n              }\n            }\n          }\n        }\n      ]\n    },\n    tooltips: {\n      callbacks: {\n        label: function (item, data) {\n          var label = data.datasets[item.datasetIndex].label || \"\";\n          var yLabel = item.yLabel;\n          var content = \"\";\n\n          if (data.datasets.length > 1) {\n            content += label;\n          }\n\n          content += yLabel;\n          return content;\n        }\n      }\n    }\n  },\n  data1: canvas => {\n    return {\n      labels: [\"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\n      datasets: [\n        {\n          label: \"Performance\",\n          data: [0, 20, 10, 30, 15, 40, 20, 60, 60]\n        }\n      ]\n    };\n  },\n  data2: canvas => {\n    return {\n      labels: [\"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\n      datasets: [\n        {\n          label: \"Performance\",\n          data: [0, 20, 5, 25, 10, 30, 15, 40, 40]\n        }\n      ]\n    };\n  }\n};\n\n// Example 2 of Chart inside src/views/Index.js (Total orders - Card)\nlet chartExample2 = {\n  options: {\n    scales: {\n      yAxes: [\n        {\n          ticks: {\n            callback: function (value) {\n              if (!(value % 10)) {\n                //return '$' + value + 'k'\n                return value;\n              }\n            }\n          }\n        }\n      ]\n    },\n    tooltips: {\n      callbacks: {\n        label: function (item, data) {\n          var label = data.datasets[item.datasetIndex].label || \"\";\n          var yLabel = item.yLabel;\n          var content = \"\";\n          if (data.datasets.length > 1) {\n            content += label;\n          }\n          content += yLabel;\n          return content;\n        }\n      }\n    }\n  },\n  data: {\n    labels: [\"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\n    datasets: [\n      {\n        label: \"Sales\",\n        data: [25, 20, 30, 22, 17, 29],\n        maxBarThickness: 10\n      }\n    ]\n  }\n};\n\nmodule.exports = {\n  chartOptions, // used inside src/views/Index.js\n  parseOptions, // used inside src/views/Index.js\n  chartExample1, // used inside src/views/Index.js\n  chartExample2 // used inside src/views/Index.js\n};\n"],"sourceRoot":""}