{"ast":null,"code":"import _slicedToArray from \"/home/yash/RECT/RECT_ADMIN/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/yash/RECT/RECT_ADMIN/front-end/src/views/examples/RegisterUser.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\"; // reactstrap components\n\nimport { Button, Card, CardHeader, CardBody, FormGroup, Form, Input, Container, Row, Col } from \"reactstrap\"; // core components\n\nimport UserHeader from \"components/Headers/UserHeader.js\";\nimport EditHeader from \"../../components/Headers/EditHeader\";\nimport { edit } from \"../../network/ApiAxios\";\n\nvar RegisterUser = function RegisterUser(props) {\n  _s();\n\n  var user = JSON.parse(localStorage.getItem(\"admin\")); // const [isDisabled,setIsDisabled] = useState(false)\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isTempAddIsPerAdd = _useState2[0],\n      setIsTempAddIsPerAdd = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      password = _useState6[0],\n      setPassword = _useState6[1]; //temp Add\n\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      tempAddLine1 = _useState8[0],\n      setTempAddLine1 = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      tempAddLine2 = _useState10[0],\n      setTempAddLine2 = _useState10[1];\n\n  var _useState11 = useState(\"\"),\n      _useState12 = _slicedToArray(_useState11, 2),\n      tempAddArea = _useState12[0],\n      setTempAddArea = _useState12[1];\n\n  var _useState13 = useState(\"\"),\n      _useState14 = _slicedToArray(_useState13, 2),\n      tempAddCity = _useState14[0],\n      setTempAddCity = _useState14[1];\n\n  var _useState15 = useState(\"\"),\n      _useState16 = _slicedToArray(_useState15, 2),\n      tempAddState = _useState16[0],\n      setTempAddState = _useState16[1];\n\n  var _useState17 = useState(\"\"),\n      _useState18 = _slicedToArray(_useState17, 2),\n      tempAddPin = _useState18[0],\n      setTempAddPin = _useState18[1]; ///per Add\n\n\n  var _useState19 = useState(\"\"),\n      _useState20 = _slicedToArray(_useState19, 2),\n      perAddLine1 = _useState20[0],\n      setPerAddLine1 = _useState20[1];\n\n  var _useState21 = useState(\"\"),\n      _useState22 = _slicedToArray(_useState21, 2),\n      perAddLine2 = _useState22[0],\n      setPerAddLine2 = _useState22[1];\n\n  var _useState23 = useState(\"\"),\n      _useState24 = _slicedToArray(_useState23, 2),\n      perAddArea = _useState24[0],\n      setPerAddArea = _useState24[1];\n\n  var _useState25 = useState(\"\"),\n      _useState26 = _slicedToArray(_useState25, 2),\n      perAddCity = _useState26[0],\n      setPerAddCity = _useState26[1];\n\n  var _useState27 = useState(\"\"),\n      _useState28 = _slicedToArray(_useState27, 2),\n      perAddState = _useState28[0],\n      setPerAddState = _useState28[1];\n\n  var _useState29 = useState(\"\"),\n      _useState30 = _slicedToArray(_useState29, 2),\n      perAddPin = _useState30[0],\n      setPerAddPin = _useState30[1];\n\n  var _useState31 = useState(new Date()),\n      _useState32 = _slicedToArray(_useState31, 2),\n      dob = _useState32[0],\n      setDOB = _useState32[1];\n\n  var _useState33 = useState(),\n      _useState34 = _slicedToArray(_useState33, 2),\n      mobile = _useState34[0],\n      setMobile = _useState34[1];\n\n  var _useState35 = useState(\"\"),\n      _useState36 = _slicedToArray(_useState35, 2),\n      fname = _useState36[0],\n      setFName = _useState36[1];\n\n  var _useState37 = useState(\"\"),\n      _useState38 = _slicedToArray(_useState37, 2),\n      lname = _useState38[0],\n      setLName = _useState38[1];\n\n  var SameUser = function SameUser() {};\n\n  var RegUser = function RegUser() {};\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(EditHeader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    className: \"mt--7\",\n    fluid: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"bg-secondary shadow\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    className: \"bg-white border-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    className: \"align-items-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    xs: \"8\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"mb-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 41\n    }\n  }, \"Register New User.\")), /*#__PURE__*/React.createElement(Col, {\n    className: \"text-right\",\n    xs: \"4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    href: \"#pablo\",\n    onClick: RegUser,\n    size: \"sm\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 41\n    }\n  }, \"Save\")))), /*#__PURE__*/React.createElement(CardBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"heading-small text-muted mb-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 37\n    }\n  }, \"User information\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pl-lg-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: \"6\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"form-control-label\",\n    htmlFor: \"input-username\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 53\n    }\n  }, \"First Name\"), /*#__PURE__*/React.createElement(Input, {\n    className: \"form-control-alternative\",\n    value: fname,\n    id: \"input-fname\",\n    placeholder: \"First Name\",\n    onChange: function onChange(e) {\n      return setFName(e.target.value);\n    },\n    type: \"text\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 53\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    lg: \"6\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 51\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"form-control-label\",\n    htmlFor: \"input-username\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 53\n    }\n  }, \"Last Name\"), /*#__PURE__*/React.createElement(Input, {\n    className: \"form-control-alternative\",\n    value: lname,\n    id: \"input-lname\",\n    placeholder: \"Last Name\",\n    onChange: function onChange(e) {\n      return setLName(e.target.value);\n    },\n    type: \"text\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 53\n    }\n  })))), /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: \"6\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"form-control-label\",\n    htmlFor: \"input-email\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 53\n    }\n  }, \"Email address\"), /*#__PURE__*/React.createElement(Input, {\n    className: \"form-control-alternative\",\n    id: \"input-email\",\n    value: email,\n    placeholder: \"Email Address\",\n    onChange: function onChange(e) {\n      return setEmail(e.target.value);\n    },\n    type: \"email\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 53\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    lg: \"6\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"form-control-label\",\n    htmlFor: \"input-email\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 53\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(Input, {\n    className: \"form-control-alternative\",\n    id: \"input-password\",\n    placeholder: \"Password\",\n    value: password,\n    onChange: function onChange(e) {\n      return setPassword(e.target.value);\n    },\n    type: \"Text\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 53\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"heading-small text-muted mb-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 49\n    }\n  }, \"Temporary Address\"), /*#__PURE__*/React.createElement(Col, {\n    lg: \"12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"form-control-label\",\n    htmlFor: \"input-email\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 57\n    }\n  }, \"Temporary Address Line 1\"), /*#__PURE__*/React.createElement(Input, {\n    className: \"form-control-alternative\",\n    id: \"input-email\",\n    placeholder: \"Temporary Address\",\n    value: tempAddLine1,\n    onChange: function onChange(e) {\n      return setTempAddLine1(e.target.value);\n    },\n    type: \"Text\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 57\n    }\n  })))), /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: \"12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"form-control-label\",\n    htmlFor: \"input-email\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 57\n    }\n  }, \"Temporary Address Line 2\"), /*#__PURE__*/React.createElement(Input, {\n    className: \"form-control-alternative\",\n    id: \"input-email\",\n    placeholder: \"Temporary Address Line 2\",\n    value: tempAddLine2,\n    onChange: function onChange(e) {\n      return setTempAddLine2(e.target.value);\n    },\n    type: \"Text\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 57\n    }\n  })))), /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: \"6\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"form-control-label\",\n    htmlFor: \"input-email\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 57\n    }\n  }, \"Area\"), /*#__PURE__*/React.createElement(Input, {\n    className: \"form-control-alternative\",\n    id: \"input-email\",\n    placeholder: \"Area\",\n    value: tempAddArea,\n    onChange: function onChange(e) {\n      return setTempAddArea(e.target.value);\n    },\n    type: \"Text\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 57\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    lg: \"6\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"form-control-label\",\n    htmlFor: \"input-email\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 57\n    }\n  }, \"City\"), /*#__PURE__*/React.createElement(Input, {\n    className: \"form-control-alternative\",\n    id: \"input-email\",\n    placeholder: \"City\",\n    value: tempAddCity,\n    onChange: function onChange(e) {\n      return setTempAddCity(e.target.value);\n    },\n    type: \"Text\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 57\n    }\n  })))), /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: \"6\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"form-control-label\",\n    htmlFor: \"input-email\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 57\n    }\n  }, \"State\"), /*#__PURE__*/React.createElement(Input, {\n    className: \"form-control-alternative\",\n    id: \"input-email\",\n    placeholder: \"State\",\n    value: tempAddState,\n    onChange: function onChange(e) {\n      return setTempAddState(e.target.value);\n    },\n    type: \"Text\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 57\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    lg: \"6\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"form-control-label\",\n    htmlFor: \"input-email\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 57\n    }\n  }, \"Pin\"), /*#__PURE__*/React.createElement(Input, {\n    className: \"form-control-alternative\",\n    id: \"input-email\",\n    placeholder: \"Pin Code\",\n    value: tempAddPin,\n    onChange: function onChange(e) {\n      return setTempAddPin(e.target.value);\n    },\n    type: \"Text\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 57\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"heading-small text-muted mb-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 49\n    }\n  }, \"Same As Temporary Address ?\"), /*#__PURE__*/React.createElement(Col, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"checkBox\",\n    disabled: isTempAddIsPerAdd,\n    onChange: function onChange(e) {\n      return console.log(e.target.checked);\n    },\n    type: \"CheckBox\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 57\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"heading-small text-muted mb-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 49\n    }\n  }, \"Permanent Address\"), /*#__PURE__*/React.createElement(Col, {\n    lg: \"12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"form-control-label\",\n    htmlFor: \"input-pal1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 57\n    }\n  }, \"Permanent Address Line 1\"), /*#__PURE__*/React.createElement(Input, {\n    className: \"form-control-alternative\",\n    disabled: isTempAddIsPerAdd,\n    id: \"input-pal1\",\n    placeholder: \"Permanent Address\",\n    value: perAddLine1,\n    onChange: function onChange(e) {\n      return setPerAddLine1(e.target.value);\n    },\n    type: \"Text\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 57\n    }\n  })))), /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: \"12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"form-control-label\",\n    htmlFor: \"input-pal2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 57\n    }\n  }, \"Permanent Address Line 2\"), /*#__PURE__*/React.createElement(Input, {\n    className: \"form-control-alternative\",\n    id: \"input-pal2\",\n    disabled: isTempAddIsPerAdd,\n    placeholder: \"Permanent Address Line 2\",\n    value: perAddLine2,\n    onChange: function onChange(e) {\n      return setPerAddLine2(e.target.value);\n    },\n    type: \"Text\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 57\n    }\n  })))), /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: \"6\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"form-control-label\",\n    htmlFor: \"input-pArea\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 57\n    }\n  }, \"Area\"), /*#__PURE__*/React.createElement(Input, {\n    className: \"form-control-alternative\",\n    id: \"input-pArea\",\n    placeholder: \"Area\",\n    value: perAddArea,\n    onChange: function onChange(e) {\n      return setPerAddArea(e.target.value);\n    },\n    disabled: isTempAddIsPerAdd,\n    type: \"Text\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 57\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    lg: \"6\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"form-control-label\",\n    htmlFor: \"input-pCity\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 57\n    }\n  }, \"City\"), /*#__PURE__*/React.createElement(Input, {\n    className: \"form-control-alternative\",\n    id: \"input-pCity\",\n    disabled: isTempAddIsPerAdd,\n    placeholder: \"City\",\n    value: perAddCity,\n    onChange: function onChange(e) {\n      return setPerAddCity(e.target.value);\n    },\n    type: \"Text\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 57\n    }\n  })))), /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 410,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: \"6\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"form-control-label\",\n    htmlFor: \"input-pState\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 57\n    }\n  }, \"State\"), /*#__PURE__*/React.createElement(Input, {\n    className: \"form-control-alternative\",\n    id: \"input-pState\",\n    disabled: isTempAddIsPerAdd,\n    placeholder: \"State\",\n    value: perAddState,\n    onChange: function onChange(e) {\n      return setPerAddState(e.target.value);\n    },\n    type: \"Text\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 419,\n      columnNumber: 57\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    lg: \"6\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"form-control-label\",\n    htmlFor: \"input-pPin\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 57\n    }\n  }, \"Pin\"), /*#__PURE__*/React.createElement(Input, {\n    className: \"form-control-alternative\",\n    id: \"input-pPin\",\n    disabled: isTempAddIsPerAdd,\n    placeholder: \"Pin Code\",\n    value: perAddPin,\n    onChange: function onChange(e) {\n      return setPerAddPin(e.target.value);\n    },\n    type: \"Text\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 438,\n      columnNumber: 57\n    }\n  })))))))))))));\n};\n\n_s(RegisterUser, \"NNefcMbOhilY+p75cWuUfKKB6QA=\");\n\n_c = RegisterUser;\nexport default RegisterUser;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterUser\");","map":{"version":3,"sources":["/home/yash/RECT/RECT_ADMIN/front-end/src/views/examples/RegisterUser.js"],"names":["React","useEffect","useState","Button","Card","CardHeader","CardBody","FormGroup","Form","Input","Container","Row","Col","UserHeader","EditHeader","edit","RegisterUser","props","user","JSON","parse","localStorage","getItem","isTempAddIsPerAdd","setIsTempAddIsPerAdd","email","setEmail","password","setPassword","tempAddLine1","setTempAddLine1","tempAddLine2","setTempAddLine2","tempAddArea","setTempAddArea","tempAddCity","setTempAddCity","tempAddState","setTempAddState","tempAddPin","setTempAddPin","perAddLine1","setPerAddLine1","perAddLine2","setPerAddLine2","perAddArea","setPerAddArea","perAddCity","setPerAddCity","perAddState","setPerAddState","perAddPin","setPerAddPin","Date","dob","setDOB","mobile","setMobile","fname","setFName","lname","setLName","SameUser","RegUser","e","target","value","console","log","checked"],"mappings":"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","sourcesContent":["\nimport React, { useEffect, useState } from \"react\";\n\n// reactstrap components\nimport {\n    Button,\n    Card,\n    CardHeader,\n    CardBody,\n    FormGroup,\n    Form,\n    Input,\n    Container,\n    Row,\n    Col\n} from \"reactstrap\";\n// core components\nimport UserHeader from \"components/Headers/UserHeader.js\";\nimport EditHeader from \"../../components/Headers/EditHeader\";\nimport { edit } from \"../../network/ApiAxios\";\n\nconst RegisterUser = props => {\n\n\n    let user = JSON.parse(localStorage.getItem(\"admin\"));\n\n    // const [isDisabled,setIsDisabled] = useState(false)\n    const [isTempAddIsPerAdd, setIsTempAddIsPerAdd] = useState(false)\n\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    //temp Add\n    const [tempAddLine1, setTempAddLine1] = useState(\"\");\n    const [tempAddLine2, setTempAddLine2] = useState(\"\");\n    const [tempAddArea, setTempAddArea] = useState(\"\");\n    const [tempAddCity, setTempAddCity] = useState(\"\");\n    const [tempAddState, setTempAddState] = useState(\"\");\n    const [tempAddPin, setTempAddPin] = useState(\"\");\n    ///per Add\n    const [perAddLine1, setPerAddLine1] = useState(\"\");\n    const [perAddLine2, setPerAddLine2] = useState(\"\");\n    const [perAddArea, setPerAddArea] = useState(\"\");\n    const [perAddCity, setPerAddCity] = useState(\"\");\n    const [perAddState, setPerAddState] = useState(\"\");\n    const [perAddPin, setPerAddPin] = useState(\"\");\n    const [dob, setDOB] = useState(new Date);\n    const [mobile, setMobile] = useState();\n    const [fname, setFName] = useState(\"\");\n    const [lname, setLName] = useState(\"\");\n\n\n    const SameUser = () => {\n\n    }\n\n\n    const RegUser = () => {\n\n    }\n\n\n    return (\n        <>\n            <EditHeader />\n            {/* Page content */}\n            <Container className=\"mt--7\" fluid>\n                <Row>\n                    <div className=\"col\">\n                        <Card className=\"bg-secondary shadow\">\n                            <CardHeader className=\"bg-white border-0\">\n                                <Row className=\"align-items-center\">\n                                    <Col xs=\"8\">\n                                        <h3 className=\"mb-0\">Register New User.</h3>\n                                    </Col>\n                                    <Col className=\"text-right\" xs=\"4\">\n                                        <Button\n                                            color=\"primary\"\n                                            href=\"#pablo\"\n                                            onClick={RegUser}\n                                            size=\"sm\"\n                                        >\n                                            Save\n                                        </Button>\n                                    </Col>\n                                </Row>\n                            </CardHeader>\n                            <CardBody>\n                                <Form>\n                                    <h6 className=\"heading-small text-muted mb-4\">\n                                        User information\n                                    </h6>\n                                    <div className=\"pl-lg-4\">\n                                        <Row>\n                                            <Col lg=\"6\">\n                                                <FormGroup>\n                                                    <label\n                                                        className=\"form-control-label\"\n                                                        htmlFor=\"input-username\"\n                                                    >\n                                                        First Name\n                                                    </label>\n                                                    <Input\n\n                                                        className=\"form-control-alternative\"\n                                                        value={fname}\n                                                        id=\"input-fname\"\n                                                        placeholder=\"First Name\"\n                                                        onChange={e => setFName(e.target.value)}\n                                                        type=\"text\"\n                                                    />\n                                                </FormGroup>\n                                            </Col><Col lg=\"6\">\n                                                <FormGroup>\n                                                    <label\n                                                        className=\"form-control-label\"\n                                                        htmlFor=\"input-username\"\n                                                    >\n                                                        Last Name\n                                                    </label>\n                                                    <Input\n                                                        className=\"form-control-alternative\"\n                                                        value={lname}\n                                                        id=\"input-lname\"\n                                                        placeholder=\"Last Name\"\n                                                        onChange={e => setLName(e.target.value)}\n                                                        type=\"text\"\n                                                    />\n                                                </FormGroup>\n                                            </Col>\n                                        </Row>\n                                        <Row>\n                                            <Col lg=\"6\">\n                                                <FormGroup>\n                                                    <label\n                                                        className=\"form-control-label\"\n                                                        htmlFor=\"input-email\"\n                                                    >\n                                                        Email address\n                                                    </label>\n                                                    <Input\n                                                        className=\"form-control-alternative\"\n                                                        id=\"input-email\"\n                                                        value={email}\n                                                        placeholder=\"Email Address\"\n                                                        onChange={e => setEmail(e.target.value)}\n                                                        type=\"email\"\n                                                    />\n                                                </FormGroup>\n                                            </Col>\n                                            <Col lg=\"6\">\n                                                <FormGroup>\n                                                    <label\n                                                        className=\"form-control-label\"\n                                                        htmlFor=\"input-email\"\n                                                    >\n                                                        Password\n                                                    </label>\n                                                    <Input\n                                                        className=\"form-control-alternative\"\n                                                        id=\"input-password\"\n                                                        placeholder=\"Password\"\n                                                        value={password}\n                                                        onChange={e => setPassword(e.target.value)}\n                                                        type=\"Text\"\n                                                    />\n                                                </FormGroup>\n                                            </Col>\n\n                                        </Row>\n\n\n                                        {/* Address */}\n\n                                        <div>\n                                            <Row>\n                                                <h6 className=\"heading-small text-muted mb-4\">\n                                                    Temporary Address\n                                            </h6>\n                                                <Col lg=\"12\" >\n                                                    <FormGroup>\n                                                        <label\n                                                            className=\"form-control-label\"\n                                                            htmlFor=\"input-email\"\n                                                        >\n                                                            Temporary Address Line 1\n                                                        </label>\n                                                        <Input\n                                                            className=\"form-control-alternative\"\n                                                            id=\"input-email\"\n                                                            placeholder=\"Temporary Address\"\n                                                            value={tempAddLine1}\n                                                            onChange={e => setTempAddLine1(e.target.value)}\n                                                            type=\"Text\"\n                                                        />\n                                                    </FormGroup>\n                                                </Col>\n\n                                            </Row>\n                                            <Row>\n                                                <Col lg=\"12\" >\n                                                    <FormGroup>\n                                                        <label\n                                                            className=\"form-control-label\"\n                                                            htmlFor=\"input-email\"\n                                                        >\n                                                            Temporary Address Line 2\n                                                        </label>\n                                                        <Input\n                                                            className=\"form-control-alternative\"\n                                                            id=\"input-email\"\n                                                            placeholder=\"Temporary Address Line 2\"\n                                                            value={tempAddLine2}\n                                                            onChange={e => setTempAddLine2(e.target.value)}\n                                                            type=\"Text\"\n                                                        />\n                                                    </FormGroup>\n                                                </Col>\n\n                                            </Row>\n                                            <Row>\n                                                <Col lg=\"6\" >\n                                                    <FormGroup>\n                                                        <label\n                                                            className=\"form-control-label\"\n                                                            htmlFor=\"input-email\"\n                                                        >\n                                                            Area\n                                                        </label>\n                                                        <Input\n                                                            className=\"form-control-alternative\"\n                                                            id=\"input-email\"\n                                                            placeholder=\"Area\"\n                                                            value={tempAddArea}\n                                                            onChange={e => setTempAddArea(e.target.value)}\n                                                            type=\"Text\"\n                                                        />\n                                                    </FormGroup>\n                                                </Col>\n                                                <Col lg=\"6\" >\n                                                    <FormGroup>\n                                                        <label\n                                                            className=\"form-control-label\"\n                                                            htmlFor=\"input-email\"\n                                                        >\n                                                            City\n                                                        </label>\n                                                        <Input\n                                                            className=\"form-control-alternative\"\n                                                            id=\"input-email\"\n                                                            placeholder=\"City\"\n                                                            value={tempAddCity}\n                                                            onChange={e => setTempAddCity(e.target.value)}\n                                                            type=\"Text\"\n                                                        />\n                                                    </FormGroup>\n                                                </Col>\n\n                                            </Row>\n                                            <Row>\n                                                <Col lg=\"6\" >\n                                                    <FormGroup>\n                                                        <label\n                                                            className=\"form-control-label\"\n                                                            htmlFor=\"input-email\"\n                                                        >\n                                                            State\n                                                        </label>\n                                                        <Input\n                                                            className=\"form-control-alternative\"\n                                                            id=\"input-email\"\n                                                            placeholder=\"State\"\n                                                            value={tempAddState}\n                                                            onChange={e => setTempAddState(e.target.value)}\n                                                            type=\"Text\"\n                                                        />\n                                                    </FormGroup>\n                                                </Col>\n                                                <Col lg=\"6\" >\n                                                    <FormGroup>\n                                                        <label\n                                                            className=\"form-control-label\"\n                                                            htmlFor=\"input-email\"\n                                                        >\n                                                            Pin\n                                                        </label>\n                                                        <Input\n                                                            className=\"form-control-alternative\"\n                                                            id=\"input-email\"\n                                                            placeholder=\"Pin Code\"\n                                                            value={tempAddPin}\n                                                            onChange={e => setTempAddPin(e.target.value)}\n                                                            type=\"Text\"\n                                                        />\n                                                    </FormGroup>\n                                                </Col>\n\n                                            </Row>\n\n                                        </div>\n                                        <div>\n                                            <Row>\n\n                                                <h6 className=\"heading-small text-muted mb-4\">\n                                                    Same As Temporary Address ?\n                                                </h6>\n                                                <Col>\n\n                                                    <FormGroup>\n                                                        <input\n\n                                                            className=\"checkBox\"\n                                                            disabled={isTempAddIsPerAdd}\n                                                            onChange={e => console.log(e.target.checked)}\n                                                            type=\"CheckBox\"\n                                                        />\n                                                    </FormGroup>\n                                                </Col>\n\n                                            </Row>\n                                        </div>\n                                        <div>\n                                            <Row>\n                                                <h6 className=\"heading-small text-muted mb-4\">\n                                                    Permanent Address\n                                            </h6>\n                                                <Col lg=\"12\" >\n                                                    <FormGroup>\n                                                        <label\n                                                            className=\"form-control-label\"\n                                                            htmlFor=\"input-pal1\"\n                                                        >\n                                                            Permanent Address Line 1\n                                                        </label>\n                                                        <Input\n                                                            className=\"form-control-alternative\"\n                                                            disabled={isTempAddIsPerAdd}\n                                                            id=\"input-pal1\"\n                                                            placeholder=\"Permanent Address\"\n                                                            value={perAddLine1}\n                                                            onChange={e => setPerAddLine1(e.target.value)}\n                                                            type=\"Text\"\n                                                        />\n                                                    </FormGroup>\n                                                </Col>\n\n                                            </Row>\n                                            <Row>\n                                                <Col lg=\"12\" >\n                                                    <FormGroup>\n                                                        <label\n                                                            className=\"form-control-label\"\n                                                            htmlFor=\"input-pal2\"\n                                                        >\n                                                            Permanent Address Line 2\n                                                        </label>\n                                                        <Input\n                                                            className=\"form-control-alternative\"\n                                                            id=\"input-pal2\"\n                                                            disabled={isTempAddIsPerAdd}\n                                                            placeholder=\"Permanent Address Line 2\"\n                                                            value={perAddLine2}\n                                                            onChange={e => setPerAddLine2(e.target.value)}\n                                                            type=\"Text\"\n                                                        />\n                                                    </FormGroup>\n                                                </Col>\n\n                                            </Row>\n                                            <Row>\n                                                <Col lg=\"6\" >\n                                                    <FormGroup>\n                                                        <label\n                                                            className=\"form-control-label\"\n                                                            htmlFor=\"input-pArea\"\n                                                        >\n                                                            Area\n                                                        </label>\n                                                        <Input\n                                                            className=\"form-control-alternative\"\n                                                            id=\"input-pArea\"\n                                                            placeholder=\"Area\"\n                                                            value={perAddArea}\n                                                            onChange={e => setPerAddArea(e.target.value)}\n                                                            disabled={isTempAddIsPerAdd}\n                                                            type=\"Text\"\n                                                        />\n                                                    </FormGroup>\n                                                </Col>\n                                                <Col lg=\"6\" >\n                                                    <FormGroup>\n                                                        <label\n                                                            className=\"form-control-label\"\n                                                            htmlFor=\"input-pCity\"\n                                                        >\n                                                            City\n                                                        </label>\n                                                        <Input\n                                                            className=\"form-control-alternative\"\n                                                            id=\"input-pCity\"\n                                                            disabled={isTempAddIsPerAdd}\n                                                            placeholder=\"City\"\n                                                            value={perAddCity}\n                                                            onChange={e => setPerAddCity(e.target.value)}\n                                                            type=\"Text\"\n                                                        />\n                                                    </FormGroup>\n                                                </Col>\n\n                                            </Row>\n                                            <Row>\n                                                <Col lg=\"6\" >\n                                                    <FormGroup>\n                                                        <label\n                                                            className=\"form-control-label\"\n                                                            htmlFor=\"input-pState\"\n                                                        >\n                                                            State\n                                                        </label>\n                                                        <Input\n                                                            className=\"form-control-alternative\"\n                                                            id=\"input-pState\"\n                                                            disabled={isTempAddIsPerAdd}\n                                                            placeholder=\"State\"\n                                                            value={perAddState}\n                                                            onChange={e => setPerAddState(e.target.value)}\n                                                            type=\"Text\"\n                                                        />\n                                                    </FormGroup>\n                                                </Col>\n                                                <Col lg=\"6\" >\n                                                    <FormGroup>\n                                                        <label\n                                                            className=\"form-control-label\"\n                                                            htmlFor=\"input-pPin\"\n                                                        >\n                                                            Pin\n                                                        </label>\n                                                        <Input\n                                                            className=\"form-control-alternative\"\n                                                            id=\"input-pPin\"\n                                                            disabled={isTempAddIsPerAdd}\n                                                            placeholder=\"Pin Code\"\n                                                            value={perAddPin}\n                                                            onChange={e => setPerAddPin(e.target.value)}\n                                                            type=\"Text\"\n                                                        />\n                                                    </FormGroup>\n                                                </Col>\n\n                                            </Row>\n\n                                        </div>\n\n                                    </div>\n                                </Form>\n                            </CardBody>\n                        </Card>\n                    </div>\n                </Row>\n            </Container>\n        </>\n    )\n}\n\n\nexport default RegisterUser"]},"metadata":{},"sourceType":"module"}