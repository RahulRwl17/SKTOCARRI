{"ast":null,"code":"import _regeneratorRuntime from \"/home/yash/SKTOCARRI/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/yash/SKTOCARRI/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/yash/SKTOCARRI/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/yash/SKTOCARRI/front-end/src/views/examples/Register.js\",\n    _s = $RefreshSig$();\n\n/*!\n\n=========================================================\n* Argon Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React, { useState } from \"react\"; // reactstrap components\n\nimport { Button, Card, CardHeader, CardBody, FormGroup, Form, Input, InputGroupAddon, InputGroupText, InputGroup, Row, Col } from \"reactstrap\";\nimport Toast from 'react-bootstrap/Toast';\nimport { register } from \"../../network/ApiAxios\";\nimport config from \"../../config\";\n\nvar Register = function Register() {\n  _s();\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      password = _useState6[0],\n      setPassword = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      confirmPassword = _useState8[0],\n      setConfirmPassword = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      error = _useState10[0],\n      setError = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      showToast = _useState12[0],\n      setShowToast = _useState12[1];\n\n  var _useState13 = useState(\"Email sent! Check it to reset your password.\"),\n      _useState14 = _slicedToArray(_useState13, 2),\n      toastMessage = _useState14[0],\n      setToastMessage = _useState14[1];\n\n  var _useState15 = useState(null),\n      _useState16 = _slicedToArray(_useState15, 2),\n      userID = _useState16[0],\n      setUserID = _useState16[1];\n\n  var registerUser = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var response, data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (name && email && password && confirmPassword) {\n                _context.next = 3;\n                break;\n              }\n\n              setError(\"Make sure to fill all the inputs and agree to the privacy policy\");\n              return _context.abrupt(\"return\");\n\n            case 3:\n              if (!(password !== confirmPassword)) {\n                _context.next = 6;\n                break;\n              }\n\n              setError(\"Passwords do not match\");\n              return _context.abrupt(\"return\");\n\n            case 6:\n              _context.next = 8;\n              return register(name, email, password);\n\n            case 8:\n              response = _context.sent;\n              data = response.data;\n\n              if (data.success) {\n                _context.next = 13;\n                break;\n              }\n\n              setError(data.msg);\n              return _context.abrupt(\"return\");\n\n            case 13:\n              if (config.DEMO) {\n                setToastMessage(\"This is a demo, so we will not send you an email. Instead, click on this link to verify your account:\");\n                setUserID(data.userID);\n              }\n\n              setError(\"\");\n              setName(\"\");\n              setEmail(\"\");\n              setPassword(\"\");\n              setConfirmPassword(\"\");\n              setShowToast(true);\n\n            case 20:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function registerUser() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    \"aria-live\": \"polite\",\n    \"aria-atomic\": \"true\",\n    style: {\n      position: 'fixed',\n      minHeight: '100px',\n      width: \"35%\",\n      right: 10,\n      bottom: 80,\n      zIndex: 50\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Toast, {\n    style: {\n      position: 'absolute',\n      top: 0,\n      right: 0,\n      backgroundColor: \"white\",\n      padding: 10,\n      borderRadius: 10\n    },\n    onClose: function onClose() {\n      return setShowToast(false);\n    },\n    show: showToast,\n    delay: 10000,\n    autohide: !config.DEMO,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Toast.Header, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    style: {\n      height: \"30px\",\n      width: \"100px\"\n    },\n    src: require(\"assets/img/brand/argon-react.png\").default,\n    alt: \"...\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Toast.Body, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 21\n    }\n  }, toastMessage, config.DEMO ? /*#__PURE__*/React.createElement(\"a\", {\n    href: config.DOMAIN_NAME + '/auth/confirm-email/' + userID,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 29\n    }\n  }, config.DOMAIN_NAME + '/auth/confirm-email/' + userID) : null))), /*#__PURE__*/React.createElement(Col, {\n    lg: \"6\",\n    md: \"8\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"bg-secondary shadow border-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    className: \"bg-transparent pb-5\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-center text-muted mb-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"small\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 29\n    }\n  }, \"sign up with credentials\"))), /*#__PURE__*/React.createElement(CardBody, {\n    className: \"px-lg-5 py-lg-5\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    role: \"form\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(InputGroup, {\n    className: \"input-group-alternative mb-3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(InputGroupAddon, {\n    addonType: \"prepend\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(InputGroupText, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"ni ni-hat-3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 45\n    }\n  }))), /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"Name\",\n    type: \"text\",\n    value: name,\n    onChange: function onChange(e) {\n      return setName(e.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 37\n    }\n  }))), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(InputGroup, {\n    className: \"input-group-alternative mb-3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(InputGroupAddon, {\n    addonType: \"prepend\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(InputGroupText, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"ni ni-email-83\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 45\n    }\n  }))), /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"Email\",\n    type: \"email\",\n    autoComplete: \"new-email\",\n    value: email,\n    onChange: function onChange(e) {\n      return setEmail(e.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 37\n    }\n  }))), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(InputGroup, {\n    className: \"input-group-alternative\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(InputGroupAddon, {\n    addonType: \"prepend\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(InputGroupText, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"ni ni-lock-circle-open\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 45\n    }\n  }))), /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"Password\",\n    type: \"password\",\n    autoComplete: \"new-password\",\n    value: password,\n    onChange: function onChange(e) {\n      return setPassword(e.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 37\n    }\n  }))), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(InputGroup, {\n    className: \"input-group-alternative\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(InputGroupAddon, {\n    addonType: \"prepend\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(InputGroupText, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"ni ni-lock-circle-open\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 45\n    }\n  }))), /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"Confirm Password\",\n    type: \"password\",\n    autoComplete: \"new-password\",\n    value: confirmPassword,\n    onChange: function onChange(e) {\n      return setConfirmPassword(e.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 37\n    }\n  }))), error ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-muted font-italic\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"small\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 37\n    }\n  }, \"error:\", \" \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-red font-weight-700\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 41\n    }\n  }, error))) : null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: registerUser,\n    className: \"mt-4\",\n    color: \"primary\",\n    type: \"button\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 33\n    }\n  }, \"Create account\")))))));\n};\n\n_s(Register, \"cRS8CLJQhJsebhPi9/4vX3Vl0j0=\");\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/home/yash/SKTOCARRI/front-end/src/views/examples/Register.js"],"names":["React","useState","Button","Card","CardHeader","CardBody","FormGroup","Form","Input","InputGroupAddon","InputGroupText","InputGroup","Row","Col","Toast","register","config","Register","name","setName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","error","setError","showToast","setShowToast","toastMessage","setToastMessage","userID","setUserID","registerUser","response","data","success","msg","DEMO","position","minHeight","width","right","bottom","zIndex","top","backgroundColor","padding","borderRadius","height","require","default","DOMAIN_NAME","e","target","value"],"mappings":"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","sourcesContent":["/*!\n\n=========================================================\n* Argon Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React, { useState } from \"react\";\n\n// reactstrap components\nimport {\n    Button,\n    Card,\n    CardHeader,\n    CardBody,\n    FormGroup,\n    Form,\n    Input,\n    InputGroupAddon,\n    InputGroupText,\n    InputGroup,\n    Row,\n    Col\n} from \"reactstrap\";\nimport Toast from 'react-bootstrap/Toast'\nimport { register } from \"../../network/ApiAxios\";\nimport config from \"../../config\";\n\nconst Register = () => {\n\n    const [name, setName] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\n    const [error, setError] = useState(\"\");\n    const [showToast, setShowToast] = useState(false);\n    const [toastMessage, setToastMessage] = useState(\"Email sent! Check it to reset your password.\");\n    const [userID, setUserID] = useState(null);\n\n    const registerUser = async () => {\n        if (!(name && email && password && confirmPassword)) {\n            setError(\"Make sure to fill all the inputs and agree to the privacy policy\");\n            return;\n        }\n\n        if (password !== confirmPassword) {\n            setError(\"Passwords do not match\");\n            return;\n        }\n        const response = await register(name, email, password);\n        const { data } = response;\n        if (!data.success) {\n            setError(data.msg);\n            return;\n        }\n        if (config.DEMO) {\n            setToastMessage(\"This is a demo, so we will not send you an email. Instead, click on this link to verify your account:\")\n            setUserID(data.userID);\n        }\n        setError(\"\");\n        setName(\"\");\n        setEmail(\"\");\n        setPassword(\"\");\n        setConfirmPassword(\"\");\n        setShowToast(true);\n    };\n\n    return (\n        <>\n            <div\n                aria-live=\"polite\"\n                aria-atomic=\"true\"\n                style={{\n                    position: 'fixed',\n                    minHeight: '100px',\n                    width: \"35%\",\n                    right: 10,\n                    bottom: 80,\n                    zIndex: 50\n                }}\n            >\n                <Toast style={{\n                    position: 'absolute',\n                    top: 0,\n                    right: 0,\n                    backgroundColor: \"white\",\n                    padding: 10,\n                    borderRadius: 10\n                }} onClose={() => setShowToast(false)} show={showToast} delay={10000} autohide={!config.DEMO}>\n                    <Toast.Header>\n                        <img style={{ height: \"30px\", width: \"100px\" }} src={require(\"assets/img/brand/argon-react.png\").default} alt=\"...\" />\n                    </Toast.Header>\n                    <Toast.Body>\n                        {toastMessage}\n                        {config.DEMO ?\n                            <a href={config.DOMAIN_NAME + '/auth/confirm-email/' + userID}>\n                                {config.DOMAIN_NAME + '/auth/confirm-email/' + userID}\n                            </a> : null}\n                    </Toast.Body>\n                </Toast>\n            </div>\n            <Col lg=\"6\" md=\"8\">\n                <Card className=\"bg-secondary shadow border-0\">\n                    <CardHeader className=\"bg-transparent pb-5\">\n                        <div className=\"text-center text-muted mb-4\">\n                            <small>sign up with credentials</small>\n                        </div>\n                    </CardHeader>\n                    <CardBody className=\"px-lg-5 py-lg-5\">\n\n                        <Form role=\"form\">\n                            <FormGroup>\n                                <InputGroup className=\"input-group-alternative mb-3\">\n                                    <InputGroupAddon addonType=\"prepend\">\n                                        <InputGroupText>\n                                            <i className=\"ni ni-hat-3\" />\n                                        </InputGroupText>\n                                    </InputGroupAddon>\n                                    <Input placeholder=\"Name\" type=\"text\" value={name}\n                                        onChange={e => setName(e.target.value)}\n                                    />\n                                </InputGroup>\n                            </FormGroup>\n                            <FormGroup>\n                                <InputGroup className=\"input-group-alternative mb-3\">\n                                    <InputGroupAddon addonType=\"prepend\">\n                                        <InputGroupText>\n                                            <i className=\"ni ni-email-83\" />\n                                        </InputGroupText>\n                                    </InputGroupAddon>\n                                    <Input placeholder=\"Email\" type=\"email\" autoComplete=\"new-email\" value={email}\n                                        onChange={e => setEmail(e.target.value)}\n                                    />\n                                </InputGroup>\n                            </FormGroup>\n                            <FormGroup>\n                                <InputGroup className=\"input-group-alternative\">\n                                    <InputGroupAddon addonType=\"prepend\">\n                                        <InputGroupText>\n                                            <i className=\"ni ni-lock-circle-open\" />\n                                        </InputGroupText>\n                                    </InputGroupAddon>\n                                    <Input placeholder=\"Password\" type=\"password\" autoComplete=\"new-password\" value={password}\n                                        onChange={e => setPassword(e.target.value)}\n                                    />\n                                </InputGroup>\n                            </FormGroup>\n                            <FormGroup>\n                                <InputGroup className=\"input-group-alternative\">\n                                    <InputGroupAddon addonType=\"prepend\">\n                                        <InputGroupText>\n                                            <i className=\"ni ni-lock-circle-open\" />\n                                        </InputGroupText>\n                                    </InputGroupAddon>\n                                    <Input placeholder=\"Confirm Password\" type=\"password\" autoComplete=\"new-password\" value={confirmPassword}\n                                        onChange={e => setConfirmPassword(e.target.value)}\n                                    />\n                                </InputGroup>\n                            </FormGroup>\n                            {error ?\n                                <div className=\"text-muted font-italic\">\n                                    <small>\n                                        error:{\" \"}\n                                        <span className=\"text-red font-weight-700\">{error}</span>\n                                    </small>\n                                </div> : null\n                            }\n\n                            <div className=\"text-center\">\n                                <Button onClick={registerUser} className=\"mt-4\" color=\"primary\" type=\"button\">\n                                    Create account\n                                    </Button>\n                            </div>\n                        </Form>\n                    </CardBody>\n                </Card>\n            </Col>\n        </>\n    );\n};\n\nexport default Register;\n"]},"metadata":{},"sourceType":"module"}