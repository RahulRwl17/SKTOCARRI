{"ast":null,"code":"import _regeneratorRuntime from \"/home/yash/RECT/RECT_ADMIN/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/yash/RECT/RECT_ADMIN/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/yash/RECT/RECT_ADMIN/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/yash/RECT/RECT_ADMIN/front-end/src/views/examples/RegisterUser.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\"; // reactstrap components\n\nimport { Button, Card, CardHeader, CardBody, FormGroup, Form, Input, Container, Row, Col } from \"reactstrap\";\nimport ImageUploader from 'react-images-upload'; // core components\n\nimport UserHeader from \"components/Headers/UserHeader.js\";\nimport EditHeader from \"../../components/Headers/EditHeader\";\nimport { edit, registerUser } from \"../../network/ApiAxios\";\n\nvar RegisterUser = function RegisterUser(props) {\n  _s();\n\n  var user = JSON.parse(localStorage.getItem(\"admin\")); // const [isDisabled,setIsDisabled] = useState(false)\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isTempAddIsPerAdd = _useState2[0],\n      setIsTempAddIsPerAdd = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      error = _useState4[0],\n      setError = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      email = _useState6[0],\n      setEmail = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      password = _useState8[0],\n      setPassword = _useState8[1]; //temp Add\n\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      tempAddLine1 = _useState10[0],\n      setTempAddLine1 = _useState10[1];\n\n  var _useState11 = useState(\"\"),\n      _useState12 = _slicedToArray(_useState11, 2),\n      tempAddLine2 = _useState12[0],\n      setTempAddLine2 = _useState12[1];\n\n  var _useState13 = useState(\"\"),\n      _useState14 = _slicedToArray(_useState13, 2),\n      tempAddArea = _useState14[0],\n      setTempAddArea = _useState14[1];\n\n  var _useState15 = useState(\"\"),\n      _useState16 = _slicedToArray(_useState15, 2),\n      tempAddCity = _useState16[0],\n      setTempAddCity = _useState16[1];\n\n  var _useState17 = useState(\"\"),\n      _useState18 = _slicedToArray(_useState17, 2),\n      tempAddState = _useState18[0],\n      setTempAddState = _useState18[1];\n\n  var _useState19 = useState(\"\"),\n      _useState20 = _slicedToArray(_useState19, 2),\n      tempAddPin = _useState20[0],\n      setTempAddPin = _useState20[1]; ///per Add\n\n\n  var _useState21 = useState(\"\"),\n      _useState22 = _slicedToArray(_useState21, 2),\n      perAddLine1 = _useState22[0],\n      setPerAddLine1 = _useState22[1];\n\n  var _useState23 = useState(\"\"),\n      _useState24 = _slicedToArray(_useState23, 2),\n      perAddLine2 = _useState24[0],\n      setPerAddLine2 = _useState24[1];\n\n  var _useState25 = useState(\"\"),\n      _useState26 = _slicedToArray(_useState25, 2),\n      perAddArea = _useState26[0],\n      setPerAddArea = _useState26[1];\n\n  var _useState27 = useState(\"\"),\n      _useState28 = _slicedToArray(_useState27, 2),\n      perAddCity = _useState28[0],\n      setPerAddCity = _useState28[1];\n\n  var _useState29 = useState(\"\"),\n      _useState30 = _slicedToArray(_useState29, 2),\n      perAddState = _useState30[0],\n      setPerAddState = _useState30[1];\n\n  var _useState31 = useState(\"\"),\n      _useState32 = _slicedToArray(_useState31, 2),\n      perAddPin = _useState32[0],\n      setPerAddPin = _useState32[1];\n\n  var _useState33 = useState(),\n      _useState34 = _slicedToArray(_useState33, 2),\n      photo = _useState34[0],\n      setPhoto = _useState34[1];\n\n  var _useState35 = useState(),\n      _useState36 = _slicedToArray(_useState35, 2),\n      signature = _useState36[0],\n      setSignature = _useState36[1];\n\n  var _useState37 = useState(),\n      _useState38 = _slicedToArray(_useState37, 2),\n      aadhar = _useState38[0],\n      setAadhar = _useState38[1];\n\n  var _useState39 = useState(),\n      _useState40 = _slicedToArray(_useState39, 2),\n      castCert = _useState40[0],\n      setCastCert = _useState40[1];\n\n  var _useState41 = useState(new Date()),\n      _useState42 = _slicedToArray(_useState41, 2),\n      dob = _useState42[0],\n      setDOB = _useState42[1];\n\n  var _useState43 = useState(),\n      _useState44 = _slicedToArray(_useState43, 2),\n      mobile = _useState44[0],\n      setMobile = _useState44[1];\n\n  var _useState45 = useState(\"\"),\n      _useState46 = _slicedToArray(_useState45, 2),\n      fname = _useState46[0],\n      setFName = _useState46[1];\n\n  var _useState47 = useState(\"\"),\n      _useState48 = _slicedToArray(_useState47, 2),\n      lname = _useState48[0],\n      setLName = _useState48[1];\n\n  var sameAddress = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(val) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return setIsTempAddIsPerAdd(val);\n\n            case 2:\n              _context.next = 4;\n              return setPerAddLine1(tempAddLine1);\n\n            case 4:\n              _context.next = 6;\n              return setPerAddLine2(tempAddLine2);\n\n            case 6:\n              _context.next = 8;\n              return setPerAddArea(tempAddArea);\n\n            case 8:\n              _context.next = 10;\n              return setPerAddCity(tempAddCity);\n\n            case 10:\n              _context.next = 12;\n              return setPerAddState(tempAddState);\n\n            case 12:\n              _context.next = 14;\n              return setPerAddPin(tempAddPin);\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function sameAddress(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var onDrop = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(val, pictureFile, pictureDataURLs) {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              console.log(pictureFile);\n              _context2.t0 = val;\n              _context2.next = _context2.t0 === 'photo' ? 4 : _context2.t0 === 'signature' ? 6 : _context2.t0 === 'aadhar' ? 8 : _context2.t0 === 'castCert' ? 10 : 12;\n              break;\n\n            case 4:\n              setPhoto(pictureDataURLs);\n              return _context2.abrupt(\"break\", 13);\n\n            case 6:\n              setSignature(pictureFile);\n              return _context2.abrupt(\"break\", 13);\n\n            case 8:\n              setAadhar(pictureFile);\n              return _context2.abrupt(\"break\", 13);\n\n            case 10:\n              setCastCert(pictureFile);\n              return _context2.abrupt(\"break\", 13);\n\n            case 12:\n              return _context2.abrupt(\"break\", 13);\n\n            case 13:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function onDrop(_x2, _x3, _x4) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var clearForm = function clearForm() {\n    setEmail(\"\");\n    setPassword(\"\");\n    setTempAddLine1(\"\");\n    setTempAddLine2(\"\");\n    setTempAddArea(\"\");\n    setTempAddCity(\"\");\n    setTempAddState(\"\");\n    setTempAddPin(\"\");\n    setPerAddLine1(\"\");\n    setPerAddLine2(\"\");\n    setPerAddArea(\"\");\n    setPerAddCity(\"\");\n    setPerAddState(\"\");\n    setPerAddPin(\"\");\n    setDOB(\"\");\n    setMobile(\"\");\n    setFName(\"\");\n    setLName(\"\");\n  };\n\n  var RegUser = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(e) {\n      var tempAddress, perAddress, response, data;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              e.preventDefault();\n              tempAddress = tempAddLine1 + \" \" + tempAddLine2 + \" \" + tempAddArea + \" \" + tempAddCity + \" \" + tempAddState + \" \" + tempAddPin;\n              perAddress = perAddLine1 + \" \" + perAddLine2 + \" \" + perAddArea + \" \" + perAddCity + \" \" + perAddState + \" \" + perAddPin;\n              _context3.next = 5;\n              return registerUser(fname, lname, email, password, mobile, tempAddress, perAddress, dob);\n\n            case 5:\n              response = _context3.sent;\n              data = response.data;\n\n              if (data.success) {\n                setError(\"\");\n                clearForm();\n              } else {\n                setError(data.msg);\n                clearForm();\n              }\n\n            case 8:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function RegUser(_x5) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(EditHeader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    className: \"mt--7\",\n    fluid: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"bg-secondary shadow\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    className: \"bg-white border-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    className: \"align-items-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    xs: \"8\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"mb-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 41\n    }\n  }, \"Register New User.\")), /*#__PURE__*/React.createElement(Col, {\n    className: \"text-right\",\n    xs: \"4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    href: \"#pablo\",\n    onClick: RegUser,\n    size: \"sm\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 41\n    }\n  }, \"Save\")))), /*#__PURE__*/React.createElement(CardBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"heading-small text-muted mb-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 37\n    }\n  }, \"User information\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pl-lg-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: \"6\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"form-control-label\",\n    htmlFor: \"input-username\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 53\n    }\n  }, \"First Name\"), /*#__PURE__*/React.createElement(Input, {\n    className: \"form-control-alternative\",\n    value: fname,\n    id: \"input-fname\",\n    placeholder: \"First Name\",\n    onChange: function onChange(e) {\n      return setFName(e.target.value);\n    },\n    type: \"text\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 53\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    lg: \"6\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 51\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"form-control-label\",\n    htmlFor: \"input-username\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 53\n    }\n  }, \"Last Name\"), /*#__PURE__*/React.createElement(Input, {\n    className: \"form-control-alternative\",\n    value: lname,\n    id: \"input-lname\",\n    placeholder: \"Last Name\",\n    onChange: function onChange(e) {\n      return setLName(e.target.value);\n    },\n    type: \"text\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 53\n    }\n  })))), /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: \"6\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"form-control-label\",\n    htmlFor: \"input-email\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 53\n    }\n  }, \"Email address\"), /*#__PURE__*/React.createElement(Input, {\n    className: \"form-control-alternative\",\n    id: \"input-email\",\n    value: email,\n    placeholder: \"Email Address\",\n    onChange: function onChange(e) {\n      return setEmail(e.target.value);\n    },\n    type: \"email\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 53\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    lg: \"6\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"form-control-label\",\n    htmlFor: \"input-email\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 53\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(Input, {\n    className: \"form-control-alternative\",\n    id: \"input-password\",\n    placeholder: \"Password\",\n    value: password,\n    onChange: function onChange(e) {\n      return setPassword(e.target.value);\n    },\n    type: \"Text\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 53\n    }\n  })))), /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: \"6\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"form-control-label\",\n    htmlFor: \"input-dob\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 53\n    }\n  }, \"Date Of Birth\"), /*#__PURE__*/React.createElement(Input, {\n    className: \"form-control-alternative\",\n    id: \"input-dob\",\n    value: dob,\n    placeholder: \"Date Of Birth\",\n    onChange: function onChange(e) {\n      return setDOB(e.target.value);\n    },\n    type: \"date\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 53\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    lg: \"6\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"form-control-label\",\n    htmlFor: \"input-mobile\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 53\n    }\n  }, \"mobile\"), /*#__PURE__*/React.createElement(Input, {\n    className: \"form-control-alternative\",\n    id: \"input-mobile\",\n    placeholder: \"Mobile Number\",\n    value: mobile,\n    onChange: function onChange(e) {\n      return setMobile(e.target.value);\n    },\n    type: \"number\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 53\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"heading-small text-muted mb-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 49\n    }\n  }, \"Temporary Address\"), /*#__PURE__*/React.createElement(Col, {\n    lg: \"12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"form-control-label\",\n    htmlFor: \"input-email\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 57\n    }\n  }, \"Temporary Address Line 1\"), /*#__PURE__*/React.createElement(Input, {\n    className: \"form-control-alternative\",\n    id: \"input-email\",\n    placeholder: \"Temporary Address\",\n    value: tempAddLine1,\n    onChange: function onChange(e) {\n      return setTempAddLine1(e.target.value);\n    },\n    type: \"Text\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 57\n    }\n  })))), /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: \"12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"form-control-label\",\n    htmlFor: \"input-email\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 57\n    }\n  }, \"Temporary Address Line 2\"), /*#__PURE__*/React.createElement(Input, {\n    className: \"form-control-alternative\",\n    id: \"input-email\",\n    placeholder: \"Temporary Address Line 2\",\n    value: tempAddLine2,\n    onChange: function onChange(e) {\n      return setTempAddLine2(e.target.value);\n    },\n    type: \"Text\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 57\n    }\n  })))), /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: \"6\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"form-control-label\",\n    htmlFor: \"input-email\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 57\n    }\n  }, \"Area\"), /*#__PURE__*/React.createElement(Input, {\n    className: \"form-control-alternative\",\n    id: \"input-email\",\n    placeholder: \"Area\",\n    value: tempAddArea,\n    onChange: function onChange(e) {\n      return setTempAddArea(e.target.value);\n    },\n    type: \"Text\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 57\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    lg: \"6\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"form-control-label\",\n    htmlFor: \"input-email\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 57\n    }\n  }, \"City\"), /*#__PURE__*/React.createElement(Input, {\n    className: \"form-control-alternative\",\n    id: \"input-email\",\n    placeholder: \"City\",\n    value: tempAddCity,\n    onChange: function onChange(e) {\n      return setTempAddCity(e.target.value);\n    },\n    type: \"Text\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 57\n    }\n  })))), /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: \"6\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"form-control-label\",\n    htmlFor: \"input-email\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 57\n    }\n  }, \"State\"), /*#__PURE__*/React.createElement(Input, {\n    className: \"form-control-alternative\",\n    id: \"input-email\",\n    placeholder: \"State\",\n    value: tempAddState,\n    onChange: function onChange(e) {\n      return setTempAddState(e.target.value);\n    },\n    type: \"Text\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 57\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    lg: \"6\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"form-control-label\",\n    htmlFor: \"input-email\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 57\n    }\n  }, \"Pin\"), /*#__PURE__*/React.createElement(Input, {\n    className: \"form-control-alternative\",\n    id: \"input-email\",\n    placeholder: \"Pin Code\",\n    value: tempAddPin,\n    onChange: function onChange(e) {\n      return setTempAddPin(e.target.value);\n    },\n    type: \"Text\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 57\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 402,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"heading-small text-muted mb-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 49\n    }\n  }, \"Same As Temporary Address ?\"), /*#__PURE__*/React.createElement(Col, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 409,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"checkBox\",\n    onChange: function onChange(e) {\n      return sameAddress(e.target.checked);\n    },\n    type: \"CheckBox\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 410,\n      columnNumber: 57\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 420,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 421,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"heading-small text-muted mb-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 49\n    }\n  }, \"Permanent Address\"), /*#__PURE__*/React.createElement(Col, {\n    lg: \"12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"form-control-label\",\n    htmlFor: \"input-pal1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 57\n    }\n  }, \"Permanent Address Line 1\"), /*#__PURE__*/React.createElement(Input, {\n    className: \"form-control-alternative\",\n    disabled: isTempAddIsPerAdd,\n    id: \"input-pal1\",\n    placeholder: \"Permanent Address\",\n    value: perAddLine1,\n    onChange: function onChange(e) {\n      return setPerAddLine1(e.target.value);\n    },\n    type: \"Text\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 433,\n      columnNumber: 57\n    }\n  })))), /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: \"12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 447,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 448,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"form-control-label\",\n    htmlFor: \"input-pal2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 449,\n      columnNumber: 57\n    }\n  }, \"Permanent Address Line 2\"), /*#__PURE__*/React.createElement(Input, {\n    className: \"form-control-alternative\",\n    id: \"input-pal2\",\n    disabled: isTempAddIsPerAdd,\n    placeholder: \"Permanent Address Line 2\",\n    value: perAddLine2,\n    onChange: function onChange(e) {\n      return setPerAddLine2(e.target.value);\n    },\n    type: \"Text\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 455,\n      columnNumber: 57\n    }\n  })))), /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 468,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: \"6\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 469,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 470,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"form-control-label\",\n    htmlFor: \"input-pArea\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 471,\n      columnNumber: 57\n    }\n  }, \"Area\"), /*#__PURE__*/React.createElement(Input, {\n    className: \"form-control-alternative\",\n    id: \"input-pArea\",\n    placeholder: \"Area\",\n    value: perAddArea,\n    onChange: function onChange(e) {\n      return setPerAddArea(e.target.value);\n    },\n    disabled: isTempAddIsPerAdd,\n    type: \"Text\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 477,\n      columnNumber: 57\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    lg: \"6\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 488,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 489,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"form-control-label\",\n    htmlFor: \"input-pCity\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 490,\n      columnNumber: 57\n    }\n  }, \"City\"), /*#__PURE__*/React.createElement(Input, {\n    className: \"form-control-alternative\",\n    id: \"input-pCity\",\n    disabled: isTempAddIsPerAdd,\n    placeholder: \"City\",\n    value: perAddCity,\n    onChange: function onChange(e) {\n      return setPerAddCity(e.target.value);\n    },\n    type: \"Text\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 496,\n      columnNumber: 57\n    }\n  })))), /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 509,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: \"6\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 510,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 511,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"form-control-label\",\n    htmlFor: \"input-pState\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 512,\n      columnNumber: 57\n    }\n  }, \"State\"), /*#__PURE__*/React.createElement(Input, {\n    className: \"form-control-alternative\",\n    id: \"input-pState\",\n    disabled: isTempAddIsPerAdd,\n    placeholder: \"State\",\n    value: perAddState,\n    onChange: function onChange(e) {\n      return setPerAddState(e.target.value);\n    },\n    type: \"Text\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 518,\n      columnNumber: 57\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    lg: \"6\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 529,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 530,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"form-control-label\",\n    htmlFor: \"input-pPin\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 531,\n      columnNumber: 57\n    }\n  }, \"Pin\"), /*#__PURE__*/React.createElement(Input, {\n    className: \"form-control-alternative\",\n    id: \"input-pPin\",\n    disabled: isTempAddIsPerAdd,\n    placeholder: \"Pin Code\",\n    value: perAddPin,\n    onChange: function onChange(e) {\n      return setPerAddPin(e.target.value);\n    },\n    type: \"Text\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 537,\n      columnNumber: 57\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 553,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 554,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"heading-small text-muted mb-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 555,\n      columnNumber: 49\n    }\n  }, \"Upload Documents\")), /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 559,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: \"3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 561,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 562,\n      columnNumber: 53\n    }\n  }, \"Uplaod Photo\"), /*#__PURE__*/React.createElement(ImageUploader, {\n    withIcon: true,\n    buttonText: \"Choose images\",\n    onChange: function onChange() {\n      onDrop('photo');\n    },\n    singleImage: true,\n    imgExtension: ['.jpg', '.gif', '.png', '.gif', '.jpeg'],\n    maxFileSize: 412000,\n    withPreview: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 564,\n      columnNumber: 53\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    lg: \"3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 574,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 575,\n      columnNumber: 53\n    }\n  }, \"Uplaod Signature\"), /*#__PURE__*/React.createElement(ImageUploader, {\n    withIcon: true,\n    buttonText: \"Choose images\",\n    onChange: function onChange() {\n      onDrop('signature');\n    },\n    singleImage: true,\n    imgExtension: ['.jpg', '.gif', '.png', '.gif', '.jpeg'],\n    maxFileSize: 412000,\n    withPreview: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 576,\n      columnNumber: 53\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    lg: \"3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 586,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 587,\n      columnNumber: 53\n    }\n  }, \"Uplaod Aadhar\"), /*#__PURE__*/React.createElement(ImageUploader, {\n    withIcon: true,\n    buttonText: \"Choose images\",\n    onChange: function onChange() {\n      onDrop('aadhar');\n    },\n    singleImage: true,\n    imgExtension: ['.jpg', '.gif', '.png', '.gif', '.jpeg'],\n    maxFileSize: 412000,\n    withPreview: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 588,\n      columnNumber: 53\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    lg: \"3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 598,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 599,\n      columnNumber: 53\n    }\n  }, \"Uplaod Cast Certificate\"), /*#__PURE__*/React.createElement(ImageUploader, {\n    withIcon: true,\n    buttonText: \"Choose images\",\n    onChange: function onChange() {\n      onDrop('castCert');\n    },\n    singleImage: true,\n    imgExtension: ['.jpg', '.gif', '.png', '.gif', '.jpeg'],\n    maxFileSize: 412000,\n    withPreview: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 600,\n      columnNumber: 53\n    }\n  })))), /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 613,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: \"12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 614,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 615,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"my-4\",\n    color: \"primary\",\n    type: \"submit\",\n    onClick: function onClick(e) {\n      return RegUser(e);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 616,\n      columnNumber: 53\n    }\n  }, \"Register And Approve\"))))))))))));\n};\n\n_s(RegisterUser, \"WWTl0qSIWChKfVuQWMFy6SRPqvU=\");\n\n_c = RegisterUser;\nexport default RegisterUser;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterUser\");","map":{"version":3,"sources":["/home/yash/RECT/RECT_ADMIN/front-end/src/views/examples/RegisterUser.js"],"names":["React","useEffect","useState","Button","Card","CardHeader","CardBody","FormGroup","Form","Input","Container","Row","Col","ImageUploader","UserHeader","EditHeader","edit","registerUser","RegisterUser","props","user","JSON","parse","localStorage","getItem","isTempAddIsPerAdd","setIsTempAddIsPerAdd","error","setError","email","setEmail","password","setPassword","tempAddLine1","setTempAddLine1","tempAddLine2","setTempAddLine2","tempAddArea","setTempAddArea","tempAddCity","setTempAddCity","tempAddState","setTempAddState","tempAddPin","setTempAddPin","perAddLine1","setPerAddLine1","perAddLine2","setPerAddLine2","perAddArea","setPerAddArea","perAddCity","setPerAddCity","perAddState","setPerAddState","perAddPin","setPerAddPin","photo","setPhoto","signature","setSignature","aadhar","setAadhar","castCert","setCastCert","Date","dob","setDOB","mobile","setMobile","fname","setFName","lname","setLName","sameAddress","val","onDrop","pictureFile","pictureDataURLs","console","log","clearForm","RegUser","e","preventDefault","tempAddress","perAddress","response","data","success","msg","target","value","checked"],"mappings":"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","sourcesContent":["\nimport React, { useEffect, useState } from \"react\";\n\n// reactstrap components\nimport {\n    Button,\n    Card,\n    CardHeader,\n    CardBody,\n    FormGroup,\n    Form,\n    Input,\n    Container,\n    Row,\n    Col\n} from \"reactstrap\";\nimport ImageUploader from 'react-images-upload';\n// core components\nimport UserHeader from \"components/Headers/UserHeader.js\";\nimport EditHeader from \"../../components/Headers/EditHeader\";\nimport { edit, registerUser } from \"../../network/ApiAxios\";\n\nconst RegisterUser = props => {\n\n\n    let user = JSON.parse(localStorage.getItem(\"admin\"));\n\n    // const [isDisabled,setIsDisabled] = useState(false)\n    const [isTempAddIsPerAdd, setIsTempAddIsPerAdd] = useState(false)\n    const [error, setError] = useState(\"\");\n\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    //temp Add\n    const [tempAddLine1, setTempAddLine1] = useState(\"\");\n    const [tempAddLine2, setTempAddLine2] = useState(\"\");\n    const [tempAddArea, setTempAddArea] = useState(\"\");\n    const [tempAddCity, setTempAddCity] = useState(\"\");\n    const [tempAddState, setTempAddState] = useState(\"\");\n    const [tempAddPin, setTempAddPin] = useState(\"\");\n    ///per Add\n    const [perAddLine1, setPerAddLine1] = useState(\"\");\n    const [perAddLine2, setPerAddLine2] = useState(\"\");\n    const [perAddArea, setPerAddArea] = useState(\"\");\n    const [perAddCity, setPerAddCity] = useState(\"\");\n    const [perAddState, setPerAddState] = useState(\"\");\n    const [perAddPin, setPerAddPin] = useState(\"\");\n\n\n    const [photo, setPhoto] = useState();\n    const [signature, setSignature] = useState();\n    const [aadhar, setAadhar] = useState();\n    const [castCert, setCastCert] = useState();\n\n    const [dob, setDOB] = useState(new Date);\n    const [mobile, setMobile] = useState();\n    const [fname, setFName] = useState(\"\");\n    const [lname, setLName] = useState(\"\");\n\n\n    const sameAddress = async (val) => {\n        await setIsTempAddIsPerAdd(val);\n        await setPerAddLine1(tempAddLine1)\n        await setPerAddLine2(tempAddLine2)\n        await setPerAddArea(tempAddArea)\n        await setPerAddCity(tempAddCity)\n        await setPerAddState(tempAddState)\n        await setPerAddPin(tempAddPin)\n    }\n\n    const onDrop = async (val, pictureFile, pictureDataURLs) => {\n        console.log(pictureFile);\n        switch (val) {\n            case 'photo':\n                setPhoto(pictureDataURLs)\n                break;\n            case 'signature':\n                setSignature(pictureFile)\n                break;\n            case 'aadhar':\n                setAadhar(pictureFile)\n                break;\n            case 'castCert':\n                setCastCert(pictureFile)\n                break;\n\n            default:\n                break;\n        }\n    }\n    const clearForm = () => {\n        setEmail(\"\")\n        setPassword(\"\")\n        setTempAddLine1(\"\")\n        setTempAddLine2(\"\")\n        setTempAddArea(\"\")\n        setTempAddCity(\"\")\n        setTempAddState(\"\")\n        setTempAddPin(\"\")\n        setPerAddLine1(\"\")\n        setPerAddLine2(\"\")\n        setPerAddArea(\"\")\n        setPerAddCity(\"\")\n        setPerAddState(\"\")\n        setPerAddPin(\"\")\n        setDOB(\"\")\n        setMobile(\"\")\n        setFName(\"\")\n        setLName(\"\")\n    }\n    const RegUser = async (e) => {\n        e.preventDefault()\n        var tempAddress = tempAddLine1 + \" \" + tempAddLine2 + \" \" + tempAddArea + \" \" + tempAddCity + \" \" + tempAddState + \" \" + tempAddPin;\n        var perAddress = perAddLine1 + \" \" + perAddLine2 + \" \" + perAddArea + \" \" + perAddCity + \" \" + perAddState + \" \" + perAddPin;\n\n        const response = await registerUser(fname, lname, email, password, mobile, tempAddress, perAddress, dob);\n        const { data } = response;\n        if (data.success) {\n            setError(\"\");\n            clearForm();\n        } else {\n            setError(data.msg);\n            clearForm()\n        }\n\n    }\n\n\n    return (\n        <>\n            <EditHeader />\n            {/* Page content */}\n            <Container className=\"mt--7\" fluid>\n                <Row>\n                    <div className=\"col\">\n                        <Card className=\"bg-secondary shadow\">\n                            <CardHeader className=\"bg-white border-0\">\n                                <Row className=\"align-items-center\">\n                                    <Col xs=\"8\">\n                                        <h3 className=\"mb-0\">Register New User.</h3>\n                                    </Col>\n                                    <Col className=\"text-right\" xs=\"4\">\n                                        <Button\n                                            color=\"primary\"\n                                            href=\"#pablo\"\n                                            onClick={RegUser}\n                                            size=\"sm\"\n                                        >\n                                            Save\n                                        </Button>\n                                    </Col>\n                                </Row>\n                            </CardHeader>\n                            <CardBody>\n                                <Form>\n                                    <h6 className=\"heading-small text-muted mb-4\">\n                                        User information\n                                    </h6>\n                                    <div className=\"pl-lg-4\">\n                                        <Row>\n                                            <Col lg=\"6\">\n                                                <FormGroup>\n                                                    <label\n                                                        className=\"form-control-label\"\n                                                        htmlFor=\"input-username\"\n                                                    >\n                                                        First Name\n                                                    </label>\n                                                    <Input\n\n                                                        className=\"form-control-alternative\"\n                                                        value={fname}\n                                                        id=\"input-fname\"\n                                                        placeholder=\"First Name\"\n                                                        onChange={e => setFName(e.target.value)}\n                                                        type=\"text\"\n                                                    />\n                                                </FormGroup>\n                                            </Col><Col lg=\"6\">\n                                                <FormGroup>\n                                                    <label\n                                                        className=\"form-control-label\"\n                                                        htmlFor=\"input-username\"\n                                                    >\n                                                        Last Name\n                                                    </label>\n                                                    <Input\n                                                        className=\"form-control-alternative\"\n                                                        value={lname}\n                                                        id=\"input-lname\"\n                                                        placeholder=\"Last Name\"\n                                                        onChange={e => setLName(e.target.value)}\n                                                        type=\"text\"\n                                                    />\n                                                </FormGroup>\n                                            </Col>\n                                        </Row>\n                                        <Row>\n                                            <Col lg=\"6\">\n                                                <FormGroup>\n                                                    <label\n                                                        className=\"form-control-label\"\n                                                        htmlFor=\"input-email\"\n                                                    >\n                                                        Email address\n                                                    </label>\n                                                    <Input\n                                                        className=\"form-control-alternative\"\n                                                        id=\"input-email\"\n                                                        value={email}\n                                                        placeholder=\"Email Address\"\n                                                        onChange={e => setEmail(e.target.value)}\n                                                        type=\"email\"\n                                                    />\n                                                </FormGroup>\n                                            </Col>\n                                            <Col lg=\"6\">\n                                                <FormGroup>\n                                                    <label\n                                                        className=\"form-control-label\"\n                                                        htmlFor=\"input-email\"\n                                                    >\n                                                        Password\n                                                    </label>\n                                                    <Input\n                                                        className=\"form-control-alternative\"\n                                                        id=\"input-password\"\n                                                        placeholder=\"Password\"\n                                                        value={password}\n                                                        onChange={e => setPassword(e.target.value)}\n                                                        type=\"Text\"\n                                                    />\n                                                </FormGroup>\n                                            </Col>\n\n                                        </Row>\n                                        <Row>\n                                            <Col lg=\"6\">\n                                                <FormGroup>\n                                                    <label\n                                                        className=\"form-control-label\"\n                                                        htmlFor=\"input-dob\"\n                                                    >\n                                                        Date Of Birth\n                                                    </label>\n                                                    <Input\n                                                        className=\"form-control-alternative\"\n                                                        id=\"input-dob\"\n                                                        value={dob}\n                                                        placeholder=\"Date Of Birth\"\n                                                        onChange={e => setDOB(e.target.value)}\n                                                        type=\"date\"\n                                                    />\n                                                </FormGroup>\n                                            </Col>\n                                            <Col lg=\"6\">\n                                                <FormGroup>\n                                                    <label\n                                                        className=\"form-control-label\"\n                                                        htmlFor=\"input-mobile\"\n                                                    >\n                                                        mobile\n                                                    </label>\n                                                    <Input\n                                                        className=\"form-control-alternative\"\n                                                        id=\"input-mobile\"\n                                                        placeholder=\"Mobile Number\"\n                                                        value={mobile}\n                                                        onChange={e => setMobile(e.target.value)}\n                                                        type=\"number\"\n                                                    />\n                                                </FormGroup>\n                                            </Col>\n                                        </Row>\n                                        {/* Address */}\n                                        <div>\n                                            <Row>\n                                                <h6 className=\"heading-small text-muted mb-4\">\n                                                    Temporary Address\n                                            </h6>\n                                                <Col lg=\"12\" >\n                                                    <FormGroup>\n                                                        <label\n                                                            className=\"form-control-label\"\n                                                            htmlFor=\"input-email\"\n                                                        >\n                                                            Temporary Address Line 1\n                                                        </label>\n                                                        <Input\n                                                            className=\"form-control-alternative\"\n                                                            id=\"input-email\"\n                                                            placeholder=\"Temporary Address\"\n                                                            value={tempAddLine1}\n                                                            onChange={e => setTempAddLine1(e.target.value)}\n                                                            type=\"Text\"\n                                                        />\n                                                    </FormGroup>\n                                                </Col>\n\n                                            </Row>\n                                            <Row>\n                                                <Col lg=\"12\" >\n                                                    <FormGroup>\n                                                        <label\n                                                            className=\"form-control-label\"\n                                                            htmlFor=\"input-email\"\n                                                        >\n                                                            Temporary Address Line 2\n                                                        </label>\n                                                        <Input\n                                                            className=\"form-control-alternative\"\n                                                            id=\"input-email\"\n                                                            placeholder=\"Temporary Address Line 2\"\n                                                            value={tempAddLine2}\n                                                            onChange={e => setTempAddLine2(e.target.value)}\n                                                            type=\"Text\"\n                                                        />\n                                                    </FormGroup>\n                                                </Col>\n\n                                            </Row>\n                                            <Row>\n                                                <Col lg=\"6\" >\n                                                    <FormGroup>\n                                                        <label\n                                                            className=\"form-control-label\"\n                                                            htmlFor=\"input-email\"\n                                                        >\n                                                            Area\n                                                        </label>\n                                                        <Input\n                                                            className=\"form-control-alternative\"\n                                                            id=\"input-email\"\n                                                            placeholder=\"Area\"\n                                                            value={tempAddArea}\n                                                            onChange={e => setTempAddArea(e.target.value)}\n                                                            type=\"Text\"\n                                                        />\n                                                    </FormGroup>\n                                                </Col>\n                                                <Col lg=\"6\" >\n                                                    <FormGroup>\n                                                        <label\n                                                            className=\"form-control-label\"\n                                                            htmlFor=\"input-email\"\n                                                        >\n                                                            City\n                                                        </label>\n                                                        <Input\n                                                            className=\"form-control-alternative\"\n                                                            id=\"input-email\"\n                                                            placeholder=\"City\"\n                                                            value={tempAddCity}\n                                                            onChange={e => setTempAddCity(e.target.value)}\n                                                            type=\"Text\"\n                                                        />\n                                                    </FormGroup>\n                                                </Col>\n\n                                            </Row>\n                                            <Row>\n                                                <Col lg=\"6\" >\n                                                    <FormGroup>\n                                                        <label\n                                                            className=\"form-control-label\"\n                                                            htmlFor=\"input-email\"\n                                                        >\n                                                            State\n                                                        </label>\n                                                        <Input\n                                                            className=\"form-control-alternative\"\n                                                            id=\"input-email\"\n                                                            placeholder=\"State\"\n                                                            value={tempAddState}\n                                                            onChange={e => setTempAddState(e.target.value)}\n                                                            type=\"Text\"\n                                                        />\n                                                    </FormGroup>\n                                                </Col>\n                                                <Col lg=\"6\" >\n                                                    <FormGroup>\n                                                        <label\n                                                            className=\"form-control-label\"\n                                                            htmlFor=\"input-email\"\n                                                        >\n                                                            Pin\n                                                        </label>\n                                                        <Input\n                                                            className=\"form-control-alternative\"\n                                                            id=\"input-email\"\n                                                            placeholder=\"Pin Code\"\n                                                            value={tempAddPin}\n                                                            onChange={e => setTempAddPin(e.target.value)}\n                                                            type=\"Text\"\n                                                        />\n                                                    </FormGroup>\n                                                </Col>\n\n                                            </Row>\n                                        </div>\n                                        <div>\n                                            <Row>\n\n                                                <h6 className=\"heading-small text-muted mb-4\">\n                                                    Same As Temporary Address ?\n                                                </h6>\n                                                <Col>\n\n                                                    <FormGroup>\n                                                        <input\n                                                            className=\"checkBox\"\n                                                            onChange={e => sameAddress(e.target.checked)}\n                                                            type=\"CheckBox\"\n                                                        />\n                                                    </FormGroup>\n                                                </Col>\n\n                                            </Row>\n                                        </div>\n                                        <div>\n                                            <Row>\n                                                <h6 className=\"heading-small text-muted mb-4\">\n                                                    Permanent Address\n                                            </h6>\n                                                <Col lg=\"12\" >\n                                                    <FormGroup>\n                                                        <label\n                                                            className=\"form-control-label\"\n                                                            htmlFor=\"input-pal1\"\n                                                        >\n                                                            Permanent Address Line 1\n                                                        </label>\n                                                        <Input\n                                                            className=\"form-control-alternative\"\n                                                            disabled={isTempAddIsPerAdd}\n                                                            id=\"input-pal1\"\n                                                            placeholder=\"Permanent Address\"\n                                                            value={perAddLine1}\n                                                            onChange={e => setPerAddLine1(e.target.value)}\n                                                            type=\"Text\"\n                                                        />\n                                                    </FormGroup>\n                                                </Col>\n\n                                            </Row>\n                                            <Row>\n                                                <Col lg=\"12\" >\n                                                    <FormGroup>\n                                                        <label\n                                                            className=\"form-control-label\"\n                                                            htmlFor=\"input-pal2\"\n                                                        >\n                                                            Permanent Address Line 2\n                                                        </label>\n                                                        <Input\n                                                            className=\"form-control-alternative\"\n                                                            id=\"input-pal2\"\n                                                            disabled={isTempAddIsPerAdd}\n                                                            placeholder=\"Permanent Address Line 2\"\n                                                            value={perAddLine2}\n                                                            onChange={e => setPerAddLine2(e.target.value)}\n                                                            type=\"Text\"\n                                                        />\n                                                    </FormGroup>\n                                                </Col>\n\n                                            </Row>\n                                            <Row>\n                                                <Col lg=\"6\" >\n                                                    <FormGroup>\n                                                        <label\n                                                            className=\"form-control-label\"\n                                                            htmlFor=\"input-pArea\"\n                                                        >\n                                                            Area\n                                                        </label>\n                                                        <Input\n                                                            className=\"form-control-alternative\"\n                                                            id=\"input-pArea\"\n                                                            placeholder=\"Area\"\n                                                            value={perAddArea}\n                                                            onChange={e => setPerAddArea(e.target.value)}\n                                                            disabled={isTempAddIsPerAdd}\n                                                            type=\"Text\"\n                                                        />\n                                                    </FormGroup>\n                                                </Col>\n                                                <Col lg=\"6\" >\n                                                    <FormGroup>\n                                                        <label\n                                                            className=\"form-control-label\"\n                                                            htmlFor=\"input-pCity\"\n                                                        >\n                                                            City\n                                                        </label>\n                                                        <Input\n                                                            className=\"form-control-alternative\"\n                                                            id=\"input-pCity\"\n                                                            disabled={isTempAddIsPerAdd}\n                                                            placeholder=\"City\"\n                                                            value={perAddCity}\n                                                            onChange={e => setPerAddCity(e.target.value)}\n                                                            type=\"Text\"\n                                                        />\n                                                    </FormGroup>\n                                                </Col>\n\n                                            </Row>\n                                            <Row>\n                                                <Col lg=\"6\" >\n                                                    <FormGroup>\n                                                        <label\n                                                            className=\"form-control-label\"\n                                                            htmlFor=\"input-pState\"\n                                                        >\n                                                            State\n                                                        </label>\n                                                        <Input\n                                                            className=\"form-control-alternative\"\n                                                            id=\"input-pState\"\n                                                            disabled={isTempAddIsPerAdd}\n                                                            placeholder=\"State\"\n                                                            value={perAddState}\n                                                            onChange={e => setPerAddState(e.target.value)}\n                                                            type=\"Text\"\n                                                        />\n                                                    </FormGroup>\n                                                </Col>\n                                                <Col lg=\"6\" >\n                                                    <FormGroup>\n                                                        <label\n                                                            className=\"form-control-label\"\n                                                            htmlFor=\"input-pPin\"\n                                                        >\n                                                            Pin\n                                                        </label>\n                                                        <Input\n                                                            className=\"form-control-alternative\"\n                                                            id=\"input-pPin\"\n                                                            disabled={isTempAddIsPerAdd}\n                                                            placeholder=\"Pin Code\"\n                                                            value={perAddPin}\n                                                            onChange={e => setPerAddPin(e.target.value)}\n                                                            type=\"Text\"\n                                                        />\n                                                    </FormGroup>\n                                                </Col>\n\n                                            </Row>\n\n                                        </div>\n\n                                        <div className=\"\">\n                                            <Row>\n                                                <h6 className=\"heading-small text-muted mb-4\">\n                                                    Upload Documents\n                                                </h6>\n                                            </Row>\n                                            <Row>\n\n                                                <Col lg=\"3\">\n                                                    <h6>Uplaod Photo</h6>\n\n                                                    <ImageUploader\n                                                        withIcon={true}\n                                                        buttonText='Choose images'\n                                                        onChange={() => { onDrop('photo') }}\n                                                        singleImage={true}\n                                                        imgExtension={['.jpg', '.gif', '.png', '.gif', '.jpeg']}\n                                                        maxFileSize={412000}\n                                                        withPreview={true}\n                                                    />\n                                                </Col>\n                                                <Col lg=\"3\">\n                                                    <h6>Uplaod Signature</h6>\n                                                    <ImageUploader\n                                                        withIcon={true}\n                                                        buttonText='Choose images'\n                                                        onChange={() => { onDrop('signature') }}\n                                                        singleImage={true}\n                                                        imgExtension={['.jpg', '.gif', '.png', '.gif', '.jpeg']}\n                                                        maxFileSize={412000}\n                                                        withPreview={true}\n                                                    />\n                                                </Col>\n                                                <Col lg=\"3\">\n                                                    <h6>Uplaod Aadhar</h6>\n                                                    <ImageUploader\n                                                        withIcon={true}\n                                                        buttonText='Choose images'\n                                                        onChange={() => { onDrop('aadhar') }}\n                                                        singleImage={true}\n                                                        imgExtension={['.jpg', '.gif', '.png', '.gif', '.jpeg']}\n                                                        maxFileSize={412000}\n                                                        withPreview={true}\n                                                    />\n                                                </Col>\n                                                <Col lg=\"3\">\n                                                    <h6>Uplaod Cast Certificate</h6>\n                                                    <ImageUploader\n                                                        withIcon={true}\n                                                        buttonText='Choose images'\n                                                        onChange={() => { onDrop('castCert') }}\n                                                        singleImage={true}\n                                                        imgExtension={['.jpg', '.gif', '.png', '.gif', '.jpeg']}\n                                                        maxFileSize={412000}\n                                                        withPreview={true}\n                                                    />\n                                                </Col>\n                                            </Row>\n\n                                        </div>\n                                        <Row>\n                                            <Col lg='12'>\n                                                <div className=\"text-center\">\n                                                    <Button className=\"my-4\" color=\"primary\" type=\"submit\" onClick={(e) => RegUser(e)}>\n                                                        Register And Approve\n                                                    </Button>\n                                                </div>\n                                            </Col>\n                                        </Row>\n\n                                    </div>\n                                </Form>\n                            </CardBody>\n                        </Card>\n                    </div>\n                </Row>\n            </Container>\n        </>\n    )\n}\n\n\nexport default RegisterUser"]},"metadata":{},"sourceType":"module"}