[{"/home/yash/RECT/RECT_ADMIN/front-end/src/index.js":"1","/home/yash/RECT/RECT_ADMIN/front-end/src/components/PrivateRoute/PrivateRoute.js":"2","/home/yash/RECT/RECT_ADMIN/front-end/src/components/PrivateRoute/AuthRoutes.js":"3","/home/yash/RECT/RECT_ADMIN/front-end/src/layouts/Auth.js":"4","/home/yash/RECT/RECT_ADMIN/front-end/src/layouts/Admin.js":"5","/home/yash/RECT/RECT_ADMIN/front-end/src/routes.js":"6","/home/yash/RECT/RECT_ADMIN/front-end/src/components/Navbars/AuthNavbar.js":"7","/home/yash/RECT/RECT_ADMIN/front-end/src/components/Navbars/AdminNavbar.js":"8","/home/yash/RECT/RECT_ADMIN/front-end/src/components/Footers/AuthFooter.js":"9","/home/yash/RECT/RECT_ADMIN/front-end/src/components/Footers/AdminFooter.js":"10","/home/yash/RECT/RECT_ADMIN/front-end/src/components/Sidebar/Sidebar.js":"11","/home/yash/RECT/RECT_ADMIN/front-end/src/views/examples/ConfirmEmail.js":"12","/home/yash/RECT/RECT_ADMIN/front-end/src/views/examples/EditProfile.js":"13","/home/yash/RECT/RECT_ADMIN/front-end/src/views/examples/UsersTable.js":"14","/home/yash/RECT/RECT_ADMIN/front-end/src/views/examples/ResetPassword.js":"15","/home/yash/RECT/RECT_ADMIN/front-end/src/views/examples/ConfirmPassword.js":"16","/home/yash/RECT/RECT_ADMIN/front-end/src/views/examples/ResetPasswordSuccess.js":"17","/home/yash/RECT/RECT_ADMIN/front-end/src/network/ApiAxios.js":"18","/home/yash/RECT/RECT_ADMIN/front-end/src/views/Index.js":"19","/home/yash/RECT/RECT_ADMIN/front-end/src/views/examples/Profile.js":"20","/home/yash/RECT/RECT_ADMIN/front-end/src/views/examples/Maps.js":"21","/home/yash/RECT/RECT_ADMIN/front-end/src/views/examples/Register.js":"22","/home/yash/RECT/RECT_ADMIN/front-end/src/views/examples/RegisterUser.js":"23","/home/yash/RECT/RECT_ADMIN/front-end/src/views/examples/Login.js":"24","/home/yash/RECT/RECT_ADMIN/front-end/src/views/examples/Tables.js":"25","/home/yash/RECT/RECT_ADMIN/front-end/src/views/examples/Icons.js":"26","/home/yash/RECT/RECT_ADMIN/front-end/src/config.js":"27","/home/yash/RECT/RECT_ADMIN/front-end/src/components/Headers/EditHeader.js":"28","/home/yash/RECT/RECT_ADMIN/front-end/src/components/Headers/Header.js":"29","/home/yash/RECT/RECT_ADMIN/front-end/src/components/Headers/UserHeader.js":"30","/home/yash/RECT/RECT_ADMIN/front-end/src/variables/charts.js":"31","/home/yash/RECT/RECT_ADMIN/front-end/src/views/examples/Exam.js":"32","/home/yash/SKTOCARRI/front-end/src/index.js":"33","/home/yash/SKTOCARRI/front-end/src/components/PrivateRoute/AuthRoutes.js":"34","/home/yash/SKTOCARRI/front-end/src/components/PrivateRoute/PrivateRoute.js":"35","/home/yash/SKTOCARRI/front-end/src/layouts/Admin.js":"36","/home/yash/SKTOCARRI/front-end/src/layouts/Auth.js":"37","/home/yash/SKTOCARRI/front-end/src/routes.js":"38","/home/yash/SKTOCARRI/front-end/src/components/Navbars/AdminNavbar.js":"39","/home/yash/SKTOCARRI/front-end/src/components/Navbars/AuthNavbar.js":"40","/home/yash/SKTOCARRI/front-end/src/components/Footers/AuthFooter.js":"41","/home/yash/SKTOCARRI/front-end/src/components/Footers/AdminFooter.js":"42","/home/yash/SKTOCARRI/front-end/src/components/Sidebar/Sidebar.js":"43","/home/yash/SKTOCARRI/front-end/src/views/examples/ConfirmEmail.js":"44","/home/yash/SKTOCARRI/front-end/src/views/examples/EditProfile.js":"45","/home/yash/SKTOCARRI/front-end/src/views/examples/UsersTable.js":"46","/home/yash/SKTOCARRI/front-end/src/views/examples/ResetPassword.js":"47","/home/yash/SKTOCARRI/front-end/src/views/examples/ResetPasswordSuccess.js":"48","/home/yash/SKTOCARRI/front-end/src/views/examples/ConfirmPassword.js":"49","/home/yash/SKTOCARRI/front-end/src/network/ApiAxios.js":"50","/home/yash/SKTOCARRI/front-end/src/views/Index.js":"51","/home/yash/SKTOCARRI/front-end/src/views/examples/Profile.js":"52","/home/yash/SKTOCARRI/front-end/src/views/examples/Maps.js":"53","/home/yash/SKTOCARRI/front-end/src/views/examples/RegisterUser.js":"54","/home/yash/SKTOCARRI/front-end/src/views/examples/Login.js":"55","/home/yash/SKTOCARRI/front-end/src/views/examples/Register.js":"56","/home/yash/SKTOCARRI/front-end/src/views/examples/Tables.js":"57","/home/yash/SKTOCARRI/front-end/src/views/examples/Icons.js":"58","/home/yash/SKTOCARRI/front-end/src/views/examples/Exam.js":"59","/home/yash/SKTOCARRI/front-end/src/config.js":"60","/home/yash/SKTOCARRI/front-end/src/components/Headers/EditHeader.js":"61","/home/yash/SKTOCARRI/front-end/src/components/Headers/Header.js":"62","/home/yash/SKTOCARRI/front-end/src/components/Headers/UserHeader.js":"63","/home/yash/SKTOCARRI/front-end/src/variables/charts.js":"64","/home/yash/SKTOCARRI/front-end/src/views/examples/ReportTables.js":"65"},{"size":784,"mtime":1617707259013,"results":"66","hashOfConfig":"67"},{"size":381,"mtime":1617707259013,"results":"68","hashOfConfig":"67"},{"size":381,"mtime":1617707259013,"results":"69","hashOfConfig":"67"},{"size":3030,"mtime":1617707259013,"results":"70","hashOfConfig":"67"},{"size":2529,"mtime":1617707259013,"results":"71","hashOfConfig":"67"},{"size":3396,"mtime":1618039082585,"results":"72","hashOfConfig":"67"},{"size":3057,"mtime":1617707259013,"results":"73","hashOfConfig":"67"},{"size":5612,"mtime":1617707259013,"results":"74","hashOfConfig":"67"},{"size":3010,"mtime":1617707259009,"results":"75","hashOfConfig":"67"},{"size":2890,"mtime":1617707259009,"results":"76","hashOfConfig":"67"},{"size":9910,"mtime":1617707259013,"results":"77","hashOfConfig":"67"},{"size":1404,"mtime":1617707259017,"results":"78","hashOfConfig":"67"},{"size":6278,"mtime":1617707259017,"results":"79","hashOfConfig":"67"},{"size":6891,"mtime":1618580128791,"results":"80","hashOfConfig":"67"},{"size":5006,"mtime":1617707259017,"results":"81","hashOfConfig":"67"},{"size":4333,"mtime":1617707259017,"results":"82","hashOfConfig":"67"},{"size":869,"mtime":1617707259021,"results":"83","hashOfConfig":"67"},{"size":2204,"mtime":1617715832248,"results":"84","hashOfConfig":"67"},{"size":11801,"mtime":1617707259017,"results":"85","hashOfConfig":"67"},{"size":25107,"mtime":1617707259017,"results":"86","hashOfConfig":"67"},{"size":3455,"mtime":1617707259017,"results":"87","hashOfConfig":"67"},{"size":8188,"mtime":1617707259017,"results":"88","hashOfConfig":"67"},{"size":36833,"mtime":1617720326792,"results":"89","hashOfConfig":"67"},{"size":4702,"mtime":1617715914086,"results":"90","hashOfConfig":"67"},{"size":68186,"mtime":1617707259021,"results":"91","hashOfConfig":"67"},{"size":121766,"mtime":1617707259017,"results":"92","hashOfConfig":"67"},{"size":150,"mtime":1617707259013,"results":"93","hashOfConfig":"67"},{"size":2476,"mtime":1617707259013,"results":"94","hashOfConfig":"67"},{"size":6283,"mtime":1617707259013,"results":"95","hashOfConfig":"67"},{"size":2749,"mtime":1617707259013,"results":"96","hashOfConfig":"67"},{"size":10633,"mtime":1617707259013,"results":"97","hashOfConfig":"67"},{"size":2175,"mtime":1618039502787,"results":"98","hashOfConfig":"67"},{"size":784,"mtime":1618751793115,"results":"99","hashOfConfig":"100"},{"size":381,"mtime":1618751793111,"results":"101","hashOfConfig":"100"},{"size":381,"mtime":1618751793111,"results":"102","hashOfConfig":"100"},{"size":2519,"mtime":1618753218741,"results":"103","hashOfConfig":"100"},{"size":3030,"mtime":1618751793115,"results":"104","hashOfConfig":"100"},{"size":3119,"mtime":1618756277255,"results":"105","hashOfConfig":"100"},{"size":5612,"mtime":1618751793111,"results":"106","hashOfConfig":"100"},{"size":3076,"mtime":1618752575109,"results":"107","hashOfConfig":"100"},{"size":3010,"mtime":1618751793107,"results":"108","hashOfConfig":"100"},{"size":2890,"mtime":1618751793103,"results":"109","hashOfConfig":"100"},{"size":9910,"mtime":1618751793115,"results":"110","hashOfConfig":"100"},{"size":1404,"mtime":1618751793119,"results":"111","hashOfConfig":"100"},{"size":6278,"mtime":1618751793119,"results":"112","hashOfConfig":"100"},{"size":6651,"mtime":1618756883823,"results":"113","hashOfConfig":"100"},{"size":5006,"mtime":1618751793119,"results":"114","hashOfConfig":"100"},{"size":869,"mtime":1618751793119,"results":"115","hashOfConfig":"100"},{"size":4333,"mtime":1618751793119,"results":"116","hashOfConfig":"100"},{"size":2204,"mtime":1618751793115,"results":"117","hashOfConfig":"100"},{"size":11798,"mtime":1618753441110,"results":"118","hashOfConfig":"100"},{"size":25107,"mtime":1618751793119,"results":"119","hashOfConfig":"100"},{"size":3455,"mtime":1618751793119,"results":"120","hashOfConfig":"100"},{"size":36833,"mtime":1618751793119,"results":"121","hashOfConfig":"100"},{"size":4702,"mtime":1618752903909,"results":"122","hashOfConfig":"100"},{"size":8188,"mtime":1618751793119,"results":"123","hashOfConfig":"100"},{"size":68186,"mtime":1618751793123,"results":"124","hashOfConfig":"100"},{"size":121766,"mtime":1618751793119,"results":"125","hashOfConfig":"100"},{"size":5060,"mtime":1618757395557,"results":"126","hashOfConfig":"100"},{"size":150,"mtime":1618751793115,"results":"127","hashOfConfig":"100"},{"size":2471,"mtime":1618756194192,"results":"128","hashOfConfig":"100"},{"size":6274,"mtime":1618753302612,"results":"129","hashOfConfig":"100"},{"size":2744,"mtime":1618756157528,"results":"130","hashOfConfig":"100"},{"size":10633,"mtime":1618751793115,"results":"131","hashOfConfig":"100"},{"size":6902,"mtime":1618756201331,"results":"132","hashOfConfig":"100"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},"qdh0p5",{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"135"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"135"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"135"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"135"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"166","messages":"167","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"135"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"135"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"135"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"135"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"135"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"135"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":1,"source":"190","usedDeprecatedRules":"135"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"135"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"135"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"135"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"135"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},"7vfq3a",{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"215"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"215"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"215"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"215"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"215"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"215"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"254","usedDeprecatedRules":"215"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"215"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":1,"source":"190","usedDeprecatedRules":"215"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"215"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"215"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"276"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"281"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"286"},"/home/yash/RECT/RECT_ADMIN/front-end/src/index.js",[],["287","288"],"/home/yash/RECT/RECT_ADMIN/front-end/src/components/PrivateRoute/PrivateRoute.js",[],"/home/yash/RECT/RECT_ADMIN/front-end/src/components/PrivateRoute/AuthRoutes.js",[],"/home/yash/RECT/RECT_ADMIN/front-end/src/layouts/Auth.js",[],"/home/yash/RECT/RECT_ADMIN/front-end/src/layouts/Admin.js",[],"/home/yash/RECT/RECT_ADMIN/front-end/src/routes.js",["289","290","291"],"/*!\n\n=========================================================\n* Argon Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport Index from \"views/Index.js\";\nimport Profile from \"views/examples/Profile.js\";\nimport Maps from \"views/examples/Maps.js\";\nimport Register from \"views/examples/Register.js\";\nimport RegisterUser from \"views/examples/RegisterUser.js\";\nimport Login from \"views/examples/Login.js\";\nimport Tables from \"views/examples/Tables.js\";\nimport Icons from \"views/examples/Icons.js\";\nimport ConfirmEmail from \"./views/examples/ConfirmEmail\";\nimport EditProfile from \"./views/examples/EditProfile\";\nimport UsersTable from \"./views/examples/UsersTable\";\nimport ResetPassword from \"./views/examples/ResetPassword\";\nimport ConfirmPassword from \"./views/examples/ConfirmPassword\";\nimport ResetPasswordSuccess from \"./views/examples/ResetPasswordSuccess\";\nimport Exam from \"views/examples/Exam\";\n\nvar routes = [\n  {\n    path: \"/index\",\n    name: \"Dashboard\",\n    icon: \"ni ni-tv-2 text-primary\",\n    component: Index,\n    layout: \"/admin\",\n    api: false\n  },\n  {\n    path: \"/user-profile\",\n    name: \"User Profile\",\n    icon: \"ni ni-single-02 text-yellow\",\n    component: Profile,\n    layout: \"/admin\",\n    api: true\n  },\n  {\n    path: \"/login\",\n    name: \"Login\",\n    icon: \"ni ni-key-25 text-info\",\n    component: Login,\n    layout: \"/auth\",\n    api: true\n  },\n  {\n    path: \"/register\",\n    name: \"Register\",\n    icon: \"ni ni-circle-08 text-pink\",\n    component: Register,\n    layout: \"/auth\",\n    api: true\n  },\n  {\n    path: \"/confirm-email/:id\",\n    name: \"Confirm Email\",\n    icon: \"ni ni-check-bold text-green\",\n    component: ConfirmEmail,\n    layout: \"/auth\",\n    api: true\n  },\n  {\n    path: \"/edit-profile\",\n    name: \"Edit Profile\",\n    icon: \"ni ni-ruler-pencil text-info\",\n    component: EditProfile,\n    layout: \"/admin\",\n    api: true\n  }, {\n    path: \"/create-exam\",\n    name: \"Create Exam\",\n    icon: \"ni ni-ruler-pencil text-info\",\n    component: Exam,\n    layout: \"/admin\",\n    api: true\n  },\n  {\n    path: \"/register-user\",\n    name: \"Register User\",\n    icon: \"ni ni-single-02 text-info\",\n    component: RegisterUser,\n    layout: \"/admin\",\n    api: true\n  },\n  {\n    path: \"/users\",\n    name: \"Users\",\n    icon: \"ni ni-folder-17 text-pink\",\n    component: UsersTable,\n    layout: \"/admin\",\n    api: true\n  },\n  {\n    path: \"/reset-password\",\n    name: \"Reset Password\",\n    icon: \"ni ni-folder-17 text-pink\",\n    component: ResetPassword,\n    layout: \"/auth\",\n    api: true\n  },\n  {\n    path: \"/confirm-password/:id\",\n    name: \"Confirm Password\",\n    icon: \"ni ni-folder-17 text-pink\",\n    component: ConfirmPassword,\n    layout: \"/auth\",\n    api: true\n  },\n  {\n    path: \"/reset-success\",\n    name: \"Password Reset Confirmed\",\n    icon: \"ni ni-folder-17 text-pink\",\n    component: ResetPasswordSuccess,\n    layout: \"/auth\",\n    api: false\n  }\n];\nexport default routes;\n","/home/yash/RECT/RECT_ADMIN/front-end/src/components/Navbars/AuthNavbar.js",[],"/home/yash/RECT/RECT_ADMIN/front-end/src/components/Navbars/AdminNavbar.js",["292","293","294","295","296","297"],"/*!\n\n=========================================================\n* Argon Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\n// reactstrap components\nimport {\n    DropdownMenu,\n    DropdownItem,\n    UncontrolledDropdown,\n    DropdownToggle,\n    Form,\n    FormGroup,\n    InputGroupAddon,\n    InputGroupText,\n    Input,\n    InputGroup,\n    Navbar,\n    Nav,\n    Container,\n    Media\n} from \"reactstrap\";\nimport { logout } from \"../../network/ApiAxios\";\n\nconst AdminNavbar = props => {\n\n    let username = JSON.parse(localStorage.getItem(\"admin\")).name;\n\n    const logOut = async () => {\n        const token = localStorage.getItem(\"token\");\n        if (token) {\n            const response = await logout(token);\n            const { data } = response;\n            if (data.success) {\n                localStorage.removeItem(\"token\");\n                localStorage.removeItem(\"admin\");\n                props.history.push(\"/auth/login\");\n            }\n        }\n    }\n\n    return (\n        <>\n            <Navbar className=\"navbar-top navbar-dark\" expand=\"md\" id=\"navbar-main\">\n                <Container fluid>\n                    <Link\n                        className=\"h4 mb-0 text-white text-uppercase d-none d-lg-inline-block\"\n                        to=\"/\"\n                    >\n                        {props.brandText}\n                    </Link>\n                    {/* Search Bar */}\n                    {/* <Form className=\"navbar-search navbar-search-dark form-inline mr-3 d-none d-md-flex ml-lg-auto\">\n                        <FormGroup className=\"mb-0\">\n                            <InputGroup className=\"input-group-alternative\">\n                                <InputGroupAddon addonType=\"prepend\">\n                                    <InputGroupText>\n                                        <i className=\"fas fa-search\"/>\n                                    </InputGroupText>\n                                </InputGroupAddon>\n                                <Input placeholder=\"Search\" type=\"text\"/>\n                            </InputGroup>\n                        </FormGroup>\n                    </Form> */}\n                    <Nav className=\"align-items-center d-none d-md-flex\" navbar>\n                        <UncontrolledDropdown nav>\n                            <DropdownToggle className=\"pr-0\" nav>\n                                <Media className=\"align-items-center\">\n                                    <span className=\"avatar avatar-sm rounded-circle\">\n                                        <img\n                                            alt=\"...\"\n                                            src={require(\"assets/img/theme/team-4-800x800.jpg\").default}\n                                        />\n                                    </span>\n                                    <Media className=\"ml-2 d-none d-lg-block\">\n                                        <span className=\"mb-0 text-sm font-weight-bold\">\n                                            {username}\n                                        </span>\n                                    </Media>\n                                </Media>\n                            </DropdownToggle>\n                            <DropdownMenu className=\"dropdown-menu-arrow\" right>\n                                <DropdownItem className=\"noti-title\" header tag=\"div\">\n                                    <h6 className=\"text-overflow m-0\">Welcome!</h6>\n                                </DropdownItem>\n                                <DropdownItem to=\"/admin/user-profile\" tag={Link}>\n                                    <i className=\"ni ni-single-02\" />\n                                    <span>My profile</span>\n                                </DropdownItem>\n                                <DropdownItem to=\"/admin/user-profile\" tag={Link}>\n                                    <i className=\"ni ni-settings-gear-65\" />\n                                    <span>Settings</span>\n                                </DropdownItem>\n                                <DropdownItem to=\"/admin/user-profile\" tag={Link}>\n                                    <i className=\"ni ni-calendar-grid-58\" />\n                                    <span>Activity</span>\n                                </DropdownItem>\n                                <DropdownItem to=\"/admin/user-profile\" tag={Link}>\n                                    <i className=\"ni ni-support-16\" />\n                                    <span>Support</span>\n                                </DropdownItem>\n                                <DropdownItem divider />\n                                <DropdownItem href=\"#pablo\" onClick={logOut}>\n                                    <i className=\"ni ni-user-run\" />\n                                    <span>Logout</span>\n                                </DropdownItem>\n                            </DropdownMenu>\n                        </UncontrolledDropdown>\n                    </Nav>\n                </Container>\n            </Navbar>\n        </>\n    );\n};\n\nexport default AdminNavbar;\n","/home/yash/RECT/RECT_ADMIN/front-end/src/components/Footers/AuthFooter.js",[],"/home/yash/RECT/RECT_ADMIN/front-end/src/components/Footers/AdminFooter.js",[],"/home/yash/RECT/RECT_ADMIN/front-end/src/components/Sidebar/Sidebar.js",[],"/home/yash/RECT/RECT_ADMIN/front-end/src/views/examples/ConfirmEmail.js",["298"],"import React, {useEffect, useState} from 'react';\nimport { useParams } from 'react-router-dom';\nimport {confirmRegister} from \"../../network/ApiAxios\";\nimport {Card, CardBody, Col} from \"reactstrap\";\n\nconst ConfirmEmail = props => {\n\n    const {id} = useParams();\n    const [valid, setValid] = useState(true);\n\n    useEffect(() => {\n        if (!id) {\n            setValid(false);\n        } else {\n            const runAsync = async () => {\n                const response = await confirmRegister(id);\n                const {data} = response;\n                console.log(data);\n                if (!data.success) {\n                    setValid(false);\n                } else {\n                    setTimeout(() => {\n                        props.history.push('/auth/login');\n                    }, 5000);\n                }\n            }\n            runAsync();\n        }\n    }, [])\n\n    return (\n        <>\n            <Col lg=\"6\" md=\"8\">\n                <Card className=\"bg-secondary shadow border-0\">\n                    <CardBody className=\"px-lg-5 py-lg-5\">\n                        <div className=\"text-center mb-4\">\n                            <h1>{valid ? \"Email confirmed! You will be redirected to login...\" : \"Something went wrong!\"}</h1>\n                        </div>\n                    </CardBody>\n                </Card>\n            </Col>\n        </>\n    )\n};\n\nexport default ConfirmEmail;\n","/home/yash/RECT/RECT_ADMIN/front-end/src/views/examples/EditProfile.js",["299"],"/*!\n\n=========================================================\n* Argon Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React, { useEffect, useState } from \"react\";\n\n// reactstrap components\nimport {\n    Button,\n    Card,\n    CardHeader,\n    CardBody,\n    FormGroup,\n    Form,\n    Input,\n    Container,\n    Row,\n    Col\n} from \"reactstrap\";\n// core components\nimport UserHeader from \"components/Headers/UserHeader.js\";\nimport EditHeader from \"../../components/Headers/EditHeader\";\nimport { edit } from \"../../network/ApiAxios\";\n\nconst EditProfile = props => {\n\n\n    let user = JSON.parse(localStorage.getItem(\"admin\"));\n\n    const [name, setName] = useState(user.name);\n    const [email, setEmail] = useState(user.email);\n    const [isTestUser, setIsTestUser] = useState(false);\n\n    useEffect(() => {\n        if (JSON.parse(localStorage.getItem(\"admin\")).email === \"test@test.com\") {\n            setIsTestUser(true);\n        }\n    }, []);\n\n    const editUser = async () => {\n        const response = await edit(user._id, name, email);\n        const { data } = response;\n        if (data.success) {\n            user = { ...user, name, email }\n            localStorage.setItem(\"admin\", JSON.stringify(user));\n            props.history.push(\"/admin/user-profile\");\n        }\n    }\n\n    return (\n        <>\n            <EditHeader />\n            {/* Page content */}\n            <Container className=\"mt--7\" fluid>\n                <Row>\n                    <div className=\"col\">\n                        <Card className=\"bg-secondary shadow\">\n                            <CardHeader className=\"bg-white border-0\">\n                                <Row className=\"align-items-center\">\n                                    <Col xs=\"8\">\n                                        <h3 className=\"mb-0\">My account</h3>\n                                        {isTestUser ? <h5>You are not allowed to edit the test user. Create another user to test this functionality</h5> : null}\n                                    </Col>\n                                    <Col className=\"text-right\" xs=\"4\">\n                                        <Button\n                                            color=\"primary\"\n                                            href=\"#pablo\"\n                                            onClick={editUser}\n                                            size=\"sm\"\n                                            disabled={isTestUser}\n                                        >\n                                            Save\n                                        </Button>\n                                    </Col>\n                                </Row>\n                            </CardHeader>\n                            <CardBody>\n                                <Form>\n                                    <h6 className=\"heading-small text-muted mb-4\">\n                                        User information\n                                    </h6>\n                                    <div className=\"pl-lg-4\">\n                                        <Row>\n                                            <Col lg=\"6\">\n                                                <FormGroup>\n                                                    <label\n                                                        className=\"form-control-label\"\n                                                        htmlFor=\"input-username\"\n                                                    >\n                                                        Username\n                                                    </label>\n                                                    <Input\n                                                        className=\"form-control-alternative\"\n                                                        value={name}\n                                                        id=\"input-username\"\n                                                        placeholder=\"Username\"\n                                                        onChange={e => setName(e.target.value)}\n                                                        type=\"text\"\n                                                    />\n                                                </FormGroup>\n                                            </Col>\n                                            <Col lg=\"6\">\n                                                <FormGroup>\n                                                    <label\n                                                        className=\"form-control-label\"\n                                                        htmlFor=\"input-email\"\n                                                    >\n                                                        Email address\n                                                    </label>\n                                                    <Input\n                                                        className=\"form-control-alternative\"\n                                                        id=\"input-email\"\n                                                        value={email}\n                                                        onChange={e => setEmail(e.target.value)}\n                                                        type=\"email\"\n                                                    />\n                                                </FormGroup>\n                                            </Col>\n                                        </Row>\n                                    </div>\n                                </Form>\n                            </CardBody>\n                        </Card>\n                    </div>\n                </Row>\n            </Container>\n        </>\n    );\n}\n\nexport default EditProfile;\n","/home/yash/RECT/RECT_ADMIN/front-end/src/views/examples/UsersTable.js",["300","301","302","303","304","305","306"],"/home/yash/RECT/RECT_ADMIN/front-end/src/views/examples/ResetPassword.js",["307","308","309"],"/*!\n\n=========================================================\n* Argon Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React, {useState} from \"react\";\n\n// reactstrap components\nimport {\n    Button,\n    Card,\n    CardHeader,\n    CardBody,\n    FormGroup,\n    Form,\n    Input,\n    InputGroupAddon,\n    InputGroupText,\n    InputGroup,\n    Row,\n    Col\n} from \"reactstrap\";\nimport {forgotPassword, login} from \"../../network/ApiAxios\";\nimport Toast from \"react-bootstrap/Toast\";\nimport config from \"../../config\";\n\nconst ResetPassword = props => {\n\n    const [email, setEmail] = useState(\"\");\n    const [error, setError] = useState(\"\");\n    const [showToast, setShowToast] = useState(false);\n    const [toastMessage, setToastMessage] = useState(\"Email sent! Check it to reset your password.\");\n    const [userID, setUserID] = useState(null);\n\n    const sendEmail = async () => {\n        const response = await forgotPassword(email);\n        const {data} = response;\n        if (data.success) {\n            console.log(data);\n            if (config.DEMO) {\n                setToastMessage(\"This is a demo, so we will not send you an email. Instead, click on this link to reset your password:\")\n                setUserID(data.userID);\n            }\n            setShowToast(true);\n        } else {\n            setError(data.errors[0].msg);\n        }\n    }\n\n    return (\n        <>\n            <div\n                aria-live=\"polite\"\n                aria-atomic=\"true\"\n                style={{\n                    position: 'fixed',\n                    minHeight: '100px',\n                    width: \"35%\",\n                    right: 10,\n                    bottom: 100,\n                    zIndex: 50\n                }}\n            >\n                <Toast style={{\n                    position: 'absolute',\n                    top: 0,\n                    right: 0,\n                    backgroundColor: \"white\",\n                    padding: 10,\n                    borderRadius: 10\n                }} onClose={() => setShowToast(false)} show={showToast} delay={5000} autohide={!config.DEMO}>\n                    <Toast.Header>\n                        <img style={{height: \"30px\", width: \"100px\"}} src={require(\"assets/img/brand/argon-react.png\").default}  alt=\"...\"/>\n                    </Toast.Header>\n                    <Toast.Body>\n                        {toastMessage}\n                        {config.DEMO ?\n                            <a href={config.DOMAIN_NAME + '/auth/confirm-password/' + userID}>\n                                {config.DOMAIN_NAME + '/auth/confirm-password/' + userID}\n                            </a> : null}\n                    </Toast.Body>\n                </Toast>\n            </div>\n            <Col lg=\"5\" md=\"7\">\n                <Card className=\"bg-secondary shadow border-0\">\n                    <CardBody className=\"px-lg-5 py-lg-5\">\n                        <Form role=\"form\">\n                            <FormGroup className=\"mb-3\">\n                                <InputGroup className=\"input-group-alternative\">\n                                    <InputGroupAddon addonType=\"prepend\">\n                                        <InputGroupText>\n                                            <i className=\"ni ni-email-83\"/>\n                                        </InputGroupText>\n                                    </InputGroupAddon>\n                                    <Input placeholder=\"Email\" type=\"email\" autoComplete=\"email\" value={email}\n                                           onChange={e => setEmail(e.target.value)}/>\n                                </InputGroup>\n                            </FormGroup>\n                            {error ?\n                                <div className=\"text-muted font-italic\">\n                                    <small>\n                                        error:{\" \"}\n                                        <span className=\"text-red font-weight-700\">{error}</span>\n                                    </small>\n                                </div> : null }\n                            <div className=\"text-center\">\n                                <Button className=\"my-4\" color=\"primary\" type=\"button\" onClick={sendEmail}>\n                                    Reset Password\n                                </Button>\n                            </div>\n                        </Form>\n                    </CardBody>\n                </Card>\n            </Col>\n        </>\n    );\n}\n\nexport default ResetPassword;\n","/home/yash/RECT/RECT_ADMIN/front-end/src/views/examples/ConfirmPassword.js",["310","311","312","313","314"],"/*!\n\n=========================================================\n* Argon Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React, {useState} from \"react\";\n\n// reactstrap components\nimport {\n    Button,\n    Card,\n    CardHeader,\n    CardBody,\n    FormGroup,\n    Form,\n    Input,\n    InputGroupAddon,\n    InputGroupText,\n    InputGroup,\n    Row,\n    Col\n} from \"reactstrap\";\nimport {confirmReset, forgotPassword, login} from \"../../network/ApiAxios\";\nimport Toast from \"react-bootstrap/Toast\";\nimport {useParams} from \"react-router-dom\";\n\nconst ConfirmPassword = props => {\n\n    const {id} = useParams();\n\n    const [password, setPassword] = useState(\"\");\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\n    const [error, setError] = useState(\"\");\n\n    const confirm = async () => {\n        if (password !== confirmPassword) {\n            setError(\"Passwords have to match\");\n            return;\n        }\n        const response = await confirmReset(id, password);\n        const {data} = response;\n        if (data.success) {\n            props.history.push(\"/auth/reset-success\");\n        } else {\n            setError(data.msg);\n        }\n    }\n\n    return (\n        <>\n            <Col lg=\"5\" md=\"7\">\n                <Card className=\"bg-secondary shadow border-0\">\n                    <CardBody className=\"px-lg-5 py-lg-5\">\n                        <Form role=\"form\">\n                            <FormGroup>\n                                <InputGroup className=\"input-group-alternative\">\n                                    <InputGroupAddon addonType=\"prepend\">\n                                        <InputGroupText>\n                                            <i className=\"ni ni-lock-circle-open\"/>\n                                        </InputGroupText>\n                                    </InputGroupAddon>\n                                    <Input placeholder=\"Password\" type=\"password\" autoComplete=\"new-password\" value={password}\n                                           onChange={e => setPassword(e.target.value)}\n                                    />\n                                </InputGroup>\n                            </FormGroup>\n                            <FormGroup>\n                                <InputGroup className=\"input-group-alternative\">\n                                    <InputGroupAddon addonType=\"prepend\">\n                                        <InputGroupText>\n                                            <i className=\"ni ni-lock-circle-open\"/>\n                                        </InputGroupText>\n                                    </InputGroupAddon>\n                                    <Input placeholder=\"Confirm Password\" type=\"password\" autoComplete=\"new-password\" value={confirmPassword}\n                                           onChange={e => setConfirmPassword(e.target.value)}\n                                    />\n                                </InputGroup>\n                            </FormGroup>\n                            {error ?\n                                <div className=\"text-muted font-italic\">\n                                    <small>\n                                        error:{\" \"}\n                                        <span className=\"text-red font-weight-700\">{error}</span>\n                                    </small>\n                                </div> : null }\n                            <div className=\"text-center\">\n                                <Button className=\"my-4\" color=\"primary\" type=\"button\" onClick={confirm}>\n                                    Reset Password\n                                </Button>\n                            </div>\n                        </Form>\n                    </CardBody>\n                </Card>\n            </Col>\n        </>\n    );\n}\n\nexport default ConfirmPassword;\n","/home/yash/RECT/RECT_ADMIN/front-end/src/views/examples/ResetPasswordSuccess.js",["315","316","317","318"],"import React, {useEffect, useState} from 'react';\nimport { useParams } from 'react-router-dom';\nimport {confirmRegister} from \"../../network/ApiAxios\";\nimport {Card, CardBody, Col} from \"reactstrap\";\n\nconst ResetPasswordSuccess = props => {\n\n    useEffect(() => {\n        setTimeout(() => {\n            props.history.push(\"/auth/login\");\n        }, 5000);\n    }, [])\n\n    return (\n        <>\n            <Col lg=\"6\" md=\"8\">\n                <Card className=\"bg-secondary shadow border-0\">\n                    <CardBody className=\"px-lg-5 py-lg-5\">\n                        <div className=\"text-center mb-4\">\n                            <h1>Password reset confirmed! You will be redirected to login...</h1>\n                        </div>\n                    </CardBody>\n                </Card>\n            </Col>\n        </>\n    )\n};\n\nexport default ResetPasswordSuccess;\n","/home/yash/RECT/RECT_ADMIN/front-end/src/network/ApiAxios.js",[],"/home/yash/RECT/RECT_ADMIN/front-end/src/views/Index.js",["319","320","321"],"import React from \"react\";\n// node.js library that concatenates classes (strings)\nimport classnames from \"classnames\";\n// javascipt plugin for creating charts\nimport Chart from \"chart.js\";\n// react plugin used to create charts\nimport { Line, Bar } from \"react-chartjs-2\";\n// reactstrap components\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  NavItem,\n  NavLink,\n  Nav,\n  Progress,\n  Table,\n  Container,\n  Row,\n  Col\n} from \"reactstrap\";\n\n// core components\nimport {\n  chartOptions,\n  parseOptions,\n  chartExample1,\n  chartExample2\n} from \"variables/charts.js\";\n\nimport Header from \"components/Headers/Header.js\";\n\nclass Index extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeNav: 1,\n      chartExample1Data: \"data1\"\n    };\n    if (window.Chart) {\n      parseOptions(Chart, chartOptions());\n    }\n  }\n  toggleNavs = (e, index) => {\n    e.preventDefault();\n    this.setState({\n      activeNav: index,\n      chartExample1Data:\n        this.state.chartExample1Data === \"data1\" ? \"data2\" : \"data1\"\n    });\n  };\n  render() {\n    return (\n      <>\n        <Header />\n        {/* Page content */}\n        <Container className=\"mt--7\" fluid>\n          <Row>\n            <Col className=\"mb-5 mb-xl-0\" xl=\"8\">\n              <Card className=\"bg-gradient-default shadow\">\n                <CardHeader className=\"bg-transparent\">\n                  <Row className=\"align-items-center\">\n                    <div className=\"col\">\n                      <h6 className=\"text-uppercase text-light ls-1 mb-1\">\n                        Overview\n                      </h6>\n                      <h2 className=\"text-white mb-0\">User Ratio</h2>\n                    </div>\n                    <div className=\"col\">\n                      <Nav className=\"justify-content-end\" pills>\n                        <NavItem>\n                          <NavLink\n                            className={classnames(\"py-2 px-3\", {\n                              active: this.state.activeNav === 1\n                            })}\n                            href=\"#pablo\"\n                            onClick={e => this.toggleNavs(e, 1)}\n                          >\n                            <span className=\"d-none d-md-block\">Month</span>\n                            <span className=\"d-md-none\">M</span>\n                          </NavLink>\n                        </NavItem>\n                        <NavItem>\n                          <NavLink\n                            className={classnames(\"py-2 px-3\", {\n                              active: this.state.activeNav === 2\n                            })}\n                            data-toggle=\"tab\"\n                            href=\"#pablo\"\n                            onClick={e => this.toggleNavs(e, 2)}\n                          >\n                            <span className=\"d-none d-md-block\">Week</span>\n                            <span className=\"d-md-none\">W</span>\n                          </NavLink>\n                        </NavItem>\n                      </Nav>\n                    </div>\n                  </Row>\n                </CardHeader>\n                <CardBody>\n                  {/* Chart */}\n                  <div className=\"chart\">\n                    <Line\n                      data={chartExample1[this.state.chartExample1Data]}\n                      options={chartExample1.options}\n                      getDatasetAtEvent={e => console.log(e)}\n                    />\n                  </div>\n                </CardBody>\n              </Card>\n            </Col>\n            <Col xl=\"4\">\n              <Card className=\"shadow\">\n                <CardHeader className=\"bg-transparent\">\n                  <Row className=\"align-items-center\">\n                    <div className=\"col\">\n                      <h6 className=\"text-uppercase text-muted ls-1 mb-1\">\n                        Exams\n                      </h6>\n                      <h2 className=\"mb-0\">Total Students</h2>\n                    </div>\n                  </Row>\n                </CardHeader>\n                <CardBody>\n                  {/* Chart */}\n                  <div className=\"chart\">\n                    <Bar\n                      data={chartExample2.data}\n                      options={chartExample2.options}\n                    />\n                  </div>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n          {/* <Row className=\"mt-5\">\n            <Col className=\"mb-5 mb-xl-0\" xl=\"8\">\n              <Card className=\"shadow\">\n                <CardHeader className=\"border-0\">\n                  <Row className=\"align-items-center\">\n                    <div className=\"col\">\n                      <h3 className=\"mb-0\">Page visits</h3>\n                    </div>\n                    <div className=\"col text-right\">\n                      <Button\n                        color=\"primary\"\n                        href=\"#pablo\"\n                        onClick={e => e.preventDefault()}\n                        size=\"sm\"\n                      >\n                        See all\n                      </Button>\n                    </div>\n                  </Row>\n                </CardHeader>\n                <Table className=\"align-items-center table-flush\" responsive>\n                  <thead className=\"thead-light\">\n                    <tr>\n                      <th scope=\"col\">Page name</th>\n                      <th scope=\"col\">Visitors</th>\n                      <th scope=\"col\">Unique users</th>\n                      <th scope=\"col\">Bounce rate</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    <tr>\n                      <th scope=\"row\">/argon/</th>\n                      <td>4,569</td>\n                      <td>340</td>\n                      <td>\n                        <i className=\"fas fa-arrow-up text-success mr-3\" />{\" \"}\n                        46,53%\n                      </td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">/argon/index.html</th>\n                      <td>3,985</td>\n                      <td>319</td>\n                      <td>\n                        <i className=\"fas fa-arrow-down text-warning mr-3\" />{\" \"}\n                        46,53%\n                      </td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">/argon/charts.html</th>\n                      <td>3,513</td>\n                      <td>294</td>\n                      <td>\n                        <i className=\"fas fa-arrow-down text-warning mr-3\" />{\" \"}\n                        36,49%\n                      </td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">/argon/tables.html</th>\n                      <td>2,050</td>\n                      <td>147</td>\n                      <td>\n                        <i className=\"fas fa-arrow-up text-success mr-3\" />{\" \"}\n                        50,87%\n                      </td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">/argon/profile.html</th>\n                      <td>1,795</td>\n                      <td>190</td>\n                      <td>\n                        <i className=\"fas fa-arrow-down text-danger mr-3\" />{\" \"}\n                        46,53%\n                      </td>\n                    </tr>\n                  </tbody>\n                </Table>\n              </Card>\n            </Col>\n            <Col xl=\"4\">\n              <Card className=\"shadow\">\n                <CardHeader className=\"border-0\">\n                  <Row className=\"align-items-center\">\n                    <div className=\"col\">\n                      <h3 className=\"mb-0\">Social traffic</h3>\n                    </div>\n                    <div className=\"col text-right\">\n                      <Button\n                        color=\"primary\"\n                        href=\"#pablo\"\n                        onClick={e => e.preventDefault()}\n                        size=\"sm\"\n                      >\n                        See all\n                      </Button>\n                    </div>\n                  </Row>\n                </CardHeader>\n                <Table className=\"align-items-center table-flush\" responsive>\n                  <thead className=\"thead-light\">\n                    <tr>\n                      <th scope=\"col\">Referral</th>\n                      <th scope=\"col\">Visitors</th>\n                      <th scope=\"col\" />\n                    </tr>\n                  </thead>\n                  <tbody>\n                    <tr>\n                      <th scope=\"row\">Facebook</th>\n                      <td>1,480</td>\n                      <td>\n                        <div className=\"d-flex align-items-center\">\n                          <span className=\"mr-2\">60%</span>\n                          <div>\n                            <Progress\n                              max=\"100\"\n                              value=\"60\"\n                              barClassName=\"bg-gradient-danger\"\n                            />\n                          </div>\n                        </div>\n                      </td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">Facebook</th>\n                      <td>5,480</td>\n                      <td>\n                        <div className=\"d-flex align-items-center\">\n                          <span className=\"mr-2\">70%</span>\n                          <div>\n                            <Progress\n                              max=\"100\"\n                              value=\"70\"\n                              barClassName=\"bg-gradient-success\"\n                            />\n                          </div>\n                        </div>\n                      </td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">Google</th>\n                      <td>4,807</td>\n                      <td>\n                        <div className=\"d-flex align-items-center\">\n                          <span className=\"mr-2\">80%</span>\n                          <div>\n                            <Progress max=\"100\" value=\"80\" />\n                          </div>\n                        </div>\n                      </td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">Instagram</th>\n                      <td>3,678</td>\n                      <td>\n                        <div className=\"d-flex align-items-center\">\n                          <span className=\"mr-2\">75%</span>\n                          <div>\n                            <Progress\n                              max=\"100\"\n                              value=\"75\"\n                              barClassName=\"bg-gradient-info\"\n                            />\n                          </div>\n                        </div>\n                      </td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">twitter</th>\n                      <td>2,645</td>\n                      <td>\n                        <div className=\"d-flex align-items-center\">\n                          <span className=\"mr-2\">30%</span>\n                          <div>\n                            <Progress\n                              max=\"100\"\n                              value=\"30\"\n                              barClassName=\"bg-gradient-warning\"\n                            />\n                          </div>\n                        </div>\n                      </td>\n                    </tr>\n                  </tbody>\n                </Table>\n              </Card>\n            </Col>\n          </Row>\n         */}\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default Index;\n","/home/yash/RECT/RECT_ADMIN/front-end/src/views/examples/Profile.js",["322","323","324","325","326"],"/*!\n\n=========================================================\n* Argon Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React, { useState, useEffect } from \"react\";\n\n// reactstrap components\nimport {\n    Button,\n    Card,\n    CardHeader,\n    CardBody,\n    FormGroup,\n    Form,\n    Label,\n    Input,\n    Container,\n    Row,\n    Col\n} from \"reactstrap\";\n// core components\nimport UserHeader from \"components/Headers/UserHeader.js\";\n\nimport { getSingleUsers, userEdit, Confirm, Delete } from \"../../network/ApiAxios\";\nimport { useHistory } from \"react-router-dom\";\nconst Profile = (props) => {\n    let history = useHistory();\n    const [user, setUser] = useState({});\n    const [checked, setChecked] = useState(false);\n    const [error, setError] = useState(false);\n    const [loading, setLoading] = useState(false);\n    const [mobile, setMobile] = useState();\n    const [tempAddress, setTempAddress] = useState(\"\");\n    const [perAddress, setPerAddress] = useState(\"\");\n    useEffect(() => {\n        if (props.location.state) {\n            const runAsync = async () => {\n                const response = await getSingleUsers(props.location.state);\n                const { user } = response.data;\n\n                if (response.data.success) {\n                    setUser(user);\n                    // console.log(user);\n                    setMobile(user.mobile)\n                    setPerAddress(user.perAddress)\n                    setTempAddress(user.tempAddress)\n                    setChecked(user.accountConfirmation)\n                }\n            }\n            runAsync();\n        }\n        else {\n\n        }\n    }, []);\n\n    const ApproveUserTamplate = () => {\n        return (\n            <Row className=\"align-items-center\">\n                <Col className=\"text-right\">\n                    {\n                        user.accountConfirmation ?\n                            <></>\n\n                            :\n                            <Button color=\"primary\" onClick={e => Approved(e)}>\n                                {!loading ? \"Approve User\" : \"Loading..\"}\n                            </Button>\n\n\n                    }\n                </Col>\n            </Row>\n        )\n    }\n\n    const Approved = async (e) => {\n        setLoading(true)\n        const response = await Confirm(user._id);\n        const { data } = response;\n        if (data.success) {\n            setLoading(false)\n            setUser(user);\n            setError(\"\");\n        } else {\n            setLoading(false)\n            setError(data.msg);\n        }\n    }\n\n    const DeleteUser = async (e) => {\n        setLoading(true)\n        const response = await Delete(user._id);\n        const { data } = response;\n        if (data.success) {\n            setLoading(false)\n            history.push('/admin/users')\n            setError(\"\");\n        } else {\n            setLoading(false)\n            setError(data.msg);\n        }\n    }\n\n    const handleSubmit = async () => {\n        setLoading(true)\n        const response = await userEdit(user._id, mobile, perAddress, tempAddress);\n        const { data } = response;\n        if (data.success) {\n            setLoading(false)\n            setError(\"\");\n        } else {\n            setLoading(false)\n            setError(data.msg);\n        }\n    }\n\n    console.log(user);\n\n    return (\n        <>\n            {props.location.state ?\n\n                <>\n                    <UserHeader userName={user.fname + ' ' + user.lname} />\n                    {/* Page content */}\n                    <Container className=\"mt--7\" fluid>\n                        <Row>\n                            <Col className=\"order-xl-2 mb-5 mb-xl-0\" xl=\"4\">\n                                <Card className=\"card-profile shadow\">\n                                    <Row className=\"justify-content-center\">\n                                        <Col className=\"order-lg-2\" lg=\"3\">\n                                            <div className=\"card-profile-image\">\n                                                <a href=\"#pablo\" onClick={e => e.preventDefault()}>\n                                                    <img\n                                                        alt=\"...\"\n                                                        className=\"rounded-circle\"\n                                                        src={'http://172.105.61.90:5100' + user.photo}\n                                                    />\n                                                </a>\n                                            </div>\n                                        </Col>\n                                    </Row>\n\n                                </Card>\n                            </Col>\n                            <Col className=\"order-xl-1\" xl=\"8\">\n                                <Card className=\"bg-secondary shadow\">\n                                    <CardHeader className=\"bg-white border-0\">\n                                        <Row className=\"align-items-center\">\n                                            <Col xs=\"8\">\n                                                <h3 className=\"mb-0\"> My account</h3>\n                                                {error ?\n                                                    <div className=\"text-muted font-italic\">\n                                                        <small>\n                                                            error:{\" \"}\n                                                            <span className=\"text-red font-weight-700\">{error}</span>\n                                                        </small>\n                                                    </div> : null}\n                                            </Col>\n                                            <Col className=\"text-right\" xs=\"4\">\n                                                <Button color=\"primary\" onClick={e => handleSubmit(e)}>\n                                                    {!loading ? \"Save User\" : \"Loading..\"}\n\n                                                </Button>\n                                                {/* <Button\n                                            color=\"primary\"\n                                            onClick={(e) => handleSubmit(e)}\n                                            size=\"sm\"\n                                        >\n                                            Save\n                                        </Button> */}\n                                            </Col>\n                                        </Row>\n                                    </CardHeader>\n                                    <CardBody>\n                                        <Form>\n                                            <h6 className=\"heading-small text-muted mb-4\">\n                                                User information (from database)\n                                    </h6>\n                                            <div className=\"pl-lg-4\">\n                                                <Row>\n                                                    <Col lg=\"6\">\n                                                        <FormGroup>\n                                                            <label\n                                                                className=\"form-control-label\"\n                                                                htmlFor=\"input-username\"\n                                                            >\n                                                                Email address\n                                                    </label>\n                                                            <Input\n                                                                className=\"form-control-alternative\"\n                                                                defaultValue={user.email}\n                                                                id=\"input-username\"\n                                                                placeholder=\"Username\"\n                                                                type=\"text\"\n                                                                disabled\n                                                            />\n                                                        </FormGroup>\n                                                    </Col>\n                                                    <Col lg=\"6\">\n                                                        <FormGroup>\n                                                            <label\n                                                                className=\"form-control-label\"\n                                                                htmlFor=\"input-mobile\"\n                                                            >\n                                                                Phone Number\n                                                    </label>\n                                                            <Input\n                                                                className=\"form-control-alternative\"\n                                                                id=\"input-mobile\"\n                                                                onChange={e => setMobile(e.target.value)}\n                                                                defaultValue={user.mobile}\n                                                                type=\"number\"\n                                                            />\n                                                        </FormGroup>\n                                                    </Col>\n                                                </Row>\n                                                <Row>\n                                                    <Col lg=\"6\">\n                                                        <FormGroup>\n                                                            <label\n                                                                className=\"form-control-label\"\n                                                                htmlFor=\"input-first-name\"\n                                                            >\n                                                                First name\n                                                   </label>\n                                                            <Input\n                                                                className=\"form-control-alternative\"\n                                                                defaultValue=\"Lucky\"\n                                                                id=\"input-first-name\"\n                                                                defaultValue={user.fname}\n                                                                placeholder=\"First name\"\n                                                                type=\"text\"\n                                                                disabled\n                                                            />\n                                                        </FormGroup>\n                                                    </Col>\n                                                    <Col lg=\"6\">\n                                                        <FormGroup>\n                                                            <label\n                                                                className=\"form-control-label\"\n                                                                htmlFor=\"input-last-name\">\n                                                                Last name\n                                                   </label>\n                                                            <Input\n                                                                className=\"form-control-alternative\"\n                                                                defaultValue=\"Jesse\"\n                                                                defaultValue={user.lname}\n                                                                id=\"input-last-name\"\n                                                                placeholder=\"Last name\"\n                                                                type=\"text\"\n                                                                disabled\n                                                            />\n                                                        </FormGroup>\n                                                    </Col>\n                                                </Row>\n                                                <Row>\n                                                    <Col lg=\"12\">\n                                                        <FormGroup>\n                                                            <label\n                                                                className=\"form-control-label\"\n                                                                htmlFor=\"input-regDate\">\n                                                                Date When Registered.\n                                                                </label>\n                                                            <Input\n                                                                className=\"form-control-alternative\"\n                                                                defaultValue={user.date}\n                                                                id=\"input-regDate\"\n                                                                placeholder=\"Last name\"\n                                                                type=\"text\"\n                                                                disabled\n                                                            />\n                                                        </FormGroup>\n                                                    </Col>\n\n                                                </Row>\n                                                <Row>\n                                                    <Col lg=\"6\">\n                                                        <FormGroup>\n                                                            <label\n                                                                className=\"form-control-label\"\n                                                                htmlFor=\"input-DOB\"\n                                                            >\n                                                                Date Of Birth\n                                                   </label>\n                                                            <Input\n                                                                className=\"form-control-alternative\"\n                                                                id=\"input-DOB\"\n                                                                defaultValue={user.dob}\n                                                                placeholder=\"Date of Birth\"\n                                                                type=\"text\"\n                                                                disabled\n                                                            />\n                                                        </FormGroup>\n                                                    </Col>\n                                                    <Col lg=\"6\">\n                                                        <FormGroup>\n                                                            <label\n                                                                className=\"form-control-label\"\n                                                                htmlFor=\"input-Status\">\n                                                                User Status\n                                                            </label>\n                                                            <Input\n                                                                className=\"form-control-alternative\"\n                                                                defaultValue={user.accountConfirmation}\n                                                                id=\"input-Status\"\n                                                                placeholder=\"User Status\"\n                                                                type=\"text\"\n                                                                disabled\n                                                            />\n                                                        </FormGroup>\n                                                    </Col>\n                                                </Row>\n                                            </div>\n                                            <hr className=\"my-4\" />\n                                            {/* Address */}\n                                            <h6 className=\"heading-small text-muted mb-4\">\n                                                Contact information\n                                    </h6>\n                                            <div className=\"pl-lg-4\">\n                                                <Row>\n                                                    <Col md=\"12\">\n                                                        <FormGroup>\n                                                            <label\n                                                                className=\"form-control-label\"\n                                                                htmlFor=\"input-tempAddress\"\n                                                            >\n                                                                Temporary Address\n                                                    </label>\n                                                            <Input\n                                                                className=\"form-control-alternative\"\n                                                                defaultValue={user.tempAddress}\n                                                                id=\"input-tempAddress\"\n                                                                onChange={e => setTempAddress(e.target.value)}\n                                                                placeholder=\"Home Address\"\n                                                                type=\"text\"\n                                                            />\n                                                        </FormGroup>\n                                                    </Col>\n                                                </Row>\n                                                <Row>\n                                                    <Col md=\"12\">\n                                                        <FormGroup>\n                                                            <label\n                                                                className=\"form-control-label\"\n                                                                htmlFor=\"input-perAddress\"\n                                                            >\n                                                                Permanent Address\n                                                    </label>\n                                                            <Input\n                                                                className=\"form-control-alternative\"\n                                                                defaultValue={user.perAddress}\n                                                                id=\"input-perAddress\"\n                                                                onChange={e => setPerAddress(e.target.value)}\n                                                                placeholder=\"Home Address\"\n                                                                type=\"text\"\n                                                            />\n                                                        </FormGroup>\n                                                    </Col>\n                                                </Row>\n                                            </div>\n                                            <hr className=\"my-4\" />\n                                            {/* Description */}\n                                            <h6 className=\"heading-small text-muted mb-4\">Documents</h6>\n                                            <div className=\"pl-lg-4\">\n                                                <Row>\n                                                    <Col md='6'>\n                                                        <h1 className='my-4'>Aadhar-Card Copy</h1>\n                                                        <img\n                                                            src={\"http://172.105.61.90:5100\" + user.aadhar}\n                                                            className=\"img-fluid  my-2\"\n                                                            alt=\"...\"\n                                                        />\n                                                    </Col>\n                                                    <Col md='6'>\n                                                        <h1 className='my-4'>Signature Copy</h1>\n                                                        <img\n                                                            src={\"http://172.105.61.90:5100\" + user.signature}\n                                                            className=\"img-fluid  my-2\"\n                                                            alt=\"...\"\n                                                        />\n                                                    </Col>\n                                                </Row>\n\n                                                <Row>\n                                                    <Col md='12'>\n                                                        <h1 className='my-4'>Cast Certificate</h1>\n                                                        <img\n                                                            src={\"http://172.105.61.90:5100\" + user.castCert}\n                                                            className=\"img-fluid my-2\"\n                                                            alt=\"...\"\n                                                        />\n                                                    </Col>\n                                                </Row>\n\n                                                <Row>\n                                                    <Col md='12'>\n                                                        <Card className=\"bg-secondary shadow\">\n                                                            <CardHeader className=\"bg-white border-0\">\n                                                                <Row className=\"align-items-center\">\n\n                                                                    <ApproveUserTamplate />\n                                                                    <Col className=\"text-right\">\n                                                                        <Button color=\"primary\" onClick={e => DeleteUser(e)}>\n                                                                            {!loading ? \"Delete User\" : \"Loading..\"}\n                                                                        </Button>\n                                                                    </Col>\n                                                                </Row>\n                                                            </CardHeader>\n                                                        </Card>\n                                                    </Col>\n                                                </Row>\n                                            </div>\n                                        </Form>\n                                    </CardBody>\n                                </Card>\n                            </Col>\n                        </Row>\n                    </Container>\n                </>\n                :\n                <>\n                    <UserHeader />\n                    <Container>\n\n                    </Container>\n                </>\n            }\n        </>\n    );\n}\n\nexport default Profile;\n","/home/yash/RECT/RECT_ADMIN/front-end/src/views/examples/Maps.js",[],"/home/yash/RECT/RECT_ADMIN/front-end/src/views/examples/Register.js",["327"],"/*!\n\n=========================================================\n* Argon Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React, { useState } from \"react\";\n\n// reactstrap components\nimport {\n    Button,\n    Card,\n    CardHeader,\n    CardBody,\n    FormGroup,\n    Form,\n    Input,\n    InputGroupAddon,\n    InputGroupText,\n    InputGroup,\n    Row,\n    Col\n} from \"reactstrap\";\nimport Toast from 'react-bootstrap/Toast'\nimport { register } from \"../../network/ApiAxios\";\nimport config from \"../../config\";\n\nconst Register = () => {\n\n    const [name, setName] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\n    const [error, setError] = useState(\"\");\n    const [showToast, setShowToast] = useState(false);\n    const [toastMessage, setToastMessage] = useState(\"Email sent! Check it to reset your password.\");\n    const [userID, setUserID] = useState(null);\n\n    const registerUser = async () => {\n        if (!(name && email && password && confirmPassword)) {\n            setError(\"Make sure to fill all the inputs and agree to the privacy policy\");\n            return;\n        }\n\n        if (password !== confirmPassword) {\n            setError(\"Passwords do not match\");\n            return;\n        }\n        const response = await register(name, email, password);\n        const { data } = response;\n        if (!data.success) {\n            setError(data.msg);\n            return;\n        }\n        if (config.DEMO) {\n            setToastMessage(\"This is a demo, so we will not send you an email. Instead, click on this link to verify your account:\")\n            setUserID(data.userID);\n        }\n        setError(\"\");\n        setName(\"\");\n        setEmail(\"\");\n        setPassword(\"\");\n        setConfirmPassword(\"\");\n        setShowToast(true);\n    };\n\n    return (\n        <>\n            <div\n                aria-live=\"polite\"\n                aria-atomic=\"true\"\n                style={{\n                    position: 'fixed',\n                    minHeight: '100px',\n                    width: \"35%\",\n                    right: 10,\n                    bottom: 80,\n                    zIndex: 50\n                }}\n            >\n                <Toast style={{\n                    position: 'absolute',\n                    top: 0,\n                    right: 0,\n                    backgroundColor: \"white\",\n                    padding: 10,\n                    borderRadius: 10\n                }} onClose={() => setShowToast(false)} show={showToast} delay={10000} autohide={!config.DEMO}>\n                    <Toast.Header>\n                        <img style={{ height: \"30px\", width: \"100px\" }} src={require(\"assets/img/brand/argon-react.png\").default} alt=\"...\" />\n                    </Toast.Header>\n                    <Toast.Body>\n                        {toastMessage}\n                        {config.DEMO ?\n                            <a href={config.DOMAIN_NAME + '/auth/confirm-email/' + userID}>\n                                {config.DOMAIN_NAME + '/auth/confirm-email/' + userID}\n                            </a> : null}\n                    </Toast.Body>\n                </Toast>\n            </div>\n            <Col lg=\"6\" md=\"8\">\n                <Card className=\"bg-secondary shadow border-0\">\n                    <CardHeader className=\"bg-transparent pb-5\">\n                        <div className=\"text-center text-muted mb-4\">\n                            <small>sign up with credentials</small>\n                        </div>\n                    </CardHeader>\n                    <CardBody className=\"px-lg-5 py-lg-5\">\n\n                        <Form role=\"form\">\n                            <FormGroup>\n                                <InputGroup className=\"input-group-alternative mb-3\">\n                                    <InputGroupAddon addonType=\"prepend\">\n                                        <InputGroupText>\n                                            <i className=\"ni ni-hat-3\" />\n                                        </InputGroupText>\n                                    </InputGroupAddon>\n                                    <Input placeholder=\"Name\" type=\"text\" value={name}\n                                        onChange={e => setName(e.target.value)}\n                                    />\n                                </InputGroup>\n                            </FormGroup>\n                            <FormGroup>\n                                <InputGroup className=\"input-group-alternative mb-3\">\n                                    <InputGroupAddon addonType=\"prepend\">\n                                        <InputGroupText>\n                                            <i className=\"ni ni-email-83\" />\n                                        </InputGroupText>\n                                    </InputGroupAddon>\n                                    <Input placeholder=\"Email\" type=\"email\" autoComplete=\"new-email\" value={email}\n                                        onChange={e => setEmail(e.target.value)}\n                                    />\n                                </InputGroup>\n                            </FormGroup>\n                            <FormGroup>\n                                <InputGroup className=\"input-group-alternative\">\n                                    <InputGroupAddon addonType=\"prepend\">\n                                        <InputGroupText>\n                                            <i className=\"ni ni-lock-circle-open\" />\n                                        </InputGroupText>\n                                    </InputGroupAddon>\n                                    <Input placeholder=\"Password\" type=\"password\" autoComplete=\"new-password\" value={password}\n                                        onChange={e => setPassword(e.target.value)}\n                                    />\n                                </InputGroup>\n                            </FormGroup>\n                            <FormGroup>\n                                <InputGroup className=\"input-group-alternative\">\n                                    <InputGroupAddon addonType=\"prepend\">\n                                        <InputGroupText>\n                                            <i className=\"ni ni-lock-circle-open\" />\n                                        </InputGroupText>\n                                    </InputGroupAddon>\n                                    <Input placeholder=\"Confirm Password\" type=\"password\" autoComplete=\"new-password\" value={confirmPassword}\n                                        onChange={e => setConfirmPassword(e.target.value)}\n                                    />\n                                </InputGroup>\n                            </FormGroup>\n                            {error ?\n                                <div className=\"text-muted font-italic\">\n                                    <small>\n                                        error:{\" \"}\n                                        <span className=\"text-red font-weight-700\">{error}</span>\n                                    </small>\n                                </div> : null\n                            }\n\n                            <div className=\"text-center\">\n                                <Button onClick={registerUser} className=\"mt-4\" color=\"primary\" type=\"button\">\n                                    Create account\n                                    </Button>\n                            </div>\n                        </Form>\n                    </CardBody>\n                </Card>\n            </Col>\n        </>\n    );\n};\n\nexport default Register;\n","/home/yash/RECT/RECT_ADMIN/front-end/src/views/examples/RegisterUser.js",["328","329","330","331","332","333","334","335","336","337","338"],"\nimport React, { useEffect, useState } from \"react\";\n\n// reactstrap components\nimport {\n    Button,\n    Card,\n    CardHeader,\n    CardBody,\n    FormGroup,\n    Form,\n    Input,\n    Container,\n    Row,\n    Col\n} from \"reactstrap\";\nimport ImageUploader from 'react-images-upload';\n// core components\nimport UserHeader from \"components/Headers/UserHeader.js\";\nimport EditHeader from \"../../components/Headers/EditHeader\";\nimport { edit, registerUser } from \"../../network/ApiAxios\";\n\nconst RegisterUser = props => {\n\n\n\n    // const [isDisabled,setIsDisabled] = useState(false)\n    const [isTempAddIsPerAdd, setIsTempAddIsPerAdd] = useState(false)\n    const [error, setError] = useState(\"\");\n    const [user, setUser] = useState(\"\");\n\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    //temp Add\n    const [tempAddLine1, setTempAddLine1] = useState(\"\");\n    const [tempAddLine2, setTempAddLine2] = useState(\"\");\n    const [tempAddArea, setTempAddArea] = useState(\"\");\n    const [tempAddCity, setTempAddCity] = useState(\"\");\n    const [tempAddState, setTempAddState] = useState(\"\");\n    const [tempAddPin, setTempAddPin] = useState(\"\");\n    ///per Add\n    const [perAddLine1, setPerAddLine1] = useState(\"\");\n    const [perAddLine2, setPerAddLine2] = useState(\"\");\n    const [perAddArea, setPerAddArea] = useState(\"\");\n    const [perAddCity, setPerAddCity] = useState(\"\");\n    const [perAddState, setPerAddState] = useState(\"\");\n    const [perAddPin, setPerAddPin] = useState(\"\");\n\n\n    const [photo, setPhoto] = useState();\n    const [signature, setSignature] = useState();\n    const [aadhar, setAadhar] = useState();\n    const [castCert, setCastCert] = useState();\n\n    const [dob, setDOB] = useState(new Date);\n    const [mobile, setMobile] = useState();\n    const [fname, setFName] = useState(\"\");\n    const [lname, setLName] = useState(\"\");\n\n\n    const sameAddress = async (val) => {\n        await setIsTempAddIsPerAdd(val);\n        await setPerAddLine1(tempAddLine1)\n        await setPerAddLine2(tempAddLine2)\n        await setPerAddArea(tempAddArea)\n        await setPerAddCity(tempAddCity)\n        await setPerAddState(tempAddState)\n        await setPerAddPin(tempAddPin)\n    }\n\n    const onDrop = async (e, val) => {\n        switch (val) {\n            case 'photo':\n                setPhoto(e[0])\n                break;\n            case 'signature':\n                setSignature(e[0])\n                break;\n            case 'aadhar':\n                setAadhar(e[0])\n                break;\n            case 'castCert':\n                setCastCert(e[0])\n                break;\n\n            default:\n                break;\n        }\n    }\n    const clearForm = () => {\n        setEmail(\"\")\n        setPassword(\"\")\n        setTempAddLine1(\"\")\n        setTempAddLine2(\"\")\n        setTempAddArea(\"\")\n        setTempAddCity(\"\")\n        setTempAddState(\"\")\n        setTempAddPin(\"\")\n        setPerAddLine1(\"\")\n        setPerAddLine2(\"\")\n        setPerAddArea(\"\")\n        setPerAddCity(\"\")\n        setPerAddState(\"\")\n        setPerAddPin(\"\")\n        setDOB(\"\")\n        setMobile(\"\")\n        setFName(\"\")\n        setLName(\"\")\n    }\n    const RegUser = async (e) => {\n        e.preventDefault()\n        var tempAddress = tempAddLine1 + \" \" + tempAddLine2 + \" \" + tempAddArea + \" \" + tempAddCity + \" \" + tempAddState + \" \" + tempAddPin;\n        var perAddress = perAddLine1 + \" \" + perAddLine2 + \" \" + perAddArea + \" \" + perAddCity + \" \" + perAddState + \" \" + perAddPin;\n\n        const response = await registerUser(fname, lname, email, password, mobile, tempAddress, perAddress, dob);\n        const { data } = response;\n        if (data.success) {\n            setError(\"\");\n            clearForm();\n        } else {\n            setError(data.msg);\n            clearForm()\n        }\n\n    }\n\n\n    return (\n        <>\n            <EditHeader />\n            {/* Page content */}\n            <Container className=\"mt--7\" fluid>\n                <Row>\n                    <div className=\"col\">\n                        <Card className=\"bg-secondary shadow\">\n                            <CardHeader className=\"bg-white border-0\">\n                                <Row className=\"align-items-center\">\n                                    <Col xs=\"8\">\n                                        <h3 className=\"mb-0\">Register New User.</h3>\n                                    </Col>\n                                    <Col className=\"text-right\" xs=\"4\">\n                                        <Button\n                                            color=\"primary\"\n                                            href=\"#pablo\"\n                                            onClick={RegUser}\n                                            size=\"sm\"\n                                        >\n                                            Save\n                                        </Button>\n                                    </Col>\n                                </Row>\n                            </CardHeader>\n                            <CardBody>\n                                <Form>\n                                    <h6 className=\"heading-small text-muted mb-4\">\n                                        User information\n                                    </h6>\n                                    <div className=\"pl-lg-4\">\n                                        <Row>\n                                            <Col lg=\"6\">\n                                                <FormGroup>\n                                                    <label\n                                                        className=\"form-control-label\"\n                                                        htmlFor=\"input-username\"\n                                                    >\n                                                        First Name\n                                                    </label>\n                                                    <Input\n\n                                                        className=\"form-control-alternative\"\n                                                        value={fname}\n                                                        id=\"input-fname\"\n                                                        placeholder=\"First Name\"\n                                                        onChange={e => setFName(e.target.value)}\n                                                        type=\"text\"\n                                                    />\n                                                </FormGroup>\n                                            </Col><Col lg=\"6\">\n                                                <FormGroup>\n                                                    <label\n                                                        className=\"form-control-label\"\n                                                        htmlFor=\"input-username\"\n                                                    >\n                                                        Last Name\n                                                    </label>\n                                                    <Input\n                                                        className=\"form-control-alternative\"\n                                                        value={lname}\n                                                        id=\"input-lname\"\n                                                        placeholder=\"Last Name\"\n                                                        onChange={e => setLName(e.target.value)}\n                                                        type=\"text\"\n                                                    />\n                                                </FormGroup>\n                                            </Col>\n                                        </Row>\n                                        <Row>\n                                            <Col lg=\"6\">\n                                                <FormGroup>\n                                                    <label\n                                                        className=\"form-control-label\"\n                                                        htmlFor=\"input-email\"\n                                                    >\n                                                        Email address\n                                                    </label>\n                                                    <Input\n                                                        className=\"form-control-alternative\"\n                                                        id=\"input-email\"\n                                                        value={email}\n                                                        placeholder=\"Email Address\"\n                                                        onChange={e => setEmail(e.target.value)}\n                                                        type=\"email\"\n                                                    />\n                                                </FormGroup>\n                                            </Col>\n                                            <Col lg=\"6\">\n                                                <FormGroup>\n                                                    <label\n                                                        className=\"form-control-label\"\n                                                        htmlFor=\"input-email\"\n                                                    >\n                                                        Password\n                                                    </label>\n                                                    <Input\n                                                        className=\"form-control-alternative\"\n                                                        id=\"input-password\"\n                                                        placeholder=\"Password\"\n                                                        value={password}\n                                                        onChange={e => setPassword(e.target.value)}\n                                                        type=\"Text\"\n                                                    />\n                                                </FormGroup>\n                                            </Col>\n\n                                        </Row>\n                                        <Row>\n                                            <Col lg=\"6\">\n                                                <FormGroup>\n                                                    <label\n                                                        className=\"form-control-label\"\n                                                        htmlFor=\"input-dob\"\n                                                    >\n                                                        Date Of Birth\n                                                    </label>\n                                                    <Input\n                                                        className=\"form-control-alternative\"\n                                                        id=\"input-dob\"\n                                                        value={dob}\n                                                        placeholder=\"Date Of Birth\"\n                                                        onChange={e => setDOB(e.target.value)}\n                                                        type=\"date\"\n                                                    />\n                                                </FormGroup>\n                                            </Col>\n                                            <Col lg=\"6\">\n                                                <FormGroup>\n                                                    <label\n                                                        className=\"form-control-label\"\n                                                        htmlFor=\"input-mobile\"\n                                                    >\n                                                        mobile\n                                                    </label>\n                                                    <Input\n                                                        className=\"form-control-alternative\"\n                                                        id=\"input-mobile\"\n                                                        placeholder=\"Mobile Number\"\n                                                        value={mobile}\n                                                        onChange={e => setMobile(e.target.value)}\n                                                        type=\"text\"\n                                                    />\n                                                </FormGroup>\n                                            </Col>\n                                        </Row>\n                                        {/* Address */}\n                                        <div>\n                                            <Row>\n                                                <h6 className=\"heading-small text-muted mb-4\">\n                                                    Temporary Address\n                                            </h6>\n                                                <Col lg=\"12\" >\n                                                    <FormGroup>\n                                                        <label\n                                                            className=\"form-control-label\"\n                                                            htmlFor=\"input-email\"\n                                                        >\n                                                            Temporary Address Line 1\n                                                        </label>\n                                                        <Input\n                                                            className=\"form-control-alternative\"\n                                                            id=\"input-email\"\n                                                            placeholder=\"Temporary Address\"\n                                                            value={tempAddLine1}\n                                                            onChange={e => setTempAddLine1(e.target.value)}\n                                                            type=\"Text\"\n                                                        />\n                                                    </FormGroup>\n                                                </Col>\n\n                                            </Row>\n                                            <Row>\n                                                <Col lg=\"12\" >\n                                                    <FormGroup>\n                                                        <label\n                                                            className=\"form-control-label\"\n                                                            htmlFor=\"input-email\"\n                                                        >\n                                                            Temporary Address Line 2\n                                                        </label>\n                                                        <Input\n                                                            className=\"form-control-alternative\"\n                                                            id=\"input-email\"\n                                                            placeholder=\"Temporary Address Line 2\"\n                                                            value={tempAddLine2}\n                                                            onChange={e => setTempAddLine2(e.target.value)}\n                                                            type=\"Text\"\n                                                        />\n                                                    </FormGroup>\n                                                </Col>\n\n                                            </Row>\n                                            <Row>\n                                                <Col lg=\"6\" >\n                                                    <FormGroup>\n                                                        <label\n                                                            className=\"form-control-label\"\n                                                            htmlFor=\"input-email\"\n                                                        >\n                                                            Area\n                                                        </label>\n                                                        <Input\n                                                            className=\"form-control-alternative\"\n                                                            id=\"input-email\"\n                                                            placeholder=\"Area\"\n                                                            value={tempAddArea}\n                                                            onChange={e => setTempAddArea(e.target.value)}\n                                                            type=\"Text\"\n                                                        />\n                                                    </FormGroup>\n                                                </Col>\n                                                <Col lg=\"6\" >\n                                                    <FormGroup>\n                                                        <label\n                                                            className=\"form-control-label\"\n                                                            htmlFor=\"input-email\"\n                                                        >\n                                                            City\n                                                        </label>\n                                                        <Input\n                                                            className=\"form-control-alternative\"\n                                                            id=\"input-email\"\n                                                            placeholder=\"City\"\n                                                            value={tempAddCity}\n                                                            onChange={e => setTempAddCity(e.target.value)}\n                                                            type=\"Text\"\n                                                        />\n                                                    </FormGroup>\n                                                </Col>\n\n                                            </Row>\n                                            <Row>\n                                                <Col lg=\"6\" >\n                                                    <FormGroup>\n                                                        <label\n                                                            className=\"form-control-label\"\n                                                            htmlFor=\"input-email\"\n                                                        >\n                                                            State\n                                                        </label>\n                                                        <Input\n                                                            className=\"form-control-alternative\"\n                                                            id=\"input-email\"\n                                                            placeholder=\"State\"\n                                                            value={tempAddState}\n                                                            onChange={e => setTempAddState(e.target.value)}\n                                                            type=\"Text\"\n                                                        />\n                                                    </FormGroup>\n                                                </Col>\n                                                <Col lg=\"6\" >\n                                                    <FormGroup>\n                                                        <label\n                                                            className=\"form-control-label\"\n                                                            htmlFor=\"input-email\"\n                                                        >\n                                                            Pin\n                                                        </label>\n                                                        <Input\n                                                            className=\"form-control-alternative\"\n                                                            id=\"input-email\"\n                                                            placeholder=\"Pin Code\"\n                                                            value={tempAddPin}\n                                                            onChange={e => setTempAddPin(e.target.value)}\n                                                            type=\"Text\"\n                                                        />\n                                                    </FormGroup>\n                                                </Col>\n\n                                            </Row>\n                                        </div>\n                                        <div>\n                                            <Row>\n\n                                                <h6 className=\"heading-small text-muted mb-4\">\n                                                    Same As Temporary Address ?\n                                                </h6>\n                                                <Col>\n\n                                                    <FormGroup>\n                                                        <input\n                                                            className=\"checkBox\"\n                                                            onChange={e => sameAddress(e.target.checked)}\n                                                            type=\"CheckBox\"\n                                                        />\n                                                    </FormGroup>\n                                                </Col>\n\n                                            </Row>\n                                        </div>\n                                        <div>\n                                            <Row>\n                                                <h6 className=\"heading-small text-muted mb-4\">\n                                                    Permanent Address\n                                            </h6>\n                                                <Col lg=\"12\" >\n                                                    <FormGroup>\n                                                        <label\n                                                            className=\"form-control-label\"\n                                                            htmlFor=\"input-pal1\"\n                                                        >\n                                                            Permanent Address Line 1\n                                                        </label>\n                                                        <Input\n                                                            className=\"form-control-alternative\"\n                                                            disabled={isTempAddIsPerAdd}\n                                                            id=\"input-pal1\"\n                                                            placeholder=\"Permanent Address\"\n                                                            value={perAddLine1}\n                                                            onChange={e => setPerAddLine1(e.target.value)}\n                                                            type=\"Text\"\n                                                        />\n                                                    </FormGroup>\n                                                </Col>\n\n                                            </Row>\n                                            <Row>\n                                                <Col lg=\"12\" >\n                                                    <FormGroup>\n                                                        <label\n                                                            className=\"form-control-label\"\n                                                            htmlFor=\"input-pal2\"\n                                                        >\n                                                            Permanent Address Line 2\n                                                        </label>\n                                                        <Input\n                                                            className=\"form-control-alternative\"\n                                                            id=\"input-pal2\"\n                                                            disabled={isTempAddIsPerAdd}\n                                                            placeholder=\"Permanent Address Line 2\"\n                                                            value={perAddLine2}\n                                                            onChange={e => setPerAddLine2(e.target.value)}\n                                                            type=\"Text\"\n                                                        />\n                                                    </FormGroup>\n                                                </Col>\n\n                                            </Row>\n                                            <Row>\n                                                <Col lg=\"6\" >\n                                                    <FormGroup>\n                                                        <label\n                                                            className=\"form-control-label\"\n                                                            htmlFor=\"input-pArea\"\n                                                        >\n                                                            Area\n                                                        </label>\n                                                        <Input\n                                                            className=\"form-control-alternative\"\n                                                            id=\"input-pArea\"\n                                                            placeholder=\"Area\"\n                                                            value={perAddArea}\n                                                            onChange={e => setPerAddArea(e.target.value)}\n                                                            disabled={isTempAddIsPerAdd}\n                                                            type=\"Text\"\n                                                        />\n                                                    </FormGroup>\n                                                </Col>\n                                                <Col lg=\"6\" >\n                                                    <FormGroup>\n                                                        <label\n                                                            className=\"form-control-label\"\n                                                            htmlFor=\"input-pCity\"\n                                                        >\n                                                            City\n                                                        </label>\n                                                        <Input\n                                                            className=\"form-control-alternative\"\n                                                            id=\"input-pCity\"\n                                                            disabled={isTempAddIsPerAdd}\n                                                            placeholder=\"City\"\n                                                            value={perAddCity}\n                                                            onChange={e => setPerAddCity(e.target.value)}\n                                                            type=\"Text\"\n                                                        />\n                                                    </FormGroup>\n                                                </Col>\n\n                                            </Row>\n                                            <Row>\n                                                <Col lg=\"6\" >\n                                                    <FormGroup>\n                                                        <label\n                                                            className=\"form-control-label\"\n                                                            htmlFor=\"input-pState\"\n                                                        >\n                                                            State\n                                                        </label>\n                                                        <Input\n                                                            className=\"form-control-alternative\"\n                                                            id=\"input-pState\"\n                                                            disabled={isTempAddIsPerAdd}\n                                                            placeholder=\"State\"\n                                                            value={perAddState}\n                                                            onChange={e => setPerAddState(e.target.value)}\n                                                            type=\"Text\"\n                                                        />\n                                                    </FormGroup>\n                                                </Col>\n                                                <Col lg=\"6\" >\n                                                    <FormGroup>\n                                                        <label\n                                                            className=\"form-control-label\"\n                                                            htmlFor=\"input-pPin\"\n                                                        >\n                                                            Pin\n                                                        </label>\n                                                        <Input\n                                                            className=\"form-control-alternative\"\n                                                            id=\"input-pPin\"\n                                                            disabled={isTempAddIsPerAdd}\n                                                            placeholder=\"Pin Code\"\n                                                            value={perAddPin}\n                                                            onChange={e => setPerAddPin(e.target.value)}\n                                                            type=\"Text\"\n                                                        />\n                                                    </FormGroup>\n                                                </Col>\n\n                                            </Row>\n\n                                        </div>\n\n                                        <div className=\"\">\n                                            <Row>\n                                                <h6 className=\"heading-small text-muted mb-4\">\n                                                    Upload Documents\n                                                </h6>\n                                            </Row>\n                                            <Row>\n\n                                                <Col lg=\"3\">\n                                                    <h6>Uplaod Photo</h6>\n\n                                                    <ImageUploader\n                                                        withIcon={true}\n                                                        buttonText='Choose images'\n                                                        onChange={(e) => { onDrop(e, 'photo') }}\n\n                                                        imgExtension={['.jpg', '.gif', '.png', '.gif', '.jpeg']}\n                                                        maxFileSize={412000}\n                                                        withPreview={true}\n                                                    />\n                                                </Col>\n                                                <Col lg=\"3\">\n                                                    <h6>Uplaod Signature</h6>\n                                                    <ImageUploader\n                                                        withIcon={true}\n                                                        buttonText='Choose images'\n                                                        onChange={() => { onDrop('signature') }}\n                                                        singleImage={true}\n                                                        imgExtension={['.jpg', '.gif', '.png', '.gif', '.jpeg']}\n                                                        maxFileSize={412000}\n                                                        withPreview={true}\n                                                    />\n                                                </Col>\n                                                <Col lg=\"3\">\n                                                    <h6>Uplaod Aadhar</h6>\n                                                    <ImageUploader\n                                                        withIcon={true}\n                                                        buttonText='Choose images'\n                                                        onChange={() => { onDrop('aadhar') }}\n                                                        singleImage={true}\n                                                        imgExtension={['.jpg', '.gif', '.png', '.gif', '.jpeg']}\n                                                        maxFileSize={412000}\n                                                        withPreview={true}\n                                                    />\n                                                </Col>\n                                                <Col lg=\"3\">\n                                                    <h6>Uplaod Cast Certificate</h6>\n                                                    <ImageUploader\n                                                        withIcon={true}\n                                                        buttonText='Choose images'\n                                                        onChange={() => { onDrop('castCert') }}\n                                                        singleImage={true}\n                                                        imgExtension={['.jpg', '.gif', '.png', '.gif', '.jpeg']}\n                                                        maxFileSize={412000}\n                                                        withPreview={true}\n                                                    />\n                                                </Col>\n                                            </Row>\n\n                                        </div>\n                                        <Row>\n                                            <Col lg='12'>\n                                                <div className=\"text-center\">\n                                                    <Button className=\"my-4\" color=\"primary\" type=\"submit\" onClick={(e) => RegUser(e)}>\n                                                        Register And Approve\n                                                    </Button>\n                                                </div>\n                                            </Col>\n                                        </Row>\n\n                                    </div>\n                                </Form>\n                            </CardBody>\n                        </Card>\n                    </div>\n                </Row>\n            </Container>\n        </>\n    )\n}\n\n\nexport default RegisterUser","/home/yash/RECT/RECT_ADMIN/front-end/src/views/examples/Login.js",["339","340"],"/*!\n\n=========================================================\n* Argon Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React, { useState } from \"react\";\n\n// reactstrap components\nimport {\n    Button,\n    Card,\n    CardHeader,\n    CardBody,\n    FormGroup,\n    Form,\n    Input,\n    InputGroupAddon,\n    InputGroupText,\n    InputGroup,\n    Row,\n    Col\n} from \"reactstrap\";\nimport { login } from \"../../network/ApiAxios\";\n\nconst Login = props => {\n\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [error, setError] = useState(\"\");\n\n    const tryLogin = async (e) => {\n        e.preventDefault();\n        const response = await login(email, password);\n        const { data } = response;\n        if (data.success) {\n            setError(\"\");\n            localStorage.setItem(\"token\", data.token);\n            localStorage.setItem(\"admin\", JSON.stringify(data.admin));\n            props.history.push(\"/\");\n        } else {\n            setPassword(\"\");\n            setError(data.msg);\n        }\n    }\n\n    return (\n        <>\n            <Col lg=\"5\" md=\"7\">\n                <Card className=\"bg-secondary shadow border-0\">\n\n                    <CardBody className=\"px-lg-5 py-lg-5\">\n                        <div className=\"text-center text-muted mb-4\">\n                            <small>Sign in with credentials</small>\n                        </div>\n                        <Form role=\"form\" >\n                            <FormGroup className=\"mb-3\">\n                                <InputGroup className=\"input-group-alternative\">\n                                    <InputGroupAddon addonType=\"prepend\">\n                                        <InputGroupText>\n                                            <i className=\"ni ni-email-83\" />\n                                        </InputGroupText>\n                                    </InputGroupAddon>\n                                    <Input placeholder=\"Email\" type=\"email\" autoComplete=\"email\" value={email}\n                                        onChange={e => setEmail(e.target.value)} />\n                                </InputGroup>\n                            </FormGroup>\n                            <FormGroup>\n                                <InputGroup className=\"input-group-alternative\">\n                                    <InputGroupAddon addonType=\"prepend\">\n                                        <InputGroupText>\n                                            <i className=\"ni ni-lock-circle-open\" />\n                                        </InputGroupText>\n                                    </InputGroupAddon>\n                                    <Input placeholder=\"Password\" type=\"password\" autoComplete=\"password\" value={password}\n                                        onChange={e => setPassword(e.target.value)} />\n                                </InputGroup>\n                            </FormGroup>\n\n                            {error ?\n                                <div className=\"text-muted font-italic\">\n                                    <small>\n                                        error:{\" \"}\n                                        <span className=\"text-red font-weight-700\">{error}</span>\n                                    </small>\n                                </div> : null}\n                            <div className=\"text-center\">\n                                <Button className=\"my-4\" color=\"primary\" type=\"submit\" onClick={(e) => tryLogin(e)}>\n                                    Sign in\n                                </Button>\n                            </div>\n                        </Form>\n                    </CardBody>\n                </Card>\n                <Row className=\"mt-3\">\n                    <Col className=\"text-right\" xs=\"12\">\n                        <a\n                            className=\"text-light\"\n                            onClick={() => props.history.push('/auth/register')}\n                        >\n                            <small>Create new account</small>\n                        </a>\n                    </Col>\n                </Row>\n            </Col>\n        </>\n    );\n}\n\nexport default Login;\n","/home/yash/RECT/RECT_ADMIN/front-end/src/views/examples/Tables.js",[],"/home/yash/RECT/RECT_ADMIN/front-end/src/views/examples/Icons.js",[],"/home/yash/RECT/RECT_ADMIN/front-end/src/config.js",[],"/home/yash/RECT/RECT_ADMIN/front-end/src/components/Headers/EditHeader.js",["341","342"],"/*!\n\n=========================================================\n* Argon Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\n\n// reactstrap components\nimport { Button, Container, Row, Col } from \"reactstrap\";\nimport { useHistory } from \"react-router-dom\";\n\nconst EditHeader = () => {\n\n    const username = JSON.parse(localStorage.getItem(\"admin\")).name;\n    const history = useHistory();\n\n    return (\n        <>\n            <div\n                className=\"header pb-8 pt-5 pt-lg-8 d-flex align-items-center\"\n                style={{\n                    minHeight: \"600px\",\n                    backgroundImage:\n                        \"url(\" + require(\"assets/img/theme/profile-cover.jpg\") + \")\",\n                    backgroundSize: \"cover\",\n                    backgroundPosition: \"center top\"\n                }}\n            >\n                {/* Mask */}\n                <span className=\"mask bg-gradient-default opacity-8\" />\n                {/* Header container */}\n                <Container className=\"d-flex align-items-center\" fluid>\n                    <Row>\n                        <Col lg=\"12\" md=\"10\">\n                            <h1 className=\"display-2 text-white\">Hello {username}</h1>\n                            {/*<p className=\"text-white mt-0 mb-5\">*/}\n                            {/*    This is your profile page. You can see the progress you've*/}\n                            {/*    made with your work and manage your projects or assigned tasks*/}\n                            {/*</p>*/}\n                            {/* <Button\n                                color=\"info\"\n                                onClick={() => history.push('/admin/user-profile')}\n                            >\n                                Back to your profile\n                            </Button> */}\n                        </Col>\n                    </Row>\n                </Container>\n            </div>\n        </>\n    );\n}\n\nexport default EditHeader;\n","/home/yash/RECT/RECT_ADMIN/front-end/src/components/Headers/Header.js",[],"/home/yash/RECT/RECT_ADMIN/front-end/src/components/Headers/UserHeader.js",["343","344"],"/*!\n\n=========================================================\n* Argon Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\n\n// reactstrap components\nimport { Button, Container, Row, Col } from \"reactstrap\";\nimport { useHistory } from \"react-router-dom\";\n\nconst UserHeader = (props) => {\n    const username = props.userName ? props.userName : null\n\n    const history = useHistory();\n    return (\n        <>\n            <div\n                className=\"header pb-8 pt-5 pt-lg-8 d-flex align-items-center\"\n                style={{\n                    minHeight: \"600px\",\n                    backgroundImage:\n                        \"url(\" + require(\"assets/img/theme/profile-cover.jpg\") + \")\",\n                    backgroundSize: \"cover\",\n                    backgroundPosition: \"center top\"\n                }}\n            >\n                {/* Mask */}\n                <span className=\"mask bg-gradient-default opacity-8\" />\n                {/* Header container */}\n                <Container className=\"d-flex align-items-center\" fluid>\n                    <Row>\n                        {username ?\n                            <>\n                                <Col lg=\"7\" md=\"10\">\n                                    <h1 className=\"display-2 text-white\">Hello {username} </h1>\n                                    <p className=\"text-white mt-0 mb-5\">\n                                        This is your profile page. Here you can edit your details and save it by pressing save button.\n                                    </p>\n                                </Col>\n                            </>\n                            :\n                            <>\n                                <Col lg=\"7\" md=\"10\">\n                                    <h1 className=\"display-2 text-white\">Hello</h1>\n                                    <p className=\"text-white mt-0 mb-5\">\n                                        User not found !! user may have deleted or not registered.\n                                    </p>\n                                </Col>\n                            </>\n                        }\n                    </Row>\n                </Container>\n            </div>\n        </>\n    );\n}\n\nexport default UserHeader;\n","/home/yash/RECT/RECT_ADMIN/front-end/src/variables/charts.js",[],"/home/yash/RECT/RECT_ADMIN/front-end/src/views/examples/Exam.js",["345","346","347","348","349","350","351"],"import React, { useEffect, useState } from \"react\";\nimport {\n    Button,\n    Card,\n    CardHeader,\n    CardBody,\n    FormGroup,\n    Form,\n    Input,\n    Container,\n    Row,\n    Col\n} from \"reactstrap\";\nimport ImageUploader from 'react-images-upload';\nimport UserHeader from \"components/Headers/UserHeader.js\";\nimport EditHeader from \"../../components/Headers/EditHeader\";\nimport { CreatExam } from \"../../network/ApiAxios\";\n\n\nconst Exam = () => {\n    const creatExam = () => {\n\n    }\n\n\n\n\n\n    return (\n        <>\n            <EditHeader />\n            {/* Page content */}\n            <Container className=\"mt--7\" fluid>\n                <Row>\n                    <div className=\"col\">\n                        <Card className=\"bg-secondary shadow\">\n                            <CardHeader className=\"bg-white border-0\">\n                                <Row className=\"align-items-center\">\n                                    <Col xs=\"8\">\n                                        <h3 className=\"mb-0\">Create A New Exam.</h3>\n                                    </Col>\n                                    <Col className=\"text-right\" xs=\"4\">\n                                        <Button\n                                            color=\"primary\"\n                                            href=\"#pablo\"\n                                            onClick={creatExam}\n                                            size=\"sm\"\n                                        >\n                                            Save\n                                    </Button>\n                                    </Col>\n                                </Row>\n                            </CardHeader>\n                            <CardBody>\n                                <Form>\n                                    <h6 className=\"heading-small text-muted mb-4\">\n                                        Exam information\n                                    </h6>\n\n                                </Form>\n                            </CardBody>\n                        </Card>\n                    </div>\n                </Row>\n            </Container>\n        </>\n\n\n    );\n}\n\nexport default Exam;\n","/home/yash/SKTOCARRI/front-end/src/index.js",[],["352","353"],"/home/yash/SKTOCARRI/front-end/src/components/PrivateRoute/AuthRoutes.js",[],"/home/yash/SKTOCARRI/front-end/src/components/PrivateRoute/PrivateRoute.js",[],"/home/yash/SKTOCARRI/front-end/src/layouts/Admin.js",[],"/home/yash/SKTOCARRI/front-end/src/layouts/Auth.js",[],"/home/yash/SKTOCARRI/front-end/src/routes.js",["354","355","356","357","358","359"],"/*!\n\n=========================================================\n* Argon Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport Index from \"views/Index.js\";\nimport Profile from \"views/examples/Profile.js\";\nimport Maps from \"views/examples/Maps.js\";\nimport Register from \"views/examples/Register.js\";\nimport RegisterUser from \"views/examples/RegisterUser.js\";\nimport Login from \"views/examples/Login.js\";\nimport Tables from \"views/examples/Tables.js\";\nimport Icons from \"views/examples/Icons.js\";\nimport ConfirmEmail from \"./views/examples/ConfirmEmail\";\nimport EditProfile from \"./views/examples/EditProfile\";\nimport UsersTable from \"./views/examples/UsersTable\";\nimport ReportTables from \"./views/examples/ReportTables\"\nimport ResetPassword from \"./views/examples/ResetPassword\";\nimport ConfirmPassword from \"./views/examples/ConfirmPassword\";\nimport ResetPasswordSuccess from \"./views/examples/ResetPasswordSuccess\";\nimport Exam from \"views/examples/Exam\";\n\nvar routes = [\n  {\n    path: \"/index\",\n    name: \"Dashboard\",\n    icon: \"ni ni-tv-2 text-primary\",\n    component: Index,\n    layout: \"/admin\",\n    api: false\n  },\n  {\n    path: \"/login\",\n    name: \"Login\",\n    icon: \"ni ni-key-25 text-info\",\n    component: Login,\n    layout: \"/auth\",\n    api: true\n  },\n  {\n    path: \"/register\",\n    name: \"Register\",\n    icon: \"ni ni-circle-08 text-pink\",\n    component: Register,\n    layout: \"/auth\",\n    api: true\n  },\n  {\n    path: \"/confirm-email/:id\",\n    name: \"Confirm Email\",\n    icon: \"ni ni-check-bold text-green\",\n    component: ConfirmEmail,\n    layout: \"/auth\",\n    api: true\n  }, {\n    path: \"/create-question\",\n    name: \"Create Question\",\n    icon: \"ni ni-ruler-pencil text-info\",\n    component: Exam,\n    layout: \"/admin\",\n    api: true\n  },\n  {\n    path: \"/users\",\n    name: \"Users\",\n    icon: \"ni ni-single-02 text-info\",\n    component: UsersTable,\n    layout: \"/admin\",\n    api: true\n  },\n  {\n    path: \"/rp-table\",\n    name: \"Reports\",\n    icon: \"ni ni-folder-17 text-pink\",\n    component: ReportTables,\n    layout: \"/admin\",\n    api: true\n  },\n  {\n    path: \"/reset-password\",\n    name: \"Reset Password\",\n    icon: \"ni ni-folder-17 text-pink\",\n    component: ResetPassword,\n    layout: \"/auth\",\n    api: true\n  },\n  {\n    path: \"/confirm-password/:id\",\n    name: \"Confirm Password\",\n    icon: \"ni ni-folder-17 text-pink\",\n    component: ConfirmPassword,\n    layout: \"/auth\",\n    api: true\n  },\n  {\n    path: \"/reset-success\",\n    name: \"Password Reset Confirmed\",\n    icon: \"ni ni-folder-17 text-pink\",\n    component: ResetPasswordSuccess,\n    layout: \"/auth\",\n    api: false\n  }\n];\nexport default routes;\n","/home/yash/SKTOCARRI/front-end/src/components/Navbars/AdminNavbar.js",["360","361","362","363","364","365"],"/home/yash/SKTOCARRI/front-end/src/components/Navbars/AuthNavbar.js",[],"/home/yash/SKTOCARRI/front-end/src/components/Footers/AuthFooter.js",[],"/home/yash/SKTOCARRI/front-end/src/components/Footers/AdminFooter.js",[],"/home/yash/SKTOCARRI/front-end/src/components/Sidebar/Sidebar.js",[],"/home/yash/SKTOCARRI/front-end/src/views/examples/ConfirmEmail.js",["366"],"/home/yash/SKTOCARRI/front-end/src/views/examples/EditProfile.js",["367"],"/home/yash/SKTOCARRI/front-end/src/views/examples/UsersTable.js",["368","369","370","371","372","373","374","375"],"import React, { useEffect, useState } from 'react';\nimport Header from \"../../components/Headers/Header\";\nimport {\n    Badge,\n    Card,\n    CardHeader,\n    CardFooter,\n    DropdownMenu,\n    DropdownItem,\n    UncontrolledDropdown,\n    DropdownToggle,\n    Media,\n    Pagination,\n    PaginationItem,\n    PaginationLink,\n    Progress,\n    Table,\n    Container,\n    Row,\n    UncontrolledTooltip\n} from \"reactstrap\";\nimport { getAllUsers } from \"../../network/ApiAxios\";\nimport axios from 'axios';\n\nconst UsersTable = (props) => {\n\n    const [users, setUsers] = useState([]);\n    const [currentPage, setCurrentPage] = useState(1);\n    const [usersPerPage, setUsersPerPage] = useState(25);\n\n    useEffect(() => {\n        const runAsync = async () => {\n            const response = await getAllUsers();\n            const { users } = response.data;\n            console.log(users);\n            if (response.data.success) {\n                setUsers([{\n                    name:\"Bhavin Kuriya\",\n                    email:\"bhavinkuriya@gmail.com\",\n                    accountConfirmation:true\n                },{\n                    name:\"Jay Kapadiya\",\n                    email:\"jaykapadiya@gmail.com\",\n                    accountConfirmation:true\n                },{\n                    name:\"John Doe\",\n                    email:\"johndoe@gmail.com\",\n                    accountConfirmation:true\n                },]);\n            }\n        }\n        runAsync();\n    }, []);\n\n    const Pending = () => {\n        return (\n            <>\n                <i className=\"bg-danger\" />\n                Pending\n            </>\n        )\n    }\n    const Approved = () => {\n        return (\n            <>\n                <i className=\"bg-green\" />\n                Approved\n            </>\n        )\n    }\n\n\n\n    const UserList = ({ users }) => {\n        return (\n            users.map((user) => {\n                return (\n                    <tr style={{ cursor: 'pointer' }} key={user._id} onClick={() => {\n                        props.history.push({\n                            pathname: \"/admin/user-profile/\",\n                        })\n                    }}>\n                        <th scope=\"row\">\n                            <Media className=\"align-items-center\">\n                                \n                                <Media>\n                                    <span className=\"mb-0 text-sm\">\n                                        {user.email}\n                                    </span>\n                                </Media>\n                            </Media>\n                        </th>\n                        <td>{user.name}</td>\n                        <td>\n                            <Badge color=\"\" className=\"badge-dot mr-4\">\n                                {\n\n                                    user.accountConfirmation ? <Approved /> : <Pending />\n                                }\n                            </Badge>\n                        </td>\n                    </tr>\n                )\n            })\n\n        )\n    }\n\n\n\n\n    const PaginationComponent = ({ totalUsers, usersPerPage, paginate, currentPage }) => {\n\n        const PageNumber = [];\n        for (let i = 1; i <= Math.ceil(totalUsers / usersPerPage); i++) {\n            PageNumber.push(i);\n        }\n\n        return (\n            <CardFooter className=\"py-4\">\n                <nav aria-label=\"...\">\n                    <Pagination\n                        className=\"pagination justify-content-end mb-0\"\n                        listClassName=\"justify-content-end mb-0\"\n                    >\n\n                        {\n                            PageNumber.map((number) => {\n                                return (\n                                    <PaginationItem key={number} className={currentPage === number ? \"active\" : \"\"}>\n                                        <PaginationLink onClick={() => paginate(number)} >\n                                            {number}\n                                        </PaginationLink>\n                                    </PaginationItem>\n                                )\n                            })\n                        }\n                    </Pagination>\n                </nav>\n            </CardFooter>\n\n        )\n\n    }\n    const paginate = pageNumber => setCurrentPage(pageNumber)\n\n\n    const indexOfLastUser = currentPage * usersPerPage;\n    const indexOfFirstUser = indexOfLastUser - usersPerPage;\n    const currentUsers = users.slice(indexOfFirstUser, indexOfLastUser)\n\n    const getUrl = async () => {\n        return await axios('https://rectgujarat.org/uploads/RECT_HOR.png', {\n            method: \"GET\",\n            headers: { Authorization: 'Bearer eyJhbGciOiJIU' }\n        }).then((response) => {\n            // const data = `data:${response.headers['content-type']};base64,${new Buffer(response.data).toString('base64')}`\n            // const file = new file(data, 'myImage.png')\n            // const data = `${new Buffer(response.data, \"binary\").toString(\"base64\")}`;\n            var blob = new Blob([new Buffer(response.data)], { type: response.headers['content-type'] })\n            var imageUrl = URL.createObjectURL(blob);\n            console.log(blob);\n            return imageUrl\n        });\n\n    }\n\n\n    return (\n        <>\n            <Header />\n            <Container>\n                <Row>\n                    <div className=\"col\">\n                        <Card className=\"shadow\">\n                            <CardHeader className=\"border-0\">\n                                <h3 className=\"mb-0\">Users Table</h3>\n                            </CardHeader>\n                            <Table className=\"align-items-center table-flush\" responsive>\n                                <thead className=\"thead-light\">\n                                    <tr>\n                                        <th scope=\"col\">Email</th>\n                                        <th scope=\"col\">Name</th>\n                                        <th scope=\"col\">Status</th>\n                                        <th />\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    <UserList users={currentUsers} />\n                                </tbody>\n                            </Table>\n                            <PaginationComponent totalUsers={users.length} currentPage={currentPage} usersPerPage={usersPerPage} paginate={paginate} />\n                        </Card>\n                    </div>\n                </Row>\n            </Container>\n        </>\n    );\n}\n\nexport default UsersTable;\n","/home/yash/SKTOCARRI/front-end/src/views/examples/ResetPassword.js",["376","377","378"],"/home/yash/SKTOCARRI/front-end/src/views/examples/ResetPasswordSuccess.js",["379","380","381","382"],"/home/yash/SKTOCARRI/front-end/src/views/examples/ConfirmPassword.js",["383","384","385","386","387"],"/home/yash/SKTOCARRI/front-end/src/network/ApiAxios.js",[],"/home/yash/SKTOCARRI/front-end/src/views/Index.js",["388","389","390"],"import React from \"react\";\n// node.js library that concatenates classes (strings)\nimport classnames from \"classnames\";\n// javascipt plugin for creating charts\nimport Chart from \"chart.js\";\n// react plugin used to create charts\nimport { Line, Bar } from \"react-chartjs-2\";\n// reactstrap components\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  NavItem,\n  NavLink,\n  Nav,\n  Progress,\n  Table,\n  Container,\n  Row,\n  Col\n} from \"reactstrap\";\n\n// core components\nimport {\n  chartOptions,\n  parseOptions,\n  chartExample1,\n  chartExample2\n} from \"variables/charts.js\";\n\nimport Header from \"components/Headers/Header.js\";\n\nclass Index extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeNav: 1,\n      chartExample1Data: \"data1\"\n    };\n    if (window.Chart) {\n      parseOptions(Chart, chartOptions());\n    }\n  }\n  toggleNavs = (e, index) => {\n    e.preventDefault();\n    this.setState({\n      activeNav: index,\n      chartExample1Data:\n        this.state.chartExample1Data === \"data1\" ? \"data2\" : \"data1\"\n    });\n  };\n  render() {\n    return (\n      <>\n        <Header />\n        {/* Page content */}\n        <Container className=\"mt--7\" fluid>\n          <Row>\n            <Col className=\"mb-5 mb-xl-0\" xl=\"8\">\n              <Card className=\"bg-gradient-default shadow\">\n                <CardHeader className=\"bg-transparent\">\n                  <Row className=\"align-items-center\">\n                    <div className=\"col\">\n                      <h6 className=\"text-uppercase text-light ls-1 mb-1\">\n                        Overview\n                      </h6>\n                      <h2 className=\"text-white mb-0\">User Ratio</h2>\n                    </div>\n                    <div className=\"col\">\n                      <Nav className=\"justify-content-end\" pills>\n                        <NavItem>\n                          <NavLink\n                            className={classnames(\"py-2 px-3\", {\n                              active: this.state.activeNav === 1\n                            })}\n                            href=\"#pablo\"\n                            onClick={e => this.toggleNavs(e, 1)}\n                          >\n                            <span className=\"d-none d-md-block\">Month</span>\n                            <span className=\"d-md-none\">M</span>\n                          </NavLink>\n                        </NavItem>\n                        <NavItem>\n                          <NavLink\n                            className={classnames(\"py-2 px-3\", {\n                              active: this.state.activeNav === 2\n                            })}\n                            data-toggle=\"tab\"\n                            href=\"#pablo\"\n                            onClick={e => this.toggleNavs(e, 2)}\n                          >\n                            <span className=\"d-none d-md-block\">Week</span>\n                            <span className=\"d-md-none\">W</span>\n                          </NavLink>\n                        </NavItem>\n                      </Nav>\n                    </div>\n                  </Row>\n                </CardHeader>\n                <CardBody>\n                  {/* Chart */}\n                  <div className=\"chart\">\n                    <Line\n                      data={chartExample1[this.state.chartExample1Data]}\n                      options={chartExample1.options}\n                      getDatasetAtEvent={e => console.log(e)}\n                    />\n                  </div>\n                </CardBody>\n              </Card>\n            </Col>\n            <Col xl=\"4\">\n              <Card className=\"shadow\">\n                <CardHeader className=\"bg-transparent\">\n                  <Row className=\"align-items-center\">\n                    <div className=\"col\">\n                      <h6 className=\"text-uppercase text-muted ls-1 mb-1\">\n                        Exams\n                      </h6>\n                      <h2 className=\"mb-0\">Total Query</h2>\n                    </div>\n                  </Row>\n                </CardHeader>\n                <CardBody>\n                  {/* Chart */}\n                  <div className=\"chart\">\n                    <Bar\n                      data={chartExample2.data}\n                      options={chartExample2.options}\n                    />\n                  </div>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n          {/* <Row className=\"mt-5\">\n            <Col className=\"mb-5 mb-xl-0\" xl=\"8\">\n              <Card className=\"shadow\">\n                <CardHeader className=\"border-0\">\n                  <Row className=\"align-items-center\">\n                    <div className=\"col\">\n                      <h3 className=\"mb-0\">Page visits</h3>\n                    </div>\n                    <div className=\"col text-right\">\n                      <Button\n                        color=\"primary\"\n                        href=\"#pablo\"\n                        onClick={e => e.preventDefault()}\n                        size=\"sm\"\n                      >\n                        See all\n                      </Button>\n                    </div>\n                  </Row>\n                </CardHeader>\n                <Table className=\"align-items-center table-flush\" responsive>\n                  <thead className=\"thead-light\">\n                    <tr>\n                      <th scope=\"col\">Page name</th>\n                      <th scope=\"col\">Visitors</th>\n                      <th scope=\"col\">Unique users</th>\n                      <th scope=\"col\">Bounce rate</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    <tr>\n                      <th scope=\"row\">/argon/</th>\n                      <td>4,569</td>\n                      <td>340</td>\n                      <td>\n                        <i className=\"fas fa-arrow-up text-success mr-3\" />{\" \"}\n                        46,53%\n                      </td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">/argon/index.html</th>\n                      <td>3,985</td>\n                      <td>319</td>\n                      <td>\n                        <i className=\"fas fa-arrow-down text-warning mr-3\" />{\" \"}\n                        46,53%\n                      </td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">/argon/charts.html</th>\n                      <td>3,513</td>\n                      <td>294</td>\n                      <td>\n                        <i className=\"fas fa-arrow-down text-warning mr-3\" />{\" \"}\n                        36,49%\n                      </td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">/argon/tables.html</th>\n                      <td>2,050</td>\n                      <td>147</td>\n                      <td>\n                        <i className=\"fas fa-arrow-up text-success mr-3\" />{\" \"}\n                        50,87%\n                      </td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">/argon/profile.html</th>\n                      <td>1,795</td>\n                      <td>190</td>\n                      <td>\n                        <i className=\"fas fa-arrow-down text-danger mr-3\" />{\" \"}\n                        46,53%\n                      </td>\n                    </tr>\n                  </tbody>\n                </Table>\n              </Card>\n            </Col>\n            <Col xl=\"4\">\n              <Card className=\"shadow\">\n                <CardHeader className=\"border-0\">\n                  <Row className=\"align-items-center\">\n                    <div className=\"col\">\n                      <h3 className=\"mb-0\">Social traffic</h3>\n                    </div>\n                    <div className=\"col text-right\">\n                      <Button\n                        color=\"primary\"\n                        href=\"#pablo\"\n                        onClick={e => e.preventDefault()}\n                        size=\"sm\"\n                      >\n                        See all\n                      </Button>\n                    </div>\n                  </Row>\n                </CardHeader>\n                <Table className=\"align-items-center table-flush\" responsive>\n                  <thead className=\"thead-light\">\n                    <tr>\n                      <th scope=\"col\">Referral</th>\n                      <th scope=\"col\">Visitors</th>\n                      <th scope=\"col\" />\n                    </tr>\n                  </thead>\n                  <tbody>\n                    <tr>\n                      <th scope=\"row\">Facebook</th>\n                      <td>1,480</td>\n                      <td>\n                        <div className=\"d-flex align-items-center\">\n                          <span className=\"mr-2\">60%</span>\n                          <div>\n                            <Progress\n                              max=\"100\"\n                              value=\"60\"\n                              barClassName=\"bg-gradient-danger\"\n                            />\n                          </div>\n                        </div>\n                      </td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">Facebook</th>\n                      <td>5,480</td>\n                      <td>\n                        <div className=\"d-flex align-items-center\">\n                          <span className=\"mr-2\">70%</span>\n                          <div>\n                            <Progress\n                              max=\"100\"\n                              value=\"70\"\n                              barClassName=\"bg-gradient-success\"\n                            />\n                          </div>\n                        </div>\n                      </td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">Google</th>\n                      <td>4,807</td>\n                      <td>\n                        <div className=\"d-flex align-items-center\">\n                          <span className=\"mr-2\">80%</span>\n                          <div>\n                            <Progress max=\"100\" value=\"80\" />\n                          </div>\n                        </div>\n                      </td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">Instagram</th>\n                      <td>3,678</td>\n                      <td>\n                        <div className=\"d-flex align-items-center\">\n                          <span className=\"mr-2\">75%</span>\n                          <div>\n                            <Progress\n                              max=\"100\"\n                              value=\"75\"\n                              barClassName=\"bg-gradient-info\"\n                            />\n                          </div>\n                        </div>\n                      </td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">twitter</th>\n                      <td>2,645</td>\n                      <td>\n                        <div className=\"d-flex align-items-center\">\n                          <span className=\"mr-2\">30%</span>\n                          <div>\n                            <Progress\n                              max=\"100\"\n                              value=\"30\"\n                              barClassName=\"bg-gradient-warning\"\n                            />\n                          </div>\n                        </div>\n                      </td>\n                    </tr>\n                  </tbody>\n                </Table>\n              </Card>\n            </Col>\n          </Row>\n         */}\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default Index;\n","/home/yash/SKTOCARRI/front-end/src/views/examples/Profile.js",["391","392","393","394","395"],"/home/yash/SKTOCARRI/front-end/src/views/examples/Maps.js",[],"/home/yash/SKTOCARRI/front-end/src/views/examples/RegisterUser.js",["396","397","398","399","400","401","402","403","404","405","406"],"/home/yash/SKTOCARRI/front-end/src/views/examples/Login.js",["407","408"],"/home/yash/SKTOCARRI/front-end/src/views/examples/Register.js",["409"],"/home/yash/SKTOCARRI/front-end/src/views/examples/Tables.js",[],"/home/yash/SKTOCARRI/front-end/src/views/examples/Icons.js",[],"/home/yash/SKTOCARRI/front-end/src/views/examples/Exam.js",["410","411","412","413","414","415","416","417"],"import React, { useEffect, useState } from \"react\";\nimport {\n    Button,\n    Container,\n    Card,\n    CardHeader,\n    CardBody,\n    FormGroup,\n    Form,\n    Input,\n    Media,\n    Badge,\n    Table,\n    InputGroupAddon,\n    InputGroupText,\n    InputGroup,\n    Row,\n    Col\n} from \"reactstrap\";\nimport ImageUploader from 'react-images-upload';\nimport UserHeader from \"components/Headers/UserHeader.js\";\nimport EditHeader from \"../../components/Headers/EditHeader\";\nimport { CreatExam } from \"../../network/ApiAxios\";\n\n\nconst Exam = () => {\n    const creatExam = () => {\n\n    }\n\n\n    const [questions,setQuestions] = React.useState()\n\n\n\n    const UserList = (users) => {\n        return (\n            users.map((user) => {\n                return (\n                    <tr style={{ cursor: 'pointer' }} onClick={() => {\n                    }}>\n                        <th scope=\"row\">\n                            <Media className=\"align-items-center\">\n                                \n                                <Media>\n                                    <span className=\"mb-0 text-sm\">\n                                        {user.email}\n                                    </span>\n                                </Media>\n                            </Media>\n                        </th>\n                        <td>{user.name}</td>\n                        <td>\n                            <Badge color=\"\" className=\"badge-dot mr-4\">\n                                <Button>\n                                    Edit\n                                </Button>\n                            </Badge>\n                        </td>\n                    </tr>\n                )\n            })\n\n        )\n    }\n\n\n    return (\n        <>\n            <EditHeader />\n            {/* Page content */}\n            <Container className=\"mt--7\" fluid>\n                <Row>\n                    <div className=\"col\">\n                        <Card className=\"bg-secondary shadow\">\n                            <CardHeader className=\"bg-white border-0\">\n                                <Row className=\"align-items-center\">\n                                    <Col xs=\"8\">\n                                        <h3 className=\"mb-0\">Create A New Question.</h3>\n                                    </Col>\n                                    <Col className=\"text-right\" xs=\"4\">\n                                        <Button\n                                            color=\"primary\"\n                                            href=\"#pablo\"\n                                            onClick={creatExam}\n                                            size=\"sm\"\n                                        >\n                                            Save\n                                    </Button>\n                                    </Col>\n                                </Row>\n                            </CardHeader>\n                            <CardBody>\n                                <Form>\n                                    <FormGroup>\n                                        <InputGroup className=\"input-group-alternative mb-3\">\n                                            <Input placeholder=\"Questions\" type=\"text\" autoComplete=\"new-email\" />\n                                        </InputGroup>\n                                    </FormGroup>\n                                    <FormGroup>\n                                        <InputGroup className=\"input-group-alternative\">\n                                            <Input placeholder=\"Career Options\" type=\"text\" autoComplete=\"new-password\" />\n                                        </InputGroup>\n                                    </FormGroup>\n                                </Form>\n                            </CardBody>\n                        </Card>\n                    </div>\n                </Row>\n\n            <>\n                <Row>\n                    <div className=\"col\">\n                        <Card className=\"shadow\">\n                            <CardHeader className=\"border-0\">\n                                <h3 className=\"mb-0\">Users Table</h3>\n                            </CardHeader>\n                            <Table className=\"align-items-center table-flush\" responsive>\n                                <thead className=\"thead-light\">\n                                    <tr>\n                                        <th scope=\"col\">Question</th>\n                                        <th scope=\"col\">Catogary</th>\n                                        <th scope=\"col\">Oprations</th>\n                                        <th />\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    <UserList users={questions} />\n                                </tbody>\n                            </Table>\n                        </Card>\n                    </div>\n                </Row>\n            </>\n            </Container>\n        </>\n\n\n    );\n}\n\nexport default Exam;\n","/home/yash/SKTOCARRI/front-end/src/config.js",[],"/home/yash/SKTOCARRI/front-end/src/components/Headers/EditHeader.js",["418","419","420"],"/*!\n\n=========================================================\n* Argon Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\n\n// reactstrap components\nimport { Button, Container, Row, Col } from \"reactstrap\";\nimport { useHistory } from \"react-router-dom\";\n\nconst EditHeader = () => {\n\n    const username = JSON.parse(localStorage.getItem(\"admin\")).name;\n    const history = useHistory();\n\n    return (\n        <>\n            <div\n                className=\"header pb-8 pt-5 pt-lg-8 d-flex align-items-center\"\n                style={{\n                    minHeight: \"600px\",\n                    backgroundImage:\n                        \"url(\" + require(\"assets/img/theme/profile-cover.jpg\") + \")\",\n                    backgroundSize: \"cover\",\n                    backgroundPosition: \"center top\"\n                }}\n            >\n                {/* Mask */}\n                <span className=\"mask bg-gradient-default opacity-8\" />\n                {/* Header container */}\n                <Container className=\"d-flex align-items-center\" fluid>\n                    <Row>\n                        <Col lg=\"12\" md=\"10\">\n                            <h1 className=\"display-2 text-white\">Hello Admin</h1>\n                            {/*<p className=\"text-white mt-0 mb-5\">*/}\n                            {/*    This is your profile page. You can see the progress you've*/}\n                            {/*    made with your work and manage your projects or assigned tasks*/}\n                            {/*</p>*/}\n                            {/* <Button\n                                color=\"info\"\n                                onClick={() => history.push('/admin/user-profile')}\n                            >\n                                Back to your profile\n                            </Button> */}\n                        </Col>\n                    </Row>\n                </Container>\n            </div>\n        </>\n    );\n}\n\nexport default EditHeader;\n","/home/yash/SKTOCARRI/front-end/src/components/Headers/Header.js",[],"/home/yash/SKTOCARRI/front-end/src/components/Headers/UserHeader.js",["421","422"],"/*!\n\n=========================================================\n* Argon Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\n\n// reactstrap components\nimport { Button, Container, Row, Col } from \"reactstrap\";\nimport { useHistory } from \"react-router-dom\";\n\nconst UserHeader = (props) => {\n    const username = props.userName ? props.userName : null\n\n    const history = useHistory();\n    return (\n        <>\n            <div\n                className=\"header pb-8 pt-5 pt-lg-8 d-flex align-items-center\"\n                style={{\n                    minHeight: \"600px\",\n                    backgroundImage:\n                        \"url(\" + require(\"assets/img/theme/profile-cover.jpg\") + \")\",\n                    backgroundSize: \"cover\",\n                    backgroundPosition: \"center top\"\n                }}\n            >\n                {/* Mask */}\n                <span className=\"mask bg-gradient-default opacity-8\" />\n                {/* Header container */}\n                <Container className=\"d-flex align-items-center\" fluid>\n                    <Row>\n                        {username ?\n                            <>\n                                <Col lg=\"7\" md=\"10\">\n                                    <h1 className=\"display-2 text-white\">Hello Admin </h1>\n                                    <p className=\"text-white mt-0 mb-5\">\n                                        This is your profile page. Here you can edit your details and save it by pressing save button.\n                                    </p>\n                                </Col>\n                            </>\n                            :\n                            <>\n                                <Col lg=\"7\" md=\"10\">\n                                    <h1 className=\"display-2 text-white\">Hello</h1>\n                                    <p className=\"text-white mt-0 mb-5\">\n                                        User not found !! user may have deleted or not registered.\n                                    </p>\n                                </Col>\n                            </>\n                        }\n                    </Row>\n                </Container>\n            </div>\n        </>\n    );\n}\n\nexport default UserHeader;\n","/home/yash/SKTOCARRI/front-end/src/variables/charts.js",[],"/home/yash/SKTOCARRI/front-end/src/views/examples/ReportTables.js",["423","424","425","426","427","428","429"],"import React, { useEffect, useState } from 'react';\nimport Header from \"../../components/Headers/Header\";\nimport {\n    Badge,\n    Card,\n    CardHeader,\n    CardFooter,\n    DropdownMenu,\n    DropdownItem,\n    UncontrolledDropdown,\n    DropdownToggle,\n    Media,\n    Pagination,\n    PaginationItem,\n    PaginationLink,\n    Progress,\n    Table,\n    Container,\n    Row,\n    UncontrolledTooltip\n} from \"reactstrap\";\nimport { getAllUsers } from \"../../network/ApiAxios\";\nimport axios from 'axios';\n\nconst ReportTables = (props) => {\n\n    const [users, setUsers] = useState([]);\n    const [currentPage, setCurrentPage] = useState(1);\n    const [usersPerPage, setUsersPerPage] = useState(25);\n\n    useEffect(() => {\n        const runAsync = async () => {\n            const response = await getAllUsers();\n            const { users } = response.data;\n            console.log(users);\n            if (response.data.success) {\n                setUsers(users);\n            }\n        }\n        runAsync();\n    }, []);\n\n    const Pending = () => {\n        return (\n            <>\n                <i className=\"bg-danger\" />\n                Pending\n            </>\n        )\n    }\n    const Approved = () => {\n        return (\n            <>\n                <i className=\"bg-green\" />\n                Approved\n            </>\n        )\n    }\n\n\n\n    const UserList = ({ users }) => {\n        return (\n            users.map((user) => {\n                return (\n                    <tr style={{ cursor: 'pointer' }} key={user._id} onClick={() => {\n                        props.history.push({\n                            pathname: \"/admin/user-profile/\",\n                            state: user._id\n                        })\n                    }}>\n                        <th scope=\"row\">\n                            <Media className=\"align-items-center\">\n                                <a\n                                    className=\"avatar rounded-circle mr-3\"\n                                    href=\"#pablo\"\n                                    onClick={e => e.preventDefault()}\n                                >\n                                    <img\n                                        alt=\"...\"\n                                        src={'http://172.105.61.90:5100' + user.photo}\n                                    />\n                                </a>\n                                <Media>\n                                    <span className=\"mb-0 text-sm\">\n                                        {user.email}\n                                    </span>\n                                </Media>\n                            </Media>\n                        </th>\n                        <td>{user.fname + ' ' + user.lname}</td>\n                        <td>\n                            <Badge color=\"\" className=\"badge-dot mr-4\">\n                                {\n\n                                    user.accountConfirmation ? <Approved /> : <Pending />\n                                }\n                            </Badge>\n                        </td>\n                    </tr>\n                )\n            })\n\n        )\n    }\n\n\n\n\n    const PaginationComponent = ({ totalUsers, usersPerPage, paginate, currentPage }) => {\n\n        const PageNumber = [];\n        for (let i = 1; i <= Math.ceil(totalUsers / usersPerPage); i++) {\n            PageNumber.push(i);\n        }\n\n        return (\n            <CardFooter className=\"py-4\">\n                <nav aria-label=\"...\">\n                    <Pagination\n                        className=\"pagination justify-content-end mb-0\"\n                        listClassName=\"justify-content-end mb-0\"\n                    >\n\n                        {\n                            PageNumber.map((number) => {\n                                return (\n                                    <PaginationItem key={number} className={currentPage === number ? \"active\" : \"\"}>\n                                        <PaginationLink onClick={() => paginate(number)} >\n                                            {number}\n                                        </PaginationLink>\n                                    </PaginationItem>\n                                )\n                            })\n                        }\n                    </Pagination>\n                </nav>\n            </CardFooter>\n\n        )\n\n    }\n    const paginate = pageNumber => setCurrentPage(pageNumber)\n\n\n    const indexOfLastUser = currentPage * usersPerPage;\n    const indexOfFirstUser = indexOfLastUser - usersPerPage;\n    const currentUsers = users.slice(indexOfFirstUser, indexOfLastUser)\n\n    const getUrl = async () => {\n        return await axios('https://rectgujarat.org/uploads/RECT_HOR.png', {\n            method: \"GET\",\n            headers: { Authorization: 'Bearer eyJhbGciOiJIU' }\n        }).then((response) => {\n            // const data = `data:${response.headers['content-type']};base64,${new Buffer(response.data).toString('base64')}`\n            // const file = new file(data, 'myImage.png')\n            // const data = `${new Buffer(response.data, \"binary\").toString(\"base64\")}`;\n            var blob = new Blob([new Buffer(response.data)], { type: response.headers['content-type'] })\n            var imageUrl = URL.createObjectURL(blob);\n            console.log(blob);\n            return imageUrl\n        });\n\n    }\n\n\n    return (\n        <>\n            <Header />\n            <Container>\n                <Row>\n                    <div className=\"col\">\n                        <Card className=\"shadow\">\n                            <CardHeader className=\"border-0\">\n                                <h3 className=\"mb-0\">Reports Table</h3>\n                            </CardHeader>\n                            <Table className=\"align-items-center table-flush\" responsive>\n                                <thead className=\"thead-light\">\n                                    <tr>\n                                        <th scope=\"col\">Last Users</th>\n                                        <th scope=\"col\">Name</th>\n                                        <th scope=\"col\">Status</th>\n                                        <th />\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    <UserList users={currentUsers} />\n                                </tbody>\n                            </Table>\n                            <img\n                                alt=\"...\"\n                                src={getUrl()}\n                            />\n                            <PaginationComponent totalUsers={users.length} currentPage={currentPage} usersPerPage={usersPerPage} paginate={paginate} />\n                        </Card>\n                    </div>\n                </Row>\n            </Container>\n        </>\n    );\n}\n\nexport default ReportTables;\n",{"ruleId":"430","replacedBy":"431"},{"ruleId":"432","replacedBy":"433"},{"ruleId":"434","severity":1,"message":"435","line":20,"column":8,"nodeType":"436","messageId":"437","endLine":20,"endColumn":12},{"ruleId":"434","severity":1,"message":"438","line":24,"column":8,"nodeType":"436","messageId":"437","endLine":24,"endColumn":14},{"ruleId":"434","severity":1,"message":"439","line":25,"column":8,"nodeType":"436","messageId":"437","endLine":25,"endColumn":13},{"ruleId":"434","severity":1,"message":"440","line":26,"column":5,"nodeType":"436","messageId":"437","endLine":26,"endColumn":9},{"ruleId":"434","severity":1,"message":"441","line":27,"column":5,"nodeType":"436","messageId":"437","endLine":27,"endColumn":14},{"ruleId":"434","severity":1,"message":"442","line":28,"column":5,"nodeType":"436","messageId":"437","endLine":28,"endColumn":20},{"ruleId":"434","severity":1,"message":"443","line":29,"column":5,"nodeType":"436","messageId":"437","endLine":29,"endColumn":19},{"ruleId":"434","severity":1,"message":"444","line":30,"column":5,"nodeType":"436","messageId":"437","endLine":30,"endColumn":10},{"ruleId":"434","severity":1,"message":"445","line":31,"column":5,"nodeType":"436","messageId":"437","endLine":31,"endColumn":15},{"ruleId":"446","severity":1,"message":"447","line":29,"column":8,"nodeType":"448","endLine":29,"endColumn":10,"suggestions":"449"},{"ruleId":"434","severity":1,"message":"450","line":34,"column":8,"nodeType":"436","messageId":"437","endLine":34,"endColumn":18},{"ruleId":"434","severity":1,"message":"451","line":8,"column":5,"nodeType":"436","messageId":"437","endLine":8,"endColumn":17},{"ruleId":"434","severity":1,"message":"452","line":9,"column":5,"nodeType":"436","messageId":"437","endLine":9,"endColumn":17},{"ruleId":"434","severity":1,"message":"453","line":10,"column":5,"nodeType":"436","messageId":"437","endLine":10,"endColumn":25},{"ruleId":"434","severity":1,"message":"454","line":11,"column":5,"nodeType":"436","messageId":"437","endLine":11,"endColumn":19},{"ruleId":"434","severity":1,"message":"455","line":16,"column":5,"nodeType":"436","messageId":"437","endLine":16,"endColumn":13},{"ruleId":"434","severity":1,"message":"456","line":20,"column":5,"nodeType":"436","messageId":"437","endLine":20,"endColumn":24},{"ruleId":"434","severity":1,"message":"457","line":29,"column":26,"nodeType":"436","messageId":"437","endLine":29,"endColumn":41},{"ruleId":"434","severity":1,"message":"458","line":24,"column":5,"nodeType":"436","messageId":"437","endLine":24,"endColumn":15},{"ruleId":"434","severity":1,"message":"459","line":32,"column":5,"nodeType":"436","messageId":"437","endLine":32,"endColumn":8},{"ruleId":"434","severity":1,"message":"460","line":35,"column":25,"nodeType":"436","messageId":"437","endLine":35,"endColumn":30},{"ruleId":"434","severity":1,"message":"458","line":24,"column":5,"nodeType":"436","messageId":"437","endLine":24,"endColumn":15},{"ruleId":"434","severity":1,"message":"459","line":32,"column":5,"nodeType":"436","messageId":"437","endLine":32,"endColumn":8},{"ruleId":"434","severity":1,"message":"461","line":35,"column":23,"nodeType":"436","messageId":"437","endLine":35,"endColumn":37},{"ruleId":"434","severity":1,"message":"460","line":35,"column":39,"nodeType":"436","messageId":"437","endLine":35,"endColumn":44},{"ruleId":"434","severity":1,"message":"462","line":36,"column":8,"nodeType":"436","messageId":"437","endLine":36,"endColumn":13},{"ruleId":"434","severity":1,"message":"463","line":1,"column":27,"nodeType":"436","messageId":"437","endLine":1,"endColumn":35},{"ruleId":"434","severity":1,"message":"464","line":2,"column":10,"nodeType":"436","messageId":"437","endLine":2,"endColumn":19},{"ruleId":"434","severity":1,"message":"465","line":3,"column":9,"nodeType":"436","messageId":"437","endLine":3,"endColumn":24},{"ruleId":"446","severity":1,"message":"466","line":12,"column":8,"nodeType":"448","endLine":12,"endColumn":10,"suggestions":"467"},{"ruleId":"434","severity":1,"message":"468","line":10,"column":3,"nodeType":"436","messageId":"437","endLine":10,"endColumn":9},{"ruleId":"434","severity":1,"message":"455","line":17,"column":3,"nodeType":"436","messageId":"437","endLine":17,"endColumn":11},{"ruleId":"434","severity":1,"message":"469","line":18,"column":3,"nodeType":"436","messageId":"437","endLine":18,"endColumn":8},{"ruleId":"434","severity":1,"message":"470","line":28,"column":5,"nodeType":"436","messageId":"437","endLine":28,"endColumn":10},{"ruleId":"434","severity":1,"message":"471","line":42,"column":12,"nodeType":"436","messageId":"437","endLine":42,"endColumn":19},{"ruleId":"446","severity":1,"message":"472","line":68,"column":8,"nodeType":"448","endLine":68,"endColumn":10,"suggestions":"473"},{"ruleId":"474","severity":1,"message":"475","line":245,"column":65,"nodeType":"476","messageId":"477","endLine":245,"endColumn":90},{"ruleId":"474","severity":1,"message":"475","line":262,"column":65,"nodeType":"476","messageId":"477","endLine":262,"endColumn":90},{"ruleId":"434","severity":1,"message":"459","line":32,"column":5,"nodeType":"436","messageId":"437","endLine":32,"endColumn":8},{"ruleId":"434","severity":1,"message":"478","line":2,"column":17,"nodeType":"436","messageId":"437","endLine":2,"endColumn":26},{"ruleId":"434","severity":1,"message":"450","line":19,"column":8,"nodeType":"436","messageId":"437","endLine":19,"endColumn":18},{"ruleId":"434","severity":1,"message":"479","line":21,"column":10,"nodeType":"436","messageId":"437","endLine":21,"endColumn":14},{"ruleId":"434","severity":1,"message":"480","line":29,"column":12,"nodeType":"436","messageId":"437","endLine":29,"endColumn":17},{"ruleId":"434","severity":1,"message":"481","line":30,"column":12,"nodeType":"436","messageId":"437","endLine":30,"endColumn":16},{"ruleId":"434","severity":1,"message":"482","line":30,"column":18,"nodeType":"436","messageId":"437","endLine":30,"endColumn":25},{"ruleId":"434","severity":1,"message":"483","line":50,"column":12,"nodeType":"436","messageId":"437","endLine":50,"endColumn":17},{"ruleId":"434","severity":1,"message":"484","line":51,"column":12,"nodeType":"436","messageId":"437","endLine":51,"endColumn":21},{"ruleId":"434","severity":1,"message":"485","line":52,"column":12,"nodeType":"436","messageId":"437","endLine":52,"endColumn":18},{"ruleId":"434","severity":1,"message":"486","line":53,"column":12,"nodeType":"436","messageId":"437","endLine":53,"endColumn":20},{"ruleId":"487","severity":1,"message":"488","line":55,"column":36,"nodeType":"489","messageId":"490","endLine":55,"endColumn":44,"fix":"491"},{"ruleId":"434","severity":1,"message":"458","line":24,"column":5,"nodeType":"436","messageId":"437","endLine":24,"endColumn":15},{"ruleId":"492","severity":1,"message":"493","line":108,"column":25,"nodeType":"494","endLine":111,"endColumn":26},{"ruleId":"434","severity":1,"message":"468","line":21,"column":10,"nodeType":"436","messageId":"437","endLine":21,"endColumn":16},{"ruleId":"434","severity":1,"message":"495","line":27,"column":11,"nodeType":"436","messageId":"437","endLine":27,"endColumn":18},{"ruleId":"434","severity":1,"message":"468","line":21,"column":10,"nodeType":"436","messageId":"437","endLine":21,"endColumn":16},{"ruleId":"434","severity":1,"message":"495","line":27,"column":11,"nodeType":"436","messageId":"437","endLine":27,"endColumn":18},{"ruleId":"434","severity":1,"message":"478","line":1,"column":17,"nodeType":"436","messageId":"437","endLine":1,"endColumn":26},{"ruleId":"434","severity":1,"message":"463","line":1,"column":28,"nodeType":"436","messageId":"437","endLine":1,"endColumn":36},{"ruleId":"434","severity":1,"message":"441","line":7,"column":5,"nodeType":"436","messageId":"437","endLine":7,"endColumn":14},{"ruleId":"434","severity":1,"message":"444","line":9,"column":5,"nodeType":"436","messageId":"437","endLine":9,"endColumn":10},{"ruleId":"434","severity":1,"message":"496","line":14,"column":8,"nodeType":"436","messageId":"437","endLine":14,"endColumn":21},{"ruleId":"434","severity":1,"message":"450","line":15,"column":8,"nodeType":"436","messageId":"437","endLine":15,"endColumn":18},{"ruleId":"434","severity":1,"message":"497","line":17,"column":10,"nodeType":"436","messageId":"437","endLine":17,"endColumn":19},{"ruleId":"430","replacedBy":"498"},{"ruleId":"432","replacedBy":"499"},{"ruleId":"434","severity":1,"message":"500","line":19,"column":8,"nodeType":"436","messageId":"437","endLine":19,"endColumn":15},{"ruleId":"434","severity":1,"message":"435","line":20,"column":8,"nodeType":"436","messageId":"437","endLine":20,"endColumn":12},{"ruleId":"434","severity":1,"message":"501","line":22,"column":8,"nodeType":"436","messageId":"437","endLine":22,"endColumn":20},{"ruleId":"434","severity":1,"message":"438","line":24,"column":8,"nodeType":"436","messageId":"437","endLine":24,"endColumn":14},{"ruleId":"434","severity":1,"message":"439","line":25,"column":8,"nodeType":"436","messageId":"437","endLine":25,"endColumn":13},{"ruleId":"434","severity":1,"message":"502","line":27,"column":8,"nodeType":"436","messageId":"437","endLine":27,"endColumn":19},{"ruleId":"434","severity":1,"message":"440","line":26,"column":5,"nodeType":"436","messageId":"437","endLine":26,"endColumn":9},{"ruleId":"434","severity":1,"message":"441","line":27,"column":5,"nodeType":"436","messageId":"437","endLine":27,"endColumn":14},{"ruleId":"434","severity":1,"message":"442","line":28,"column":5,"nodeType":"436","messageId":"437","endLine":28,"endColumn":20},{"ruleId":"434","severity":1,"message":"443","line":29,"column":5,"nodeType":"436","messageId":"437","endLine":29,"endColumn":19},{"ruleId":"434","severity":1,"message":"444","line":30,"column":5,"nodeType":"436","messageId":"437","endLine":30,"endColumn":10},{"ruleId":"434","severity":1,"message":"445","line":31,"column":5,"nodeType":"436","messageId":"437","endLine":31,"endColumn":15},{"ruleId":"446","severity":1,"message":"447","line":29,"column":8,"nodeType":"448","endLine":29,"endColumn":10,"suggestions":"503"},{"ruleId":"434","severity":1,"message":"450","line":34,"column":8,"nodeType":"436","messageId":"437","endLine":34,"endColumn":18},{"ruleId":"434","severity":1,"message":"451","line":8,"column":5,"nodeType":"436","messageId":"437","endLine":8,"endColumn":17},{"ruleId":"434","severity":1,"message":"452","line":9,"column":5,"nodeType":"436","messageId":"437","endLine":9,"endColumn":17},{"ruleId":"434","severity":1,"message":"453","line":10,"column":5,"nodeType":"436","messageId":"437","endLine":10,"endColumn":25},{"ruleId":"434","severity":1,"message":"454","line":11,"column":5,"nodeType":"436","messageId":"437","endLine":11,"endColumn":19},{"ruleId":"434","severity":1,"message":"455","line":16,"column":5,"nodeType":"436","messageId":"437","endLine":16,"endColumn":13},{"ruleId":"434","severity":1,"message":"456","line":20,"column":5,"nodeType":"436","messageId":"437","endLine":20,"endColumn":24},{"ruleId":"434","severity":1,"message":"457","line":29,"column":26,"nodeType":"436","messageId":"437","endLine":29,"endColumn":41},{"ruleId":"434","severity":1,"message":"504","line":152,"column":11,"nodeType":"436","messageId":"437","endLine":152,"endColumn":17},{"ruleId":"434","severity":1,"message":"458","line":24,"column":5,"nodeType":"436","messageId":"437","endLine":24,"endColumn":15},{"ruleId":"434","severity":1,"message":"459","line":32,"column":5,"nodeType":"436","messageId":"437","endLine":32,"endColumn":8},{"ruleId":"434","severity":1,"message":"460","line":35,"column":25,"nodeType":"436","messageId":"437","endLine":35,"endColumn":30},{"ruleId":"434","severity":1,"message":"463","line":1,"column":27,"nodeType":"436","messageId":"437","endLine":1,"endColumn":35},{"ruleId":"434","severity":1,"message":"464","line":2,"column":10,"nodeType":"436","messageId":"437","endLine":2,"endColumn":19},{"ruleId":"434","severity":1,"message":"465","line":3,"column":9,"nodeType":"436","messageId":"437","endLine":3,"endColumn":24},{"ruleId":"446","severity":1,"message":"466","line":12,"column":8,"nodeType":"448","endLine":12,"endColumn":10,"suggestions":"505"},{"ruleId":"434","severity":1,"message":"458","line":24,"column":5,"nodeType":"436","messageId":"437","endLine":24,"endColumn":15},{"ruleId":"434","severity":1,"message":"459","line":32,"column":5,"nodeType":"436","messageId":"437","endLine":32,"endColumn":8},{"ruleId":"434","severity":1,"message":"461","line":35,"column":23,"nodeType":"436","messageId":"437","endLine":35,"endColumn":37},{"ruleId":"434","severity":1,"message":"460","line":35,"column":39,"nodeType":"436","messageId":"437","endLine":35,"endColumn":44},{"ruleId":"434","severity":1,"message":"462","line":36,"column":8,"nodeType":"436","messageId":"437","endLine":36,"endColumn":13},{"ruleId":"434","severity":1,"message":"468","line":10,"column":3,"nodeType":"436","messageId":"437","endLine":10,"endColumn":9},{"ruleId":"434","severity":1,"message":"455","line":17,"column":3,"nodeType":"436","messageId":"437","endLine":17,"endColumn":11},{"ruleId":"434","severity":1,"message":"469","line":18,"column":3,"nodeType":"436","messageId":"437","endLine":18,"endColumn":8},{"ruleId":"434","severity":1,"message":"470","line":28,"column":5,"nodeType":"436","messageId":"437","endLine":28,"endColumn":10},{"ruleId":"434","severity":1,"message":"471","line":42,"column":12,"nodeType":"436","messageId":"437","endLine":42,"endColumn":19},{"ruleId":"446","severity":1,"message":"472","line":68,"column":8,"nodeType":"448","endLine":68,"endColumn":10,"suggestions":"506"},{"ruleId":"474","severity":1,"message":"475","line":245,"column":65,"nodeType":"476","messageId":"477","endLine":245,"endColumn":90},{"ruleId":"474","severity":1,"message":"475","line":262,"column":65,"nodeType":"476","messageId":"477","endLine":262,"endColumn":90},{"ruleId":"434","severity":1,"message":"478","line":2,"column":17,"nodeType":"436","messageId":"437","endLine":2,"endColumn":26},{"ruleId":"434","severity":1,"message":"450","line":19,"column":8,"nodeType":"436","messageId":"437","endLine":19,"endColumn":18},{"ruleId":"434","severity":1,"message":"479","line":21,"column":10,"nodeType":"436","messageId":"437","endLine":21,"endColumn":14},{"ruleId":"434","severity":1,"message":"480","line":29,"column":12,"nodeType":"436","messageId":"437","endLine":29,"endColumn":17},{"ruleId":"434","severity":1,"message":"481","line":30,"column":12,"nodeType":"436","messageId":"437","endLine":30,"endColumn":16},{"ruleId":"434","severity":1,"message":"482","line":30,"column":18,"nodeType":"436","messageId":"437","endLine":30,"endColumn":25},{"ruleId":"434","severity":1,"message":"483","line":50,"column":12,"nodeType":"436","messageId":"437","endLine":50,"endColumn":17},{"ruleId":"434","severity":1,"message":"484","line":51,"column":12,"nodeType":"436","messageId":"437","endLine":51,"endColumn":21},{"ruleId":"434","severity":1,"message":"485","line":52,"column":12,"nodeType":"436","messageId":"437","endLine":52,"endColumn":18},{"ruleId":"434","severity":1,"message":"486","line":53,"column":12,"nodeType":"436","messageId":"437","endLine":53,"endColumn":20},{"ruleId":"487","severity":1,"message":"488","line":55,"column":36,"nodeType":"489","messageId":"490","endLine":55,"endColumn":44,"fix":"507"},{"ruleId":"434","severity":1,"message":"458","line":24,"column":5,"nodeType":"436","messageId":"437","endLine":24,"endColumn":15},{"ruleId":"492","severity":1,"message":"493","line":108,"column":25,"nodeType":"494","endLine":111,"endColumn":26},{"ruleId":"434","severity":1,"message":"459","line":32,"column":5,"nodeType":"436","messageId":"437","endLine":32,"endColumn":8},{"ruleId":"434","severity":1,"message":"478","line":1,"column":17,"nodeType":"436","messageId":"437","endLine":1,"endColumn":26},{"ruleId":"434","severity":1,"message":"463","line":1,"column":28,"nodeType":"436","messageId":"437","endLine":1,"endColumn":36},{"ruleId":"434","severity":1,"message":"442","line":14,"column":5,"nodeType":"436","messageId":"437","endLine":14,"endColumn":20},{"ruleId":"434","severity":1,"message":"443","line":15,"column":5,"nodeType":"436","messageId":"437","endLine":15,"endColumn":19},{"ruleId":"434","severity":1,"message":"496","line":20,"column":8,"nodeType":"436","messageId":"437","endLine":20,"endColumn":21},{"ruleId":"434","severity":1,"message":"450","line":21,"column":8,"nodeType":"436","messageId":"437","endLine":21,"endColumn":18},{"ruleId":"434","severity":1,"message":"497","line":23,"column":10,"nodeType":"436","messageId":"437","endLine":23,"endColumn":19},{"ruleId":"434","severity":1,"message":"508","line":32,"column":22,"nodeType":"436","messageId":"437","endLine":32,"endColumn":34},{"ruleId":"434","severity":1,"message":"468","line":21,"column":10,"nodeType":"436","messageId":"437","endLine":21,"endColumn":16},{"ruleId":"434","severity":1,"message":"509","line":26,"column":11,"nodeType":"436","messageId":"437","endLine":26,"endColumn":19},{"ruleId":"434","severity":1,"message":"495","line":27,"column":11,"nodeType":"436","messageId":"437","endLine":27,"endColumn":18},{"ruleId":"434","severity":1,"message":"468","line":21,"column":10,"nodeType":"436","messageId":"437","endLine":21,"endColumn":16},{"ruleId":"434","severity":1,"message":"495","line":27,"column":11,"nodeType":"436","messageId":"437","endLine":27,"endColumn":18},{"ruleId":"434","severity":1,"message":"451","line":8,"column":5,"nodeType":"436","messageId":"437","endLine":8,"endColumn":17},{"ruleId":"434","severity":1,"message":"452","line":9,"column":5,"nodeType":"436","messageId":"437","endLine":9,"endColumn":17},{"ruleId":"434","severity":1,"message":"453","line":10,"column":5,"nodeType":"436","messageId":"437","endLine":10,"endColumn":25},{"ruleId":"434","severity":1,"message":"454","line":11,"column":5,"nodeType":"436","messageId":"437","endLine":11,"endColumn":19},{"ruleId":"434","severity":1,"message":"455","line":16,"column":5,"nodeType":"436","messageId":"437","endLine":16,"endColumn":13},{"ruleId":"434","severity":1,"message":"456","line":20,"column":5,"nodeType":"436","messageId":"437","endLine":20,"endColumn":24},{"ruleId":"434","severity":1,"message":"457","line":29,"column":26,"nodeType":"436","messageId":"437","endLine":29,"endColumn":41},"no-native-reassign",["510"],"no-negated-in-lhs",["511"],"no-unused-vars","'Maps' is defined but never used.","Identifier","unusedVar","'Tables' is defined but never used.","'Icons' is defined but never used.","'Form' is defined but never used.","'FormGroup' is defined but never used.","'InputGroupAddon' is defined but never used.","'InputGroupText' is defined but never used.","'Input' is defined but never used.","'InputGroup' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'id' and 'props.history'. Either include them or remove the dependency array.","ArrayExpression",["512"],"'UserHeader' is defined but never used.","'DropdownMenu' is defined but never used.","'DropdownItem' is defined but never used.","'UncontrolledDropdown' is defined but never used.","'DropdownToggle' is defined but never used.","'Progress' is defined but never used.","'UncontrolledTooltip' is defined but never used.","'setUsersPerPage' is assigned a value but never used.","'CardHeader' is defined but never used.","'Row' is defined but never used.","'login' is defined but never used.","'forgotPassword' is defined but never used.","'Toast' is defined but never used.","'useState' is defined but never used.","'useParams' is defined but never used.","'confirmRegister' is defined but never used.","React Hook useEffect has a missing dependency: 'props.history'. Either include it or remove the dependency array.",["513"],"'Button' is defined but never used.","'Table' is defined but never used.","'Label' is defined but never used.","'checked' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.location.state'. Either include it or remove the dependency array.",["514"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'useEffect' is defined but never used.","'edit' is defined but never used.","'error' is assigned a value but never used.","'user' is assigned a value but never used.","'setUser' is assigned a value but never used.","'photo' is assigned a value but never used.","'signature' is assigned a value but never used.","'aadhar' is assigned a value but never used.","'castCert' is assigned a value but never used.","new-parens","Missing '()' invoking a constructor.","NewExpression","missing",{"range":"515","text":"516"},"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'history' is assigned a value but never used.","'ImageUploader' is defined but never used.","'CreatExam' is defined but never used.",["510"],["511"],"'Profile' is defined but never used.","'RegisterUser' is defined but never used.","'EditProfile' is defined but never used.",["517"],"'getUrl' is assigned a value but never used.",["518"],["519"],{"range":"520","text":"516"},"'setQuestions' is assigned a value but never used.","'username' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"521","fix":"522"},{"desc":"523","fix":"524"},{"desc":"525","fix":"526"},[1752,1752],"()",{"desc":"521","fix":"527"},{"desc":"523","fix":"528"},{"desc":"525","fix":"529"},[1752,1752],"Update the dependencies array to be: [id, props.history]",{"range":"530","text":"531"},"Update the dependencies array to be: [props.history]",{"range":"532","text":"533"},"Update the dependencies array to be: [props.location.state]",{"range":"534","text":"535"},{"range":"536","text":"531"},{"range":"537","text":"533"},{"range":"538","text":"535"},[877,879],"[id, props.history]",[363,365],"[props.history]",[2123,2125],"[props.location.state]",[877,879],[363,365],[2123,2125]]